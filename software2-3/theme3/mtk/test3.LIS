

   1               	        .data
   2               	        .align 2
   3               	environ:
   4 0000 0000 0000 	        .long 0
   5               	 	.align	2
   6               	
   7               	.extern main
   8               	.extern exit
   9               	.extern monitor_begin
  10               	.extern hardware_init_hook
  11               	.extern software_init_hook
  12               	.extern atexit
  13               	.extern __do_global_dtors
  14               	.extern __bss_start
  15               	.extern _end
  16               	
  17               	.global start
  18               	
  19               	.text
  20               	.even
  21               		/* See if user supplied their own stack (__stack != 0).  If not, then
  22               		 * default to using the value of %sp as set by the ROM monitor.
  23               		 */
  24 0000 207C 0000 		movel	#__stack, %a0
  24      0000 
  25 0006 B1FC 0000 		cmpl	#0, %a0
  25      0000 
  26 000c 6702      		jbeq    1f
  27 000e 2E48      		movel	%a0, %sp
  28               	1:
  29               		/* set up initial stack frame */
  30 0010 4E56 FFF8 		link	%a6, #-8
  31               	
  32               		/* zero out the bss section */
  33 0014 223C 0000 		movel	#__bss_start, %d1
  33      0000 
  34 001a 203C 0000 		movel	#_end, %d0
  34      0000 
  35 0020 B280      		cmpl	%d0, %d1
  36 0022 6712      		jbeq	3f
  37 0024 2041      		movl	%d1, %a0
  38 0026 9081      		subl	%d1, %d0
  39 0028 5380      		subql	#1, %d0
  40               	2:
  41 002a 4218      		clrb	(%a0)+
  42 002c 51C8 FFFC 		dbra	%d0, 2b
  43 0030 4240      		clrw	%d0
  44 0032 5380      		subql	#1, %d0
  45 0034 64F4      		jbcc	2b
  46               	3:
  47               		/* jmp monitor initialize after making up  bss */
  48 0036 4EF9 0000 		jmp	monitor_begin
  48      0000 
  49               	start:
  50               		/* monitor returns here.
  51               		 * re-setup stack for C programs.
  52               	         * See if user supplied their own stack (__stack != 0).  If not, then


  53               		 * default to using the value of %sp as set by the ROM monitor.
  54               		 */
  55 003c 207C 0000 		movel	#__stack, %a0
  55      0000 
  56 0042 B1FC 0000 		cmpl	#0, %a0
  56      0000 
  57 0048 6702      		jbeq    skip
  58 004a 2E48      		movel	%a0, %sp
  59               	skip:
  60               		/* set up initial stack frame */
  61 004c 4E56 FFF8 		link	%a6, #-8
  62               	
  63               		/*
  64               		 * initialize target specific stuff. Only execute these
  65               		 * functions it they exist.
  66               		 */
  67 0050 41F9 0000 		lea	hardware_init_hook, %a0
  67      0000 
  68 0056 B1FC 0000 		cmpl	#0, %a0
  68      0000 
  69 005c 6702      		jbeq	4f
  70 005e 4E90      		jsr     (%a0)
  71               	4:
  72 0060 41F9 0000 		lea	software_init_hook, %a0
  72      0000 
  73 0066 B1FC 0000 		cmpl	#0, %a0
  73      0000 
  74 006c 6702      		jbeq	5f
  75 006e 4E90      		jsr     (%a0)
  76               	5:
  77               	
  78               		/*
  79               		 * call the main routine from the application to get it going.
  80               		 * main (argc, argv, environ)
  81               		 * we pass argv as a pointer to NULL.
  82               		 */
  83               	
  84               		/* put __do_global_dtors in the atexit list so 
  85               		 * the destructors get run */
  86               	/* 
  87               		movel	#__do_global_dtors,(%sp)
  88               		jsr	atexit
  89               		movel	#__FINI_SECTION__,(%sp)
  90               		jsr	atexit
  91               		jsr	__INIT_SECTION__
  92               	*/
  93               		
  94               		** setup argv, argc and jump into main
  95 0070 4878 0000 	        pea     0
  96 0074 4879 0000 	        pea     environ
  96      0000 
  97 007a 486F 0004 	        pea     %sp@(4)
  98 007e 4878 0000 	        pea     0
  99 0082 4EB9 0000 		jsr	main
  99      0000 
 100 0088 2F00      		movel	%d0, %sp@-
 101               	


 102 008a 4EB9 0000 	        jsr     exit
 102      0000 
 103               	.even




   1               	***************************************************************
   2               	** 各種レジスタ定義
   3               	***************************************************************
   4               	***************
   5               	** レジスタ群の先頭
   6               	***************
   7               	.equ REGBASE, 	0xFFF000 	| DMAP を使用．
   8               	.equ IOBASE, 	0x00d00000
   9               		
  10               	***************
  11               	** 割り込み関係のレジスタ
  12               	***************
  13               	.equ IVR, REGBASE+0x300 	| 割り込みベクタレジスタ
  14               	.equ IMR, REGBASE+0x304 	| 割り込みマスクレジスタ
  15               	.equ ISR, REGBASE+0x30c 	| 割り込みステータスレジスタ
  16               	.equ IPR, REGBASE+0x310 	| 割り込みペンディングレジスタ
  17               		
  18               	***************
  19               	** タイマ関係のレジスタ
  20               	***************
  21               	.equ TCTL1, 	REGBASE+0x600 	| タイマ１コントロールレジスタ
  22               	.equ TPRER1, 	REGBASE+0x602 	| タイマ１プリスケーラレジスタ
  23               	.equ TCMP1, 	REGBASE+0x604 	| タイマ１コンペアレジスタ
  24               	.equ TCN1, 	REGBASE+0x608 	| タイマ１カウンタレジスタ
  25               	.equ TSTAT1, 	REGBASE+0x60a 	| タイマ１ステータスレジスタ
  26               		
  27               	***************
  28               	** UART1（送受信）関係のレジスタ
  29               	***************
  30               	.equ USTCNT1, 	REGBASE+0x900 	| UART1 ステータス/コントロールレジスタ
  31               	.equ UBAUD1, 	REGBASE+0x902 	| UART1 ボーコントロールレジスタ
  32               	.equ URX1, 	REGBASE+0x904 	| UART1 受信レジスタ
  33               	.equ UTX1, 	REGBASE+0x906 	| UART1 送信レジスタ
  34               		
  35               	***************
  36               	** LED
  37               	***************
  38               	.equ LED7, IOBASE+0x000002f
  39               	.equ LED6, IOBASE+0x000002d
  40               	.equ LED5, IOBASE+0x000002b
  41               	.equ LED4, IOBASE+0x0000029
  42               	.equ LED3, IOBASE+0x000003f
  43               	.equ LED2, IOBASE+0x000003d
  44               	.equ LED1, IOBASE+0x000003b
  45               	.equ LED0, IOBASE+0x0000039
  46               	
  47               	
  48               	
  49               	
  50               	**********************************************
  51               	.extern start
  52               	.global monitor_begin
  53               	.global TSTAT1
  54               	monitor_begin:
  55               	
  56               	
  57               	


  58               	***************************************************************
  59               	** スタック領域の確保
  60               	***************************************************************
  61               	.section .bss
  62               	.even
  63 0000 0000 0000 	SYS_STK: .ds.b 0x4000 	| システムスタック領域
  63      0000 0000 
  63      0000 0000 
  63      0000 0000 
  63      0000 0000 
  64               	
  65               	.even
  66               	SYS_STK_TOP: 		| システムスタック領域の最後尾
  67               	
  68               	.even
  69 4000 0000 0000 	task_p:	.ds.l 1
  70               	
  71               		
  72               	***************************************************************
  73               	** 初期化
  74               	***************************************************************
  75               	.section .text
  76               	.even
  77               	boot:   ***************************************************
  78               		** スーパーバイザ & 各種設定を行っている最中の割込禁止
  79               		***************************************************
  80 0000 46FC 2700 		move.w 	#0x2700,%SR
  81 0004 4FF9 0000 		lea.l	SYS_STK_TOP, %SP | Set SSP
  81      0000 
  82               		
  83               		******************************
  84               		** 割り込みコントローラの初期化
  85               		*****************************
  86 000a 13FC 0040 		move.b 	#0x40, IVR | ユーザ割り込みベクタ番号を0x40+level に設定．
  86      00FF F300 
  87 0012 23FC 00FF 		move.l 	#0x00ff3ffb,IMR | 全割り込みマスク
  87      3FFB 00FF 
  87      F304 
  88               		
  89               		******************************************************************
  90               		** 送受信 (UART1) 関係の初期化 (割り込みレベルは 4 に固定されている)
  91               		*****************************************************************
  92 001c 33FC E10C 		move.w 	#0xe10c, USTCNT1 
  92      00FF F900 
  93 0024 33FC 0038 		move.w 	#0x0038, UBAUD1 | baud rate = 230400 bps
  93      00FF F902 
  94               		
  95               		*********************************************************
  96               		** タイマ関係の初期化 (割り込みレベルは 6 に固定されている)
  97               		*********************************************************
  98 002c 33FC 0004 		move.w 	#0x0004, TCTL1 
  98      00FF F600 
  99               	
 100 0034 21FC 0000 		move.l 	#uart1_interrupt, 0x110
 100      0000 0110 
 101 003c 21FC 0000 		move.l 	#timer_interrupt, 0x118
 101      0000 0118 


 102               	
 103               		***************
 104               		**キューの初期化
 105               		***************
 106 0044 4EBA 00D8 		jsr 	Init_Q
 107               		
 108 0048 21FC 0000 		move.l	#SYSTEM_CALL,0x080
 108      0000 0080 
 109 0050 23FC 000F 		move.l	#0x00f3ff9, IMR
 109      3FF9 00FF 
 109      F304 
 110               		
 111 005a 46FC 0000 		move.w 	#0x0000, %SR | USER MODE, LEVEL 0
 112 005e 4EF9 0000 		jmp	start
 112      0000 
 113               		**bra 	MAIN
 114               		
 115               	***************
 116               	** システムコール番号
 117               	***************
 118               	.equ SYSCALL_NUM_GETSTRING, 	1
 119               	.equ SYSCALL_NUM_PUTSTRING, 	2
 120               	.equ SYSCALL_NUM_RESET_TIMER, 	3
 121               	.equ SYSCALL_NUM_SET_TIMER, 	4
 122               	.equ SYSCALL_NUM_SKIPMT,	5
 123               		
 124               	****************************************************************
 125               	*** プログラム領域
 126               	****************************************************************
 127               	.section .text
 128               	.even
 129               	MAIN:
 130               	
 131               	
 132               	
 133               	
 134               	
 135               	
 136               	
 137               	
 138               	
 139               	
 140               	****************************************************************
 141               	*** 初期値のあるデータ領域
 142               	****************************************************************
 143               	.section .data
 144 0000 2A2A 2A2A 	TMSG:	.ascii "******\r\n" 	| \r: 行頭へ (キャリッジリターン)
 144      2A2A 0D0A 
 145               	.even 				| \n: 次の行へ (ラインフィード)
 146 0008 0000      	TTC:	.dc.w 0
 147               	.even
 148               		
 149               	****************************************************************
 150               	*** 初期値の無いデータ領域
 151               	****************************************************************
 152               	.section .bss
 153 4004 0000 0000 	BUF: .ds.b 256 			| BUF[256]


 153      0000 0000 
 153      0000 0000 
 153      0000 0000 
 153      0000 0000 
 154               	.even
 155 4104 0000 0000 	USR_STK: .ds.b 0x4000 		| ユーザスタック領域
 155      0000 0000 
 155      0000 0000 
 155      0000 0000 
 155      0000 0000 
 156               	.even
 157               	USR_STK_TOP: 			| ユーザスタック領域の最後尾
 158               		
 159               		
 160               		
 161               		
 162               		
 163               	*******************************
 164               	.section .bss
 165 8104 0000 0000 	Queue0:		.ds.b	274	
 165      0000 0000 
 165      0000 0000 
 165      0000 0000 
 165      0000 0000 
 166 8216 0000 0000 	Queue1:		.ds.b	274
 166      0000 0000 
 166      0000 0000 
 166      0000 0000 
 166      0000 0000 
 167               	
 168               	.section .text
 169               		.equ	BF_START, 0
 170               		.equ	BF_END, 255
 171               		.equ	top, 256
 172               		.equ	out, 260
 173               		.equ	in, 264
 174               		.equ	bottom, 268
 175               		.equ	s, 272
 176               	
 177               	
 178               	**************************
 179               	**送受信割り込み
 180               	**************************
 181               		
 182               	uart1_interrupt:
 183 0064 48E7 F000 		movem.l %d0-%d3, -(%sp)      
 184               	
 185 0068 3039 00FF 		move.w 	UTX1, %d0
 185      F906 
 186 006e 0280 0000 		andi.l 	#0x8000, %d0
 186      8000 
 187 0074 6700 0008 		beq 	uart1_interrupt_receive
 188 0078 7200      		move.l 	#0, %d1
 189 007a 4EBA 01B6 		jsr 	INTERPUT
 190               		
 191               	uart1_interrupt_receive:
 192 007e 3639 00FF 		move.w 	URX1, %d3


 192      F904 
 193 0084 1403      		move.b	%d3, %d2
 194 0086 0283 0000 		andi.l	#0x2000, %d3
 194      2000 
 195 008c 6700 000C 		beq	uart1_interrupt_end
 196 0090 7200      		move.l 	#0, %d1
 197 0092 4EBA 0220 		jsr 	INTERGET
 198 0096 6000 0002 		bra	uart1_interrupt_end
 199               		
 200               	uart1_interrupt_end:	
 201 009a 4CDF 000F 		movem.l (%sp)+, %d0-%d3
 202 009e 4E73      		rte
 203               		
 204               	
 205               	***************************************
 206               	** タイマ用ハード割り込みインターフェース
 207               	***************************************
 208               	timer_interrupt:
 209 00a0 3039 00FF 	    move.w 	TSTAT1, %d0        	/*TSTATをd0レジスタに読み込み*/
 209      F60A 
 210 00a6 0240 0001 	    andi.w	#0x01, %d0
 211 00aa 0C40 0000 	    cmpi.w	#0, %d0			/*第0ビットを確認（1ならば割り込み発生）*/
 212 00ae 6700 000E 	    beq     	timer_interrupt_end	/*0ならば割り込み処理を終了*/
 213 00b2 33FC 0000 	    move.w  	#0, TSTAT1        	/*TSTATをリセット*/
 213      00FF F60A 
 214 00ba 4EBA 0276 	    jsr     	CALL_RP           	/*割り込み時に呼び出すルーチンを実行*/
 215               	timer_interrupt_end:
 216 00be 4E73      	    rte                       		/*割り込み終了*/
 217               	    
 218               	    
 219               	****************************
 220               	** SYSTEM_CALL
 221               	** 入力
 222               	** d0:システムコール番号
 223               	** d1以降:システムコールの引数
 224               	** 出力
 225               	** d0:システムコール呼び出しの結果
 226               	****************************
 227               	
 228               	SYSTEM_CALL:
 229               	
 230               	SYSTEM_CALL_SKIPMT:
 231 00c0 0C80 0000 		cmp.l	#5, %d0
 231      0005 
 232 00c6 6600 0008 		bne	SYSTEM_CALL1	
 233 00ca 4EBA FFD4 		jsr	timer_interrupt
 234 00ce 4E73      		rte
 235               		
 236               	SYSTEM_CALL1:	
 237 00d0 48E7 7000 		movem.l	%d1-%d3,-(%sp)		/*レジスタの退避*/
 238 00d4 0C80 0000 		cmp.l	#1,%d0
 238      0001 
 239 00da 6600 000A 		bne	SYSTEM_CALL2		/*システムコール番号が１でないならば分岐*/
 240 00de 4EBA 01EE 		jsr	GETSTRING		/*GETSTRINGを呼び出す*/
 241 00e2 6000 0034 		bra	SYSTEM_CALL_FINISH
 242               		
 243               	SYSTEM_CALL2:


 244 00e6 0C80 0000 		cmp.l	#2,%d0
 244      0002 
 245 00ec 6600 000A 		bne	SYSTEM_CALL3		/*システムコール番号が2でないならば分岐*/
 246 00f0 4EBA 017E 		jsr	PUTSTRING		/*PUTSTRINGを呼び出す*/
 247 00f4 6000 0022 		bra	SYSTEM_CALL_FINISH
 248               	
 249               	SYSTEM_CALL3:
 250 00f8 0C80 0000 		cmp.l	#3,%d0
 250      0003 
 251 00fe 6600 000A 		bne	SYSTEM_CALL4		/*システムコール番号が3でないならば分岐*/
 252 0102 4EBA 01FE 		jsr	RESET_TIMER		/*RESET_TIMERを呼び出す*/
 253 0106 6000 0010 		bra	SYSTEM_CALL_FINISH
 254               	
 255               	SYSTEM_CALL4:
 256 010a 0C80 0000 		cmp.l	#4,%d0
 256      0004 
 257 0110 6600 0006 		bne	SYSTEM_CALL_FINISH	/*システムコール番号が4でないならば分岐*/
 258 0114 4EBA 01F6 		jsr	SET_TIMER		/*SET_TIMERを呼び出す*/
 259               	
 260               	SYSTEM_CALL_FINISH:
 261 0118 4CDF 000E 		movem.l	(%sp)+,%d1-%d3		/*レジスタの復帰*/
 262 011c 4E73      		rte
 263               	    
 264               	    
 265               	***************************
 266               	**初期化処理
 267               	***************************
 268               	Init_Q:
 269 011e 4EBA 0008 		jsr 	Init_Q0
 270 0122 4EBA 002A 		jsr 	Init_Q1
 271 0126 4E75      		rts
 272               	
 273               	Init_Q0:
 274 0128 43F9 0000 		lea.l	Queue0, %a1
 274      0000 
 275 012e 2449      		move.l	%a1, %a2
 276 0130 D5FC 0000 		add.l	#BF_END, %a2
 276      00FF 
 277 0136 2349 0100 		move.l	%a1, top(%a1)
 278 013a 2349 0104 		move.l	%a1, out(%a1)
 279 013e 2349 0108 		move.l	%a1, in(%a1)
 280 0142 234A 010C 		move.l	%a2, bottom(%a1)
 281 0146 137C 0000 		move.b	#0x00, s(%a1)
 281      0110 
 282 014c 4E75      		rts
 283               	
 284               	Init_Q1:	
 285 014e 43F9 0000 		lea.l	Queue1, %a1
 285      0000 
 286 0154 2449      		move.l	%a1, %a2
 287 0156 D5FC 0000 		add.l	#BF_END, %a2
 287      00FF 
 288 015c 2349 0100 		move.l	%a1, top(%a1)
 289 0160 2349 0104 		move.l	%a1, out(%a1)
 290 0164 2349 0108 		move.l	%a1, in(%a1)
 291 0168 234A 010C 		move.l	%a2, bottom(%a1)
 292 016c 137C 0000 		move.b	#0x00, s(%a1)


 292      0110 
 293 0172 4E75      		rts
 294               	
 295               	****************************
 296               	**SelectQueue
 297               	****************************
 298               	SelectQueue:
 299 0174 227C 0000 		movea.l	#Queue0,%a1		/*a1はキューの先頭アドレス*/
 299      0000 
 300 017a 0C40 0000 		cmp	#0, %d0
 301 017e 6700 0010 		beq	End_SelectQueue
 302 0182 227C 0000 		movea.l	#Queue1,%a1
 302      0000 
 303 0188 0C40 0001 		cmp	#1, %d0
 304 018c 6700 0002 		beq	End_SelectQueue
 305               	End_SelectQueue:
 306 0190 4E75      		rts	
 307               	
 308               	*************************
 309               	INQ:
 310 0192 40E7      		move.w	 %SR, -(%sp)
 311 0194 46FC 2700 		move.w	#0x2700, %SR
 312 0198 48E7 20F0 		movem.l	%a0-%a3/%d2, -(%sp)	/*レジスタの退避*/
 313 019c 4EBA FFD6 		jsr	SelectQueue		/*SelectQueueで編集するキューの先頭をa1へ*/
 314 01a0 7000      		move.l	#0, %d0			/*失敗判定に使用*/
 315 01a2 4EBA 0026 		jsr	PUT_BUF
 316 01a6 4CDF 0F04 		movem.l	(%sp)+, %a0-%a3/%d2	/*レジスタの回復*/
 317 01aa 46DF      		move.w 	(%sp)+, %SR
 318 01ac 4E75      		rts
 319               	
 320               	OUTQ:
 321 01ae 40E7      		move.w 	%SR, -(%sp)
 322 01b0 46FC 2700 		move.w	#0x2700, %SR
 323 01b4 48E7 20F0 		movem.l	%a0-%a3/%d2, -(%sp)	/*レジスタの退避*/
 324 01b8 4EBA FFBA 		jsr	SelectQueue		/*SelectQueueで編集するキューの先頭をa1へ*/
 325 01bc 7000      		move.l	#0, %d0
 326 01be 4EBA 003E 		jsr	GET_BUF
 327 01c2 4CDF 0F04 		movem.l	(%sp)+, %a0-%a3/%d2	/*レジスタの回復*/
 328 01c6 46DF      		move.w 	(%sp)+, %SR
 329 01c8 4E75      		rts
 330               	
 331               	*************************
 332               	**PUT_BUF
 333               	** a1: キューの先頭アドレス
 334               	** a2: 比較用アドレスレジスタ
 335               	** a3: キュー内データの格納先アドレス
 336               	*************************
 337               	PUT_BUF:
 338 01ca 3429 0110 		move	s(%a1), %d2
 339 01ce 0C42 0100 		cmp	 #0x100, %d2
 340 01d2 6700 0028 		beq	END_PUT_BUF
 341 01d6 2669 0108 		movea.l in(%a1), %a3
 342 01da 1681      		move.b	%d1, (%a3)
 343 01dc 2469 010C 		movea.l	bottom(%a1), %a2
 344 01e0 B5E9 0108 		cmpa.l	in(%a1), %a2
 345 01e4 6700 000A 		beq	STEP1_PUT_BUF
 346 01e8 52A9 0108 		add.l	#1, in(%a1)


 347 01ec 6000 0008 		bra	STEP2_PUT_BUF
 348               	
 349               	STEP1_PUT_BUF:
 350 01f0 2369 0100 		move.l	top(%a1), in(%a1)
 350      0108 
 351               	
 352               	
 353               	STEP2_PUT_BUF:
 354 01f6 5269 0110 		addq	#1, s(%a1)
 355 01fa 7001      		move.l	#1, %d0			/*書き込み成功*/
 356               	
 357               	END_PUT_BUF:	
 358 01fc 4E75      		rts
 359               	
 360               	
 361               	****************************
 362               	**GET_BUF
 363               	** a1: キューの先頭アドレス
 364               	** a2: 比較用アドレスレジスタ
 365               	** a3: キュー内データの読み出し元アドレス
 366               	***************************	
 367               	GET_BUF:	
 368 01fe 3429 0110 		move	s(%a1), %d2
 369 0202 0C42 0000 		cmp	 #0x0, %d2
 370 0206 6700 0028 		beq	END_GET_BUF
 371 020a 2669 0104 		movea.l out(%a1), %a3
 372 020e 1213      		move.b	(%a3), %d1
 373 0210 2469 010C 		movea.l	bottom(%a1), %a2
 374 0214 B5E9 0104 		cmpa.l	out(%a1), %a2
 375 0218 6700 000A 		beq	STEP1_GET_BUF
 376 021c 52A9 0104 		add.l	#1, out(%a1)
 377 0220 6000 0008 		bra	STEP2_GET_BUF
 378               	
 379               	STEP1_GET_BUF:
 380 0224 2369 0100 		move.l	top(%a1), out(%a1)
 380      0104 
 381               	
 382               	
 383               	STEP2_GET_BUF:
 384 022a 5369 0110 		subq	#1, s(%a1)
 385 022e 7001      		move.l	#1, %d0			/*書き込み成功*/
 386               	
 387               	END_GET_BUF:	
 388 0230 4E75      		rts
 389               	
 390               	**********************
 391               	** INTERPUT
 392               	** 入力: ch ->　d1
 393               	**********************
 394               	INTERPUT:
 395 0232 48E7 00F0 		movem.l %a0-%a3, -(%sp)		
 396 0236 40E7      		move.w 	%SR, -(%sp)
 397 0238 46FC 2700 		move.w 	#0x2700, %SR		/*走行レベル7に設定*/
 398               	
 399 023c 0C41 0000 		cmp 	#0, %d1
 400 0240 6600 0026 		bne 	END_INTERPUT		/*ch!=0なら何もせず復帰*/
 401               	


 402 0244 7001      		moveq.l #1, %d0
 403 0246 4EBA FF66 		jsr 	OUTQ			/*OUTQ(1,%d1)を実行*/
 404               		
 405 024a 0C00 0000 		cmp.b 	#0, %d0
 406 024e 6600 000E 		bne 	OUTQ_FAIL		/*OUTQが失敗なら送信割り込みをマスク*/
 407               	
 408 0252 33FC E108 		move.w 	#0xe108, USTCNT1	/*送信割り込みをマスク*/
 408      00FF F900 
 409 025a 6000 000C 		bra 	END_INTERPUT
 410               	
 411               	OUTQ_FAIL:
 412 025e 0641 0800 		add.w 	#0x800, %d1		/*ヘッダ付与*/
 413 0262 33C1 00FF 		move.w 	%d1, UTX1		/*UTX1に送信*/
 413      F906 
 414               	
 415               	END_INTERPUT:
 416 0268 46DF      		move.w 	(%sp)+, %SR
 417 026a 4CDF 0F00 		movem.l (%sp)+, %a0-%a3
 418 026e 4E75      		rts
 419               	
 420               	
 421               	******************
 422               	**PUTSTRING
 423               	** 入力:
 424               	**	ch ->　d1
 425               	**	p  ->　d2
 426               	**	size ->　d3
 427               	** 出力:
 428               	**	実際送信したデータ数->d0 
 429               	******************
 430               	
 431               	PUTSTRING:
 432 0270 48E7 7880 		movem.l %d1-%d4/%a0, -(%sp)
 433 0274 0C41 0000 		cmp 	#0, %d1
 434 0278 6600 0034 		bne 	END_PUTSTRING		/*ch≠0ならなにもせず復帰*/
 435 027c 7800      		move.l	 #0, %d4		| sz<-0
 436 027e 2042      		move.l 	%d2, %a0		| i<-p
 437 0280 0C43 0000 		cmp 	#0, %d3
 438 0284 6700 0026 		beq 	PUTSTRING_STEP3		/*size=0なら分岐*/
 439               	
 440               	PUTSTRING_STEP1:
 441 0288 B644      		cmp 	%d4, %d3
 442 028a 6700 0018 		beq 	PUTSTRING_STEP2		/*sz=sizeなら分岐*/
 443 028e 7001      		move.l	 #1, %d0
 444 0290 1218      		move.b 	(%a0)+, %d1
 445 0292 4EBA FEFE 		jsr 	INQ
 446 0296 0C40 0000 		cmp 	#0, %d0
 447 029a 6700 0008 		beq 	PUTSTRING_STEP2		/*INQ失敗なら分岐*/
 448 029e 5244      		add 	#1, %d4			| sz++
 449 02a0 6000 FFE6 		bra 	PUTSTRING_STEP1
 450               	
 451               	PUTSTRING_STEP2:
 452 02a4 33FC E10C 		move.w 	#0xe10c, USTCNT1	/*送信割り込み許可*/
 452      00FF F900 
 453               	
 454               	PUTSTRING_STEP3:
 455 02ac 2004      		move.l 	%d4, %d0


 456               	
 457               	END_PUTSTRING:
 458 02ae 4CDF 011E 		movem.l (%sp)+, %d1-%d4/%a0
 459 02b2 4E75      		rts
 460               	    
 461               	*******************
 462               	** INTERGET
 463               	** 入力: ch->d1
 464               	**	 data->d2
 465               	******************
 466               	
 467               	INTERGET:
 468 02b4 48E7 E000 		movem.l	%d0-%d2, -(%sp)		/*レジスタの退避*/
 469 02b8 0C01 0000 		cmpi.b	#0, %d1
 470 02bc 6600 000A 		bne	END_INTERGET		/*ch=0なら何もせず復帰*/
 471 02c0 7000      		move.l	#0x0, %d0
 472 02c2 2202      		move.l	%d2, %d1
 473 02c4 4EBA FECC 		jsr	INQ			/*OUTQ(1,%d1)を実行*/
 474               	
 475               	END_INTERGET:
 476 02c8 4CDF 0007 		movem.l	(%sp)+, %d0-%d2		/*レジスタの回復*/
 477 02cc 4E75      		rts
 478               	
 479               	
 480               	************
 481               	** GETSTRING
 482               	** 入力:ch -> d1
 483               	**	p  -> d2 /* データ書き込み先の先頭アドレス*/
 484               	**	size ->d3 /*取り出すデータサイズ*/
 485               	** 戻り値: sz ->d0	
 486               	*************
 487               	
 488               	GETSTRING:
 489 02ce 48E7 7880 		movem.l	%d1-%d4/%a0, -(%sp)		/*レジスタの退避*/
 490 02d2 0C01 0000 		cmpi.b	#0, %d1				/*chが0以外なら何もしない*/
 491 02d6 6600 0022 		bne	END_GETSTRING
 492 02da 7800      		move.l	#0, %d4				/*%d4をszとして使用*/
 493 02dc 2042      		movea.l	%d2, %a0			/*%a0をiとして使用*/
 494               		
 495               	GETSTRING_LOOP:	
 496 02de B843      		cmp	%d3, %d4			/*sz = sizeならば分岐*/
 497 02e0 6700 0018 		beq	END_GETSTRING	
 498 02e4 7000      		move.l	#0, %d0				/*受信キューを指定*/
 499 02e6 4EBA FEC6 		jsr	OUTQ				/*OUTQにより受信キューからデータ読み込み*/
 500 02ea 0C00 0000 		cmpi.b	#0, %d0				/*OUTQが失敗ならば分岐*/
 501 02ee 6700 000A 		beq	END_GETSTRING
 502 02f2 10C1      		move.b	%d1, (%a0)+			/*i番地にdataをコピーし、i++*/
 503 02f4 5284      		addq.l	#1, %d4				/*sz++*/
 504 02f6 6000 FFE6 		bra	GETSTRING_LOOP
 505               	
 506               	END_GETSTRING:
 507 02fa 2004      		move.l	%d4, %d0			/*sz -> %d0*/
 508 02fc 4CDF 011E 		movem.l	(%sp)+, %d1-%d4/%a0		/*レジスタの回復*/
 509 0300 4E75      		rts
 510               	
 511               	**********************
 512               	** RESET_TIMER


 513               	** TCTLを割り込み不可に設定
 514               	**********************
 515               		
 516               	RESET_TIMER:
 517 0302 33FC 0004 		move.w	#0x0004, TCTL1			/* TCTLを割り込み不可*/
 517      00FF F600 
 518 030a 4E75      		rts
 519               	
 520               	
 521               		
 522               	**********************
 523               	** SET_TIMER
 524               	** 入力
 525               	** タイマ割り込み発生周期t -> %d1	
 526               	** 割り込み時に起動するルーチンの先頭アドレス-> %d2
 527               	**********************
 528               		
 529               	SET_TIMER:
 530 030c 48E7 6000 		movem.l	%d1-%d2, -(%sp)	/* レジスタ退避 */
 531 0310 23C2 0000 		move.l	%d2, task_p	/* 先頭アドレスをtask_pへ代入 */
 531      0000 
 532 0316 33F8 00CE 		move.w	206, TPRER1	/* TPRERを206に設定 */
 532      00FF F602 
 533 031e 33C1 00FF 		move.w	%d1, TCMP1	/* 割り込み発生周期をTCMPへ */
 533      F604 
 534 0324 33FC 0015 		move.w	#0x0015, TCTL1	/* TCTLを割り込み許可 */
 534      00FF F600 
 535 032c 4CDF 0006 		movem.l	(%sp)+, %d1-%d2	/* レジスタの回復 */
 536 0330 4E75      		rts
 537               	
 538               	
 539               	****************************
 540               	** CALL_RP
 541               	** タイマ割り込み時に処理すべきルーチンを呼び出す
 542               	****************************
 543               	
 544               	CALL_RP:
 545 0332 48E7 0080 		movem.l	%a0, -(%sp)
 546 0336 2079 0000 		movea.l	(task_p), %a0
 546      0000 
 547 033c 4E90      		jsr	(%a0)		/* task_pが指すアドレスへジャンプ */
 548 033e 4CDF 0100 		movem.l	(%sp)+, %a0
 549 0342 4E75      		rts
 550               	
 551               	.end




   1               	#NO_APP
   2               		.file	"csys68k.c"
   3               		.text
   4               	.Ltext0:
   5               		.cfi_sections	.debug_frame
   6               		.align	2
   7               		.globl	read
   8               		.type	read, @function
   9               	read:
  10               	.LVL0:
  11               	.LFB3:
  12               		.file 1 "csys68k.c"
   1:csys68k.c     **** #include <stdio.h>
   2:csys68k.c     **** #include "mtk_c.h" // マルチタスクカーネル用ヘッダー
   3:csys68k.c     **** #include <stdarg.h>
   4:csys68k.c     **** #include <fcntl.h>
   5:csys68k.c     **** #include <errno.h>
   6:csys68k.c     **** 
   7:csys68k.c     **** extern void outbyte(int ch, unsigned char c);
   8:csys68k.c     **** extern char inbyte(int ch);
   9:csys68k.c     **** 
  10:csys68k.c     **** int read(int fd, char *buf, int nbytes)
  11:csys68k.c     **** {
  13               		.loc 1 11 1 view -0
  14               		.cfi_startproc
  15               		.loc 1 11 1 is_stmt 0 view .LVU1
  16 0000 48E7 3C38 		movem.l #15416,-(%sp)
  17               		.cfi_def_cfa_offset 32
  18               		.cfi_offset 2, -32
  19               		.cfi_offset 3, -28
  20               		.cfi_offset 4, -24
  21               		.cfi_offset 5, -20
  22               		.cfi_offset 10, -16
  23               		.cfi_offset 11, -12
  24               		.cfi_offset 12, -8
  25 0004 282F 0020 		move.l 32(%sp),%d4
  26 0008 286F 0024 		move.l 36(%sp),%a4
  27 000c 2A2F 0028 		move.l 40(%sp),%d5
  12:csys68k.c     ****   char c;
  28               		.loc 1 12 3 is_stmt 1 view .LVU2
  13:csys68k.c     ****   int i;
  29               		.loc 1 13 3 view .LVU3
  14:csys68k.c     ****   int ch;
  30               		.loc 1 14 3 view .LVU4
  15:csys68k.c     **** 
  16:csys68k.c     ****   if (fd != 0 && fd != 3 && fd != 4)
  31               		.loc 1 16 3 view .LVU5
  32               		.loc 1 16 6 is_stmt 0 view .LVU6
  33 0010 4A84      		tst.l %d4
  34 0012 6720      		jeq .L2
  35               		.loc 1 16 15 discriminator 1 view .LVU7
  36 0014 2004      		move.l %d4,%d0
  37 0016 5780      		subq.l #3,%d0
  38 0018 7201      		moveq #1,%d1
  39 001a B280      		cmp.l %d0,%d1
  40 001c 640A      		jcc .L24
  17:csys68k.c     ****   {


  18:csys68k.c     ****     return EBADF;
  41               		.loc 1 18 12 view .LVU8
  42 001e 7609      		moveq #9,%d3
  43               	.L1:
  19:csys68k.c     ****   }
  20:csys68k.c     ****   else if (fd == 0 || fd == 3)
  21:csys68k.c     ****   {
  22:csys68k.c     ****     ch = 0;
  23:csys68k.c     ****   }
  24:csys68k.c     ****   else
  25:csys68k.c     ****   {
  26:csys68k.c     ****     ch = 1;
  27:csys68k.c     ****   }
  28:csys68k.c     **** 
  29:csys68k.c     ****   for (i = 0; i < nbytes; i++)
  30:csys68k.c     ****   {
  31:csys68k.c     ****     c = inbyte(ch);
  32:csys68k.c     **** 
  33:csys68k.c     ****     if (c == '\r' || c == '\n')
  34:csys68k.c     ****     { /* CR -> CRLF */
  35:csys68k.c     ****       outbyte(ch, '\r');
  36:csys68k.c     ****       outbyte(ch, '\n');
  37:csys68k.c     ****       *(buf + i) = '\n';
  38:csys68k.c     **** 
  39:csys68k.c     ****       /* } else if (c == '\x8'){ */ /* backspace \x8 */
  40:csys68k.c     ****     }
  41:csys68k.c     ****     else if (c == '\x7f')
  42:csys68k.c     ****     { /* backspace \x8 -> \x7f (by terminal config.) */
  43:csys68k.c     ****       if (i > 0)
  44:csys68k.c     ****       {
  45:csys68k.c     ****         outbyte(ch, '\x8'); /* bs  */
  46:csys68k.c     ****         outbyte(ch, ' ');   /* spc */
  47:csys68k.c     ****         outbyte(ch, '\x8'); /* bs  */
  48:csys68k.c     ****         i--;
  49:csys68k.c     ****       }
  50:csys68k.c     ****       i--;
  51:csys68k.c     ****       continue;
  52:csys68k.c     ****     }
  53:csys68k.c     ****     else
  54:csys68k.c     ****     {
  55:csys68k.c     ****       outbyte(ch, c);
  56:csys68k.c     ****       *(buf + i) = c;
  57:csys68k.c     ****     }
  58:csys68k.c     **** 
  59:csys68k.c     ****     if (*(buf + i) == '\n')
  60:csys68k.c     ****     {
  61:csys68k.c     ****       return (i + 1);
  62:csys68k.c     ****     }
  63:csys68k.c     ****   }
  64:csys68k.c     ****   return (i);
  65:csys68k.c     **** }
  44               		.loc 1 65 1 view .LVU9
  45 0020 2003      		move.l %d3,%d0
  46 0022 4CDF 1C3C 		movem.l (%sp)+,#7228
  47 0026 4E75      		rts
  48               	.L24:
  20:csys68k.c     ****   {


  49               		.loc 1 20 8 is_stmt 1 discriminator 1 view .LVU10
  20:csys68k.c     ****   {
  50               		.loc 1 20 20 is_stmt 0 discriminator 1 view .LVU11
  51 0028 7003      		moveq #3,%d0
  52 002a B084      		cmp.l %d4,%d0
  53 002c 56C4      		sne %d4
  54 002e 4884      		ext.w %d4
  55 0030 48C4      		ext.l %d4
  56 0032 4484      		neg.l %d4
  57               	.L2:
  58               	.LVL1:
  29:csys68k.c     ****   {
  59               		.loc 1 29 3 is_stmt 1 view .LVU12
  29:csys68k.c     ****   {
  60               		.loc 1 29 17 view .LVU13
  29:csys68k.c     ****   {
  61               		.loc 1 29 10 is_stmt 0 view .LVU14
  62 0034 7600      		moveq #0,%d3
  29:csys68k.c     ****   {
  63               		.loc 1 29 17 view .LVU15
  64 0036 4A85      		tst.l %d5
  65 0038 6FE6      		jle .L1
  66 003a 47F9 0000 		lea inbyte,%a3
  66      0000 
  67 0040 45F9 0000 		lea outbyte,%a2
  67      0000 
  68               	.LVL2:
  69               	.L9:
  31:csys68k.c     **** 
  70               		.loc 1 31 5 is_stmt 1 view .LVU16
  31:csys68k.c     **** 
  71               		.loc 1 31 9 is_stmt 0 view .LVU17
  72 0046 2F04      		move.l %d4,-(%sp)
  73               		.cfi_def_cfa_offset 36
  74 0048 4E93      		jsr (%a3)
  75               	.LVL3:
  76 004a 1400      		move.b %d0,%d2
  77               	.LVL4:
  33:csys68k.c     ****     { /* CR -> CRLF */
  78               		.loc 1 33 5 is_stmt 1 view .LVU18
  33:csys68k.c     ****     { /* CR -> CRLF */
  79               		.loc 1 33 8 is_stmt 0 view .LVU19
  80 004c 588F      		addq.l #4,%sp
  81               		.cfi_def_cfa_offset 32
  82 004e 0C00 000D 		cmp.b #13,%d0
  83 0052 6730      		jeq .L4
  84               	.L26:
  33:csys68k.c     ****     { /* CR -> CRLF */
  85               		.loc 1 33 19 discriminator 1 view .LVU20
  86 0054 0C00 000A 		cmp.b #10,%d0
  87 0058 672A      		jeq .L4
  41:csys68k.c     ****     { /* backspace \x8 -> \x7f (by terminal config.) */
  88               		.loc 1 41 10 is_stmt 1 view .LVU21
  41:csys68k.c     ****     { /* backspace \x8 -> \x7f (by terminal config.) */
  89               		.loc 1 41 13 is_stmt 0 view .LVU22
  90 005a 0C00 007F 		cmp.b #127,%d0
  91 005e 6748      		jeq .L25


  55:csys68k.c     ****       *(buf + i) = c;
  92               		.loc 1 55 7 is_stmt 1 view .LVU23
  93 0060 7000      		moveq #0,%d0
  94               	.LVL5:
  55:csys68k.c     ****       *(buf + i) = c;
  95               		.loc 1 55 7 is_stmt 0 view .LVU24
  96 0062 1002      		move.b %d2,%d0
  97 0064 2F00      		move.l %d0,-(%sp)
  98               		.cfi_def_cfa_offset 36
  99 0066 2F04      		move.l %d4,-(%sp)
 100               		.cfi_def_cfa_offset 40
 101 0068 4E92      		jsr (%a2)
 102               	.LVL6:
  56:csys68k.c     ****     }
 103               		.loc 1 56 7 is_stmt 1 view .LVU25
  56:csys68k.c     ****     }
 104               		.loc 1 56 18 is_stmt 0 view .LVU26
 105 006a 1982 3800 		move.b %d2,(%a4,%d3.l)
  59:csys68k.c     ****     {
 106               		.loc 1 59 5 is_stmt 1 view .LVU27
  61:csys68k.c     ****     }
 107               		.loc 1 61 17 is_stmt 0 view .LVU28
 108 006e 5283      		addq.l #1,%d3
 109               	.LVL7:
  61:csys68k.c     ****     }
 110               		.loc 1 61 17 view .LVU29
 111 0070 508F      		addq.l #8,%sp
 112               		.cfi_def_cfa_offset 32
 113               	.LVL8:
  29:csys68k.c     ****   {
 114               		.loc 1 29 28 is_stmt 1 view .LVU30
  29:csys68k.c     ****   {
 115               		.loc 1 29 17 view .LVU31
 116 0072 B685      		cmp.l %d5,%d3
 117 0074 6CAA      		jge .L1
 118               	.L23:
 119               	.LVL9:
  31:csys68k.c     **** 
 120               		.loc 1 31 5 view .LVU32
  31:csys68k.c     **** 
 121               		.loc 1 31 9 is_stmt 0 view .LVU33
 122 0076 2F04      		move.l %d4,-(%sp)
 123               		.cfi_def_cfa_offset 36
 124 0078 4E93      		jsr (%a3)
 125               	.LVL10:
 126 007a 1400      		move.b %d0,%d2
 127               	.LVL11:
  33:csys68k.c     ****     { /* CR -> CRLF */
 128               		.loc 1 33 5 is_stmt 1 view .LVU34
  33:csys68k.c     ****     { /* CR -> CRLF */
 129               		.loc 1 33 8 is_stmt 0 view .LVU35
 130 007c 588F      		addq.l #4,%sp
 131               		.cfi_def_cfa_offset 32
 132 007e 0C00 000D 		cmp.b #13,%d0
 133 0082 66D0      		jne .L26
 134               	.L4:
  35:csys68k.c     ****       outbyte(ch, '\n');


 135               		.loc 1 35 7 is_stmt 1 view .LVU36
 136 0084 4878 000D 		pea 13.w
 137               		.cfi_def_cfa_offset 36
 138 0088 2F04      		move.l %d4,-(%sp)
 139               		.cfi_def_cfa_offset 40
 140 008a 4E92      		jsr (%a2)
 141               	.LVL12:
  36:csys68k.c     ****       *(buf + i) = '\n';
 142               		.loc 1 36 7 view .LVU37
 143 008c 4878 000A 		pea 10.w
 144               		.cfi_def_cfa_offset 44
 145 0090 2F04      		move.l %d4,-(%sp)
 146               		.cfi_def_cfa_offset 48
 147 0092 4E92      		jsr (%a2)
 148               	.LVL13:
  37:csys68k.c     **** 
 149               		.loc 1 37 7 view .LVU38
  37:csys68k.c     **** 
 150               		.loc 1 37 18 is_stmt 0 view .LVU39
 151 0094 19BC 000A 		move.b #10,(%a4,%d3.l)
 151      3800 
  59:csys68k.c     ****     {
 152               		.loc 1 59 5 is_stmt 1 view .LVU40
  61:csys68k.c     ****     }
 153               		.loc 1 61 7 view .LVU41
  61:csys68k.c     ****     }
 154               		.loc 1 61 17 is_stmt 0 view .LVU42
 155 009a 5283      		addq.l #1,%d3
 156               	.LVL14:
  61:csys68k.c     ****     }
 157               		.loc 1 61 17 view .LVU43
 158 009c 4FEF 0010 		lea (16,%sp),%sp
 159               		.cfi_def_cfa_offset 32
 160               		.loc 1 65 1 view .LVU44
 161 00a0 2003      		move.l %d3,%d0
 162 00a2 4CDF 1C3C 		movem.l (%sp)+,#7228
 163               	.LVL15:
 164               		.loc 1 65 1 view .LVU45
 165 00a6 4E75      		rts
 166               	.LVL16:
 167               	.L25:
  43:csys68k.c     ****       {
 168               		.loc 1 43 7 is_stmt 1 view .LVU46
  43:csys68k.c     ****       {
 169               		.loc 1 43 10 is_stmt 0 view .LVU47
 170 00a8 4A83      		tst.l %d3
 171 00aa 679A      		jeq .L9
  48:csys68k.c     ****       }
 172               		.loc 1 48 10 view .LVU48
 173 00ac 5383      		subq.l #1,%d3
 174               	.LVL17:
  45:csys68k.c     ****         outbyte(ch, ' ');   /* spc */
 175               		.loc 1 45 9 is_stmt 1 view .LVU49
 176 00ae 4878 0008 		pea 8.w
 177               		.cfi_def_cfa_offset 36
 178 00b2 2F04      		move.l %d4,-(%sp)
 179               		.cfi_def_cfa_offset 40


 180 00b4 4E92      		jsr (%a2)
 181               	.LVL18:
  46:csys68k.c     ****         outbyte(ch, '\x8'); /* bs  */
 182               		.loc 1 46 9 view .LVU50
 183 00b6 4878 0020 		pea 32.w
 184               		.cfi_def_cfa_offset 44
 185 00ba 2F04      		move.l %d4,-(%sp)
 186               		.cfi_def_cfa_offset 48
 187 00bc 4E92      		jsr (%a2)
 188               	.LVL19:
  47:csys68k.c     ****         i--;
 189               		.loc 1 47 9 view .LVU51
 190 00be 4878 0008 		pea 8.w
 191               		.cfi_def_cfa_offset 52
 192 00c2 2F04      		move.l %d4,-(%sp)
 193               		.cfi_def_cfa_offset 56
 194 00c4 4E92      		jsr (%a2)
 195               	.LVL20:
  48:csys68k.c     ****       }
 196               		.loc 1 48 9 view .LVU52
  50:csys68k.c     ****       continue;
 197               		.loc 1 50 7 view .LVU53
  51:csys68k.c     ****     }
 198               		.loc 1 51 7 view .LVU54
 199 00c6 4FEF 0018 		lea (24,%sp),%sp
 200               		.cfi_def_cfa_offset 32
 201               	.LVL21:
  29:csys68k.c     ****   {
 202               		.loc 1 29 28 view .LVU55
  29:csys68k.c     ****   {
 203               		.loc 1 29 17 view .LVU56
 204 00ca B685      		cmp.l %d5,%d3
 205 00cc 6DA8      		jlt .L23
 206 00ce 6000 FF50 		jra .L1
 207               		.cfi_endproc
 208               	.LFE3:
 209               		.size	read, .-read
 210               		.align	2
 211               		.globl	write
 212               		.type	write, @function
 213               	write:
 214               	.LVL22:
 215               	.LFB4:
  66:csys68k.c     **** 
  67:csys68k.c     **** int write(int fd, char *buf, int nbytes)
  68:csys68k.c     **** {
 216               		.loc 1 68 1 view -0
 217               		.cfi_startproc
 218               		.loc 1 68 1 is_stmt 0 view .LVU58
 219 00d2 48E7 3830 		movem.l #14384,-(%sp)
 220               		.cfi_def_cfa_offset 24
 221               		.cfi_offset 2, -24
 222               		.cfi_offset 3, -20
 223               		.cfi_offset 4, -16
 224               		.cfi_offset 10, -12
 225               		.cfi_offset 11, -8
 226 00d6 282F 0020 		move.l 32(%sp),%d4


  69:csys68k.c     ****   int i, j;
 227               		.loc 1 69 3 is_stmt 1 view .LVU59
  70:csys68k.c     ****   int ch;
 228               		.loc 1 70 3 view .LVU60
  71:csys68k.c     **** 
  72:csys68k.c     ****   if (fd != 1 && fd != 2 && fd != 3 && fd != 4)
 229               		.loc 1 72 3 view .LVU61
 230               		.loc 1 72 37 is_stmt 0 view .LVU62
 231 00da 222F 0018 		move.l 24(%sp),%d1
 232 00de 5381      		subq.l #1,%d1
 233               		.loc 1 72 6 view .LVU63
 234 00e0 7003      		moveq #3,%d0
 235 00e2 B081      		cmp.l %d1,%d0
 236 00e4 655E      		jcs .L33
  73:csys68k.c     ****   {
  74:csys68k.c     ****     return EBADF;
  75:csys68k.c     ****   }
  76:csys68k.c     ****   else if (fd == 1 || fd == 2 || fd == 3)
 237               		.loc 1 76 8 is_stmt 1 view .LVU64
 238               		.loc 1 76 11 is_stmt 0 view .LVU65
 239 00e6 57C2      		seq %d2
 240 00e8 4882      		ext.w %d2
 241 00ea 48C2      		ext.l %d2
 242 00ec 4482      		neg.l %d2
 243               	.LVL23:
  77:csys68k.c     ****   {
  78:csys68k.c     ****     ch = 0;
  79:csys68k.c     ****   }
  80:csys68k.c     ****   else
  81:csys68k.c     ****   {
  82:csys68k.c     ****     ch = 1;
  83:csys68k.c     ****   }
  84:csys68k.c     **** 
  85:csys68k.c     ****   for (i = 0; i < nbytes; i++)
 244               		.loc 1 85 3 is_stmt 1 view .LVU66
 245               		.loc 1 85 17 view .LVU67
 246 00ee 4A84      		tst.l %d4
 247 00f0 6F28      		jle .L32
 248 00f2 246F 001C 		move.l 28(%sp),%a2
 249 00f6 260A      		move.l %a2,%d3
 250 00f8 D684      		add.l %d4,%d3
 251 00fa 47F9 0000 		lea outbyte,%a3
 251      0000 
 252               	.LVL24:
 253               	.L31:
  86:csys68k.c     ****   {
  87:csys68k.c     ****     if (*(buf + i) == '\n')
 254               		.loc 1 87 5 view .LVU68
 255               		.loc 1 87 9 is_stmt 0 view .LVU69
 256 0100 121A      		move.b (%a2)+,%d1
 257               	.LVL25:
 258               		.loc 1 87 8 view .LVU70
 259 0102 0C01 000A 		cmp.b #10,%d1
 260 0106 671A      		jeq .L37
  88:csys68k.c     ****     {
  89:csys68k.c     ****       outbyte(ch, '\r'); /* LF -> CRLF */
  90:csys68k.c     ****     }


  91:csys68k.c     ****     outbyte(ch, *(buf + i));
 261               		.loc 1 91 5 is_stmt 1 view .LVU71
 262 0108 0281 0000 		and.l #255,%d1
 262      00FF 
 263 010e 2F01      		move.l %d1,-(%sp)
 264               		.cfi_def_cfa_offset 28
 265 0110 2F02      		move.l %d2,-(%sp)
 266               		.cfi_def_cfa_offset 32
 267 0112 4E93      		jsr (%a3)
 268               	.LVL26:
  92:csys68k.c     ****     for (j = 0; j < 300; j++)
 269               		.loc 1 92 5 view .LVU72
 270               		.loc 1 92 19 view .LVU73
  85:csys68k.c     ****   {
 271               		.loc 1 85 28 view .LVU74
  85:csys68k.c     ****   {
 272               		.loc 1 85 17 view .LVU75
 273 0114 508F      		addq.l #8,%sp
 274               		.cfi_def_cfa_offset 24
 275 0116 B68A      		cmp.l %a2,%d3
 276 0118 66E6      		jne .L31
 277               	.LVL27:
 278               	.L32:
  74:csys68k.c     ****   }
 279               		.loc 1 74 12 is_stmt 0 view .LVU76
 280 011a 2004      		move.l %d4,%d0
  93:csys68k.c     ****       ;
  94:csys68k.c     ****   }
  95:csys68k.c     ****   return (nbytes);
  96:csys68k.c     **** }
 281               		.loc 1 96 1 view .LVU77
 282 011c 4CDF 0C1C 		movem.l (%sp)+,#3100
 283               	.LVL28:
 284               		.loc 1 96 1 view .LVU78
 285 0120 4E75      		rts
 286               	.LVL29:
 287               	.L37:
  89:csys68k.c     ****     }
 288               		.loc 1 89 7 is_stmt 1 view .LVU79
 289 0122 4878 000D 		pea 13.w
 290               		.cfi_def_cfa_offset 28
 291 0126 2F02      		move.l %d2,-(%sp)
 292               		.cfi_def_cfa_offset 32
 293 0128 4E93      		jsr (%a3)
 294               	.LVL30:
  91:csys68k.c     ****     for (j = 0; j < 300; j++)
 295               		.loc 1 91 17 is_stmt 0 view .LVU80
 296 012a 122A FFFF 		move.b -1(%a2),%d1
 297 012e 508F      		addq.l #8,%sp
 298               		.cfi_def_cfa_offset 24
  91:csys68k.c     ****     for (j = 0; j < 300; j++)
 299               		.loc 1 91 5 is_stmt 1 view .LVU81
 300 0130 0281 0000 		and.l #255,%d1
 300      00FF 
 301 0136 2F01      		move.l %d1,-(%sp)
 302               		.cfi_def_cfa_offset 28
 303 0138 2F02      		move.l %d2,-(%sp)


 304               		.cfi_def_cfa_offset 32
 305 013a 4E93      		jsr (%a3)
 306               	.LVL31:
  92:csys68k.c     ****       ;
 307               		.loc 1 92 5 view .LVU82
  92:csys68k.c     ****       ;
 308               		.loc 1 92 19 view .LVU83
  85:csys68k.c     ****   {
 309               		.loc 1 85 28 view .LVU84
  85:csys68k.c     ****   {
 310               		.loc 1 85 17 view .LVU85
 311 013c 508F      		addq.l #8,%sp
 312               		.cfi_def_cfa_offset 24
 313 013e B68A      		cmp.l %a2,%d3
 314 0140 66BE      		jne .L31
 315 0142 60D6      		jra .L32
 316               	.LVL32:
 317               	.L33:
  74:csys68k.c     ****   }
 318               		.loc 1 74 12 is_stmt 0 view .LVU86
 319 0144 7009      		moveq #9,%d0
 320               		.loc 1 96 1 view .LVU87
 321 0146 4CDF 0C1C 		movem.l (%sp)+,#3100
 322 014a 4E75      		rts
 323               		.cfi_endproc
 324               	.LFE4:
 325               		.size	write, .-write
 326               		.align	2
 327               		.globl	fcntl
 328               		.type	fcntl, @function
 329               	fcntl:
 330               	.LVL33:
 331               	.LFB5:
  97:csys68k.c     **** 
  98:csys68k.c     **** int fcntl(int fd, int cmd, ...){
 332               		.loc 1 98 32 is_stmt 1 view -0
 333               		.cfi_startproc
  99:csys68k.c     **** 	if(cmd == F_GETFL){
 334               		.loc 1 99 2 view .LVU89
 335               		.loc 1 99 4 is_stmt 0 view .LVU90
 336 014c 7203      		moveq #3,%d1
 337 014e B2AF 0008 		cmp.l 8(%sp),%d1
 338 0152 57C0      		seq %d0
 339 0154 4880      		ext.w %d0
 340 0156 48C0      		ext.l %d0
 341 0158 4480      		neg.l %d0
 100:csys68k.c     **** 		return O_RDWR;
 101:csys68k.c     **** 	}else{
 102:csys68k.c     **** 		return 0;
 103:csys68k.c     **** 	}
 104:csys68k.c     **** }
 342               		.loc 1 104 1 view .LVU91
 343 015a D080      		add.l %d0,%d0
 344 015c 4E75      		rts
 345               		.cfi_endproc
 346               	.LFE5:
 347               		.size	fcntl, .-fcntl


 348               	.Letext0:
 349               		.file 2 "/usr/local/m68k-elf/include/sys/_default_fcntl.h"
 350               		.section	.debug_info,"",@progbits
 351               	.Ldebug_info0:
 352 0000 0000 0229 		.long	0x229
 353 0004 0005      		.word	0x5
 354 0006 01        		.byte	0x1
 355 0007 04        		.byte	0x4
 356 0008 0000 0000 		.long	.Ldebug_abbrev0
 357 000c 08        		.uleb128 0x8
 358 000d 0000 0000 		.long	.LASF14
 359 0011 1D        		.byte	0x1d
 360 0012 0000 0000 		.long	.LASF15
 361 0016 0000 0000 		.long	.LASF16
 362 001a 0000 0000 		.long	.Ltext0
 363 001e 0000 015E 		.long	.Letext0-.Ltext0
 364 0022 0000 0000 		.long	.Ldebug_line0
 365 0026 01        		.uleb128 0x1
 366 0027 01        		.byte	0x1
 367 0028 06        		.byte	0x6
 368 0029 0000 0000 		.long	.LASF0
 369 002d 01        		.uleb128 0x1
 370 002e 01        		.byte	0x1
 371 002f 08        		.byte	0x8
 372 0030 0000 0000 		.long	.LASF1
 373 0034 01        		.uleb128 0x1
 374 0035 02        		.byte	0x2
 375 0036 05        		.byte	0x5
 376 0037 0000 0000 		.long	.LASF2
 377 003b 01        		.uleb128 0x1
 378 003c 02        		.byte	0x2
 379 003d 07        		.byte	0x7
 380 003e 0000 0000 		.long	.LASF3
 381 0042 01        		.uleb128 0x1
 382 0043 04        		.byte	0x4
 383 0044 05        		.byte	0x5
 384 0045 0000 0000 		.long	.LASF4
 385 0049 01        		.uleb128 0x1
 386 004a 04        		.byte	0x4
 387 004b 07        		.byte	0x7
 388 004c 0000 0000 		.long	.LASF5
 389 0050 01        		.uleb128 0x1
 390 0051 08        		.byte	0x8
 391 0052 05        		.byte	0x5
 392 0053 0000 0000 		.long	.LASF6
 393 0057 01        		.uleb128 0x1
 394 0058 08        		.byte	0x8
 395 0059 07        		.byte	0x7
 396 005a 0000 0000 		.long	.LASF7
 397 005e 01        		.uleb128 0x1
 398 005f 0C        		.byte	0xc
 399 0060 04        		.byte	0x4
 400 0061 0000 0000 		.long	.LASF8
 401 0065 01        		.uleb128 0x1
 402 0066 04        		.byte	0x4
 403 0067 07        		.byte	0x7
 404 0068 0000 0000 		.long	.LASF9


 405 006c 09        		.uleb128 0x9
 406 006d 04        		.byte	0x4
 407 006e 05        		.byte	0x5
 408 006f 696E 7400 		.string	"int"
 409 0073 0A        		.uleb128 0xa
 410 0074 04        		.byte	0x4
 411 0075 0000 0079 		.long	0x79
 412 0079 01        		.uleb128 0x1
 413 007a 01        		.byte	0x1
 414 007b 06        		.byte	0x6
 415 007c 0000 0000 		.long	.LASF10
 416 0080 0B        		.uleb128 0xb
 417 0081 0000 0000 		.long	.LASF17
 418 0085 01        		.byte	0x1
 419 0086 07        		.byte	0x7
 420 0087 0D        		.byte	0xd
 421 0088 0000 0097 		.long	0x97
 422 008c 05        		.uleb128 0x5
 423 008d 0000 006C 		.long	0x6c
 424 0091 05        		.uleb128 0x5
 425 0092 0000 002D 		.long	0x2d
 426 0096 00        		.byte	0
 427 0097 0C        		.uleb128 0xc
 428 0098 0000 0000 		.long	.LASF18
 429 009c 01        		.byte	0x1
 430 009d 08        		.byte	0x8
 431 009e 0D        		.byte	0xd
 432 009f 0000 0079 		.long	0x79
 433 00a3 0000 00AD 		.long	0xad
 434 00a7 05        		.uleb128 0x5
 435 00a8 0000 006C 		.long	0x6c
 436 00ac 00        		.byte	0
 437 00ad 06        		.uleb128 0x6
 438 00ae 0000 0000 		.long	.LASF11
 439 00b2 02        		.byte	0x2
 440 00b3 DA        		.byte	0xda
 441 00b4 0C        		.byte	0xc
 442 00b5 0000 006C 		.long	0x6c
 443 00b9 0000 0000 		.long	.LFB5
 444 00bd 0000 0012 		.long	.LFE5-.LFB5
 445 00c1 01        		.uleb128 0x1
 446 00c2 9C        		.byte	0x9c
 447 00c3 0000 00E4 		.long	0xe4
 448 00c7 03        		.uleb128 0x3
 449 00c8 6664 00   		.string	"fd"
 450 00cb 62        		.byte	0x62
 451 00cc 0F        		.byte	0xf
 452 00cd 0000 006C 		.long	0x6c
 453 00d1 02        		.uleb128 0x2
 454 00d2 91        		.byte	0x91
 455 00d3 00        		.sleb128 0
 456 00d4 03        		.uleb128 0x3
 457 00d5 636D 6400 		.string	"cmd"
 458 00d9 62        		.byte	0x62
 459 00da 17        		.byte	0x17
 460 00db 0000 006C 		.long	0x6c
 461 00df 02        		.uleb128 0x2


 462 00e0 91        		.byte	0x91
 463 00e1 04        		.sleb128 4
 464 00e2 0D        		.uleb128 0xd
 465 00e3 00        		.byte	0
 466 00e4 06        		.uleb128 0x6
 467 00e5 0000 0000 		.long	.LASF12
 468 00e9 01        		.byte	0x1
 469 00ea 43        		.byte	0x43
 470 00eb 05        		.byte	0x5
 471 00ec 0000 006C 		.long	0x6c
 472 00f0 0000 0000 		.long	.LFB4
 473 00f4 0000 007A 		.long	.LFE4-.LFB4
 474 00f8 01        		.uleb128 0x1
 475 00f9 9C        		.byte	0x9c
 476 00fa 0000 0170 		.long	0x170
 477 00fe 03        		.uleb128 0x3
 478 00ff 6664 00   		.string	"fd"
 479 0102 43        		.byte	0x43
 480 0103 0F        		.byte	0xf
 481 0104 0000 006C 		.long	0x6c
 482 0108 02        		.uleb128 0x2
 483 0109 91        		.byte	0x91
 484 010a 00        		.sleb128 0
 485 010b 03        		.uleb128 0x3
 486 010c 6275 6600 		.string	"buf"
 487 0110 43        		.byte	0x43
 488 0111 19        		.byte	0x19
 489 0112 0000 0073 		.long	0x73
 490 0116 02        		.uleb128 0x2
 491 0117 91        		.byte	0x91
 492 0118 04        		.sleb128 4
 493 0119 07        		.uleb128 0x7
 494 011a 0000 0000 		.long	.LASF13
 495 011e 43        		.byte	0x43
 496 011f 22        		.byte	0x22
 497 0120 0000 006C 		.long	0x6c
 498 0124 02        		.uleb128 0x2
 499 0125 91        		.byte	0x91
 500 0126 08        		.sleb128 8
 501 0127 04        		.uleb128 0x4
 502 0128 6900      		.string	"i"
 503 012a 45        		.byte	0x45
 504 012b 07        		.byte	0x7
 505 012c 0000 006C 		.long	0x6c
 506 0130 0000 0000 		.long	.LLST3
 507 0134 0000 0000 		.long	.LVUS3
 508 0138 0E        		.uleb128 0xe
 509 0139 6A00      		.string	"j"
 510 013b 01        		.byte	0x1
 511 013c 45        		.byte	0x45
 512 013d 0A        		.byte	0xa
 513 013e 0000 006C 		.long	0x6c
 514 0142 04        		.uleb128 0x4
 515 0143 6368 00   		.string	"ch"
 516 0146 46        		.byte	0x46
 517 0147 07        		.byte	0x7
 518 0148 0000 006C 		.long	0x6c


 519 014c 0000 0000 		.long	.LLST4
 520 0150 0000 0000 		.long	.LVUS4
 521 0154 02        		.uleb128 0x2
 522 0155 0000 0000 		.long	.LVL26
 523 0159 0000 0080 		.long	0x80
 524 015d 02        		.uleb128 0x2
 525 015e 0000 0000 		.long	.LVL30
 526 0162 0000 0080 		.long	0x80
 527 0166 02        		.uleb128 0x2
 528 0167 0000 0000 		.long	.LVL31
 529 016b 0000 0080 		.long	0x80
 530 016f 00        		.byte	0
 531 0170 0F        		.uleb128 0xf
 532 0171 0000 0000 		.long	.LASF19
 533 0175 01        		.byte	0x1
 534 0176 0A        		.byte	0xa
 535 0177 05        		.byte	0x5
 536 0178 0000 006C 		.long	0x6c
 537 017c 0000 0000 		.long	.LFB3
 538 0180 0000 00D2 		.long	.LFE3-.LFB3
 539 0184 01        		.uleb128 0x1
 540 0185 9C        		.byte	0x9c
 541 0186 03        		.uleb128 0x3
 542 0187 6664 00   		.string	"fd"
 543 018a 0A        		.byte	0xa
 544 018b 0E        		.byte	0xe
 545 018c 0000 006C 		.long	0x6c
 546 0190 02        		.uleb128 0x2
 547 0191 91        		.byte	0x91
 548 0192 00        		.sleb128 0
 549 0193 03        		.uleb128 0x3
 550 0194 6275 6600 		.string	"buf"
 551 0198 0A        		.byte	0xa
 552 0199 18        		.byte	0x18
 553 019a 0000 0073 		.long	0x73
 554 019e 02        		.uleb128 0x2
 555 019f 91        		.byte	0x91
 556 01a0 04        		.sleb128 4
 557 01a1 07        		.uleb128 0x7
 558 01a2 0000 0000 		.long	.LASF13
 559 01a6 0A        		.byte	0xa
 560 01a7 21        		.byte	0x21
 561 01a8 0000 006C 		.long	0x6c
 562 01ac 02        		.uleb128 0x2
 563 01ad 91        		.byte	0x91
 564 01ae 08        		.sleb128 8
 565 01af 04        		.uleb128 0x4
 566 01b0 6300      		.string	"c"
 567 01b2 0C        		.byte	0xc
 568 01b3 08        		.byte	0x8
 569 01b4 0000 0079 		.long	0x79
 570 01b8 0000 0000 		.long	.LLST0
 571 01bc 0000 0000 		.long	.LVUS0
 572 01c0 04        		.uleb128 0x4
 573 01c1 6900      		.string	"i"
 574 01c3 0D        		.byte	0xd
 575 01c4 07        		.byte	0x7


 576 01c5 0000 006C 		.long	0x6c
 577 01c9 0000 0000 		.long	.LLST1
 578 01cd 0000 0000 		.long	.LVUS1
 579 01d1 04        		.uleb128 0x4
 580 01d2 6368 00   		.string	"ch"
 581 01d5 0E        		.byte	0xe
 582 01d6 07        		.byte	0x7
 583 01d7 0000 006C 		.long	0x6c
 584 01db 0000 0000 		.long	.LLST2
 585 01df 0000 0000 		.long	.LVUS2
 586 01e3 02        		.uleb128 0x2
 587 01e4 0000 0000 		.long	.LVL3
 588 01e8 0000 0097 		.long	0x97
 589 01ec 02        		.uleb128 0x2
 590 01ed 0000 0000 		.long	.LVL6
 591 01f1 0000 0080 		.long	0x80
 592 01f5 02        		.uleb128 0x2
 593 01f6 0000 0000 		.long	.LVL10
 594 01fa 0000 0097 		.long	0x97
 595 01fe 02        		.uleb128 0x2
 596 01ff 0000 0000 		.long	.LVL12
 597 0203 0000 0080 		.long	0x80
 598 0207 02        		.uleb128 0x2
 599 0208 0000 0000 		.long	.LVL13
 600 020c 0000 0080 		.long	0x80
 601 0210 02        		.uleb128 0x2
 602 0211 0000 0000 		.long	.LVL18
 603 0215 0000 0080 		.long	0x80
 604 0219 02        		.uleb128 0x2
 605 021a 0000 0000 		.long	.LVL19
 606 021e 0000 0080 		.long	0x80
 607 0222 02        		.uleb128 0x2
 608 0223 0000 0000 		.long	.LVL20
 609 0227 0000 0080 		.long	0x80
 610 022b 00        		.byte	0
 611 022c 00        		.byte	0
 612               		.section	.debug_abbrev,"",@progbits
 613               	.Ldebug_abbrev0:
 614 0000 01        		.uleb128 0x1
 615 0001 24        		.uleb128 0x24
 616 0002 00        		.byte	0
 617 0003 0B        		.uleb128 0xb
 618 0004 0B        		.uleb128 0xb
 619 0005 3E        		.uleb128 0x3e
 620 0006 0B        		.uleb128 0xb
 621 0007 03        		.uleb128 0x3
 622 0008 0E        		.uleb128 0xe
 623 0009 00        		.byte	0
 624 000a 00        		.byte	0
 625 000b 02        		.uleb128 0x2
 626 000c 48        		.uleb128 0x48
 627 000d 00        		.byte	0
 628 000e 7D        		.uleb128 0x7d
 629 000f 01        		.uleb128 0x1
 630 0010 7F        		.uleb128 0x7f
 631 0011 13        		.uleb128 0x13
 632 0012 00        		.byte	0


 633 0013 00        		.byte	0
 634 0014 03        		.uleb128 0x3
 635 0015 05        		.uleb128 0x5
 636 0016 00        		.byte	0
 637 0017 03        		.uleb128 0x3
 638 0018 08        		.uleb128 0x8
 639 0019 3A        		.uleb128 0x3a
 640 001a 21        		.uleb128 0x21
 641 001b 01        		.sleb128 1
 642 001c 3B        		.uleb128 0x3b
 643 001d 0B        		.uleb128 0xb
 644 001e 39        		.uleb128 0x39
 645 001f 0B        		.uleb128 0xb
 646 0020 49        		.uleb128 0x49
 647 0021 13        		.uleb128 0x13
 648 0022 02        		.uleb128 0x2
 649 0023 18        		.uleb128 0x18
 650 0024 00        		.byte	0
 651 0025 00        		.byte	0
 652 0026 04        		.uleb128 0x4
 653 0027 34        		.uleb128 0x34
 654 0028 00        		.byte	0
 655 0029 03        		.uleb128 0x3
 656 002a 08        		.uleb128 0x8
 657 002b 3A        		.uleb128 0x3a
 658 002c 21        		.uleb128 0x21
 659 002d 01        		.sleb128 1
 660 002e 3B        		.uleb128 0x3b
 661 002f 0B        		.uleb128 0xb
 662 0030 39        		.uleb128 0x39
 663 0031 0B        		.uleb128 0xb
 664 0032 49        		.uleb128 0x49
 665 0033 13        		.uleb128 0x13
 666 0034 02        		.uleb128 0x2
 667 0035 17        		.uleb128 0x17
 668 0036 B742      		.uleb128 0x2137
 669 0038 17        		.uleb128 0x17
 670 0039 00        		.byte	0
 671 003a 00        		.byte	0
 672 003b 05        		.uleb128 0x5
 673 003c 05        		.uleb128 0x5
 674 003d 00        		.byte	0
 675 003e 49        		.uleb128 0x49
 676 003f 13        		.uleb128 0x13
 677 0040 00        		.byte	0
 678 0041 00        		.byte	0
 679 0042 06        		.uleb128 0x6
 680 0043 2E        		.uleb128 0x2e
 681 0044 01        		.byte	0x1
 682 0045 3F        		.uleb128 0x3f
 683 0046 19        		.uleb128 0x19
 684 0047 03        		.uleb128 0x3
 685 0048 0E        		.uleb128 0xe
 686 0049 3A        		.uleb128 0x3a
 687 004a 0B        		.uleb128 0xb
 688 004b 3B        		.uleb128 0x3b
 689 004c 0B        		.uleb128 0xb


 690 004d 39        		.uleb128 0x39
 691 004e 0B        		.uleb128 0xb
 692 004f 27        		.uleb128 0x27
 693 0050 19        		.uleb128 0x19
 694 0051 49        		.uleb128 0x49
 695 0052 13        		.uleb128 0x13
 696 0053 11        		.uleb128 0x11
 697 0054 01        		.uleb128 0x1
 698 0055 12        		.uleb128 0x12
 699 0056 06        		.uleb128 0x6
 700 0057 40        		.uleb128 0x40
 701 0058 18        		.uleb128 0x18
 702 0059 7A        		.uleb128 0x7a
 703 005a 19        		.uleb128 0x19
 704 005b 01        		.uleb128 0x1
 705 005c 13        		.uleb128 0x13
 706 005d 00        		.byte	0
 707 005e 00        		.byte	0
 708 005f 07        		.uleb128 0x7
 709 0060 05        		.uleb128 0x5
 710 0061 00        		.byte	0
 711 0062 03        		.uleb128 0x3
 712 0063 0E        		.uleb128 0xe
 713 0064 3A        		.uleb128 0x3a
 714 0065 21        		.uleb128 0x21
 715 0066 01        		.sleb128 1
 716 0067 3B        		.uleb128 0x3b
 717 0068 0B        		.uleb128 0xb
 718 0069 39        		.uleb128 0x39
 719 006a 0B        		.uleb128 0xb
 720 006b 49        		.uleb128 0x49
 721 006c 13        		.uleb128 0x13
 722 006d 02        		.uleb128 0x2
 723 006e 18        		.uleb128 0x18
 724 006f 00        		.byte	0
 725 0070 00        		.byte	0
 726 0071 08        		.uleb128 0x8
 727 0072 11        		.uleb128 0x11
 728 0073 01        		.byte	0x1
 729 0074 25        		.uleb128 0x25
 730 0075 0E        		.uleb128 0xe
 731 0076 13        		.uleb128 0x13
 732 0077 0B        		.uleb128 0xb
 733 0078 03        		.uleb128 0x3
 734 0079 0E        		.uleb128 0xe
 735 007a 1B        		.uleb128 0x1b
 736 007b 0E        		.uleb128 0xe
 737 007c 11        		.uleb128 0x11
 738 007d 01        		.uleb128 0x1
 739 007e 12        		.uleb128 0x12
 740 007f 06        		.uleb128 0x6
 741 0080 10        		.uleb128 0x10
 742 0081 17        		.uleb128 0x17
 743 0082 00        		.byte	0
 744 0083 00        		.byte	0
 745 0084 09        		.uleb128 0x9
 746 0085 24        		.uleb128 0x24


 747 0086 00        		.byte	0
 748 0087 0B        		.uleb128 0xb
 749 0088 0B        		.uleb128 0xb
 750 0089 3E        		.uleb128 0x3e
 751 008a 0B        		.uleb128 0xb
 752 008b 03        		.uleb128 0x3
 753 008c 08        		.uleb128 0x8
 754 008d 00        		.byte	0
 755 008e 00        		.byte	0
 756 008f 0A        		.uleb128 0xa
 757 0090 0F        		.uleb128 0xf
 758 0091 00        		.byte	0
 759 0092 0B        		.uleb128 0xb
 760 0093 0B        		.uleb128 0xb
 761 0094 49        		.uleb128 0x49
 762 0095 13        		.uleb128 0x13
 763 0096 00        		.byte	0
 764 0097 00        		.byte	0
 765 0098 0B        		.uleb128 0xb
 766 0099 2E        		.uleb128 0x2e
 767 009a 01        		.byte	0x1
 768 009b 3F        		.uleb128 0x3f
 769 009c 19        		.uleb128 0x19
 770 009d 03        		.uleb128 0x3
 771 009e 0E        		.uleb128 0xe
 772 009f 3A        		.uleb128 0x3a
 773 00a0 0B        		.uleb128 0xb
 774 00a1 3B        		.uleb128 0x3b
 775 00a2 0B        		.uleb128 0xb
 776 00a3 39        		.uleb128 0x39
 777 00a4 0B        		.uleb128 0xb
 778 00a5 27        		.uleb128 0x27
 779 00a6 19        		.uleb128 0x19
 780 00a7 3C        		.uleb128 0x3c
 781 00a8 19        		.uleb128 0x19
 782 00a9 01        		.uleb128 0x1
 783 00aa 13        		.uleb128 0x13
 784 00ab 00        		.byte	0
 785 00ac 00        		.byte	0
 786 00ad 0C        		.uleb128 0xc
 787 00ae 2E        		.uleb128 0x2e
 788 00af 01        		.byte	0x1
 789 00b0 3F        		.uleb128 0x3f
 790 00b1 19        		.uleb128 0x19
 791 00b2 03        		.uleb128 0x3
 792 00b3 0E        		.uleb128 0xe
 793 00b4 3A        		.uleb128 0x3a
 794 00b5 0B        		.uleb128 0xb
 795 00b6 3B        		.uleb128 0x3b
 796 00b7 0B        		.uleb128 0xb
 797 00b8 39        		.uleb128 0x39
 798 00b9 0B        		.uleb128 0xb
 799 00ba 27        		.uleb128 0x27
 800 00bb 19        		.uleb128 0x19
 801 00bc 49        		.uleb128 0x49
 802 00bd 13        		.uleb128 0x13
 803 00be 3C        		.uleb128 0x3c


 804 00bf 19        		.uleb128 0x19
 805 00c0 01        		.uleb128 0x1
 806 00c1 13        		.uleb128 0x13
 807 00c2 00        		.byte	0
 808 00c3 00        		.byte	0
 809 00c4 0D        		.uleb128 0xd
 810 00c5 18        		.uleb128 0x18
 811 00c6 00        		.byte	0
 812 00c7 00        		.byte	0
 813 00c8 00        		.byte	0
 814 00c9 0E        		.uleb128 0xe
 815 00ca 34        		.uleb128 0x34
 816 00cb 00        		.byte	0
 817 00cc 03        		.uleb128 0x3
 818 00cd 08        		.uleb128 0x8
 819 00ce 3A        		.uleb128 0x3a
 820 00cf 0B        		.uleb128 0xb
 821 00d0 3B        		.uleb128 0x3b
 822 00d1 0B        		.uleb128 0xb
 823 00d2 39        		.uleb128 0x39
 824 00d3 0B        		.uleb128 0xb
 825 00d4 49        		.uleb128 0x49
 826 00d5 13        		.uleb128 0x13
 827 00d6 00        		.byte	0
 828 00d7 00        		.byte	0
 829 00d8 0F        		.uleb128 0xf
 830 00d9 2E        		.uleb128 0x2e
 831 00da 01        		.byte	0x1
 832 00db 3F        		.uleb128 0x3f
 833 00dc 19        		.uleb128 0x19
 834 00dd 03        		.uleb128 0x3
 835 00de 0E        		.uleb128 0xe
 836 00df 3A        		.uleb128 0x3a
 837 00e0 0B        		.uleb128 0xb
 838 00e1 3B        		.uleb128 0x3b
 839 00e2 0B        		.uleb128 0xb
 840 00e3 39        		.uleb128 0x39
 841 00e4 0B        		.uleb128 0xb
 842 00e5 27        		.uleb128 0x27
 843 00e6 19        		.uleb128 0x19
 844 00e7 49        		.uleb128 0x49
 845 00e8 13        		.uleb128 0x13
 846 00e9 11        		.uleb128 0x11
 847 00ea 01        		.uleb128 0x1
 848 00eb 12        		.uleb128 0x12
 849 00ec 06        		.uleb128 0x6
 850 00ed 40        		.uleb128 0x40
 851 00ee 18        		.uleb128 0x18
 852 00ef 7A        		.uleb128 0x7a
 853 00f0 19        		.uleb128 0x19
 854 00f1 00        		.byte	0
 855 00f2 00        		.byte	0
 856 00f3 00        		.byte	0
 857               		.section	.debug_loclists,"",@progbits
 858 0000 0000 012C 		.long	.Ldebug_loc3-.Ldebug_loc2
 859               	.Ldebug_loc2:
 860 0004 0005      		.word	0x5


 861 0006 04        		.byte	0x4
 862 0007 00        		.byte	0
 863 0008 0000 0000 		.long	0
 864               	.Ldebug_loc0:
 865               	.LVUS3:
 866 000c 01        		.uleb128 .LVU67
 867 000d 00        		.uleb128 .LVU68
 868 000e 00        		.uleb128 .LVU68
 869 000f 00        		.uleb128 .LVU70
 870 0010 00        		.uleb128 .LVU70
 871 0011 03        		.uleb128 .LVU75
 872 0012 03        		.uleb128 .LVU75
 873 0013 00        		.uleb128 .LVU76
 874 0014 00        		.uleb128 .LVU79
 875 0015 03        		.uleb128 .LVU85
 876 0016 03        		.uleb128 .LVU85
 877 0017 00        		.uleb128 .LVU86
 878               	.LLST3:
 879 0018 04        		.byte	0x4
 880 0019 EE01      		.uleb128 .LVL23-.Ltext0
 881 001b 8002      		.uleb128 .LVL24-.Ltext0
 882 001d 02        		.uleb128 0x2
 883 001e 30        		.byte	0x30
 884 001f 9F        		.byte	0x9f
 885 0020 04        		.byte	0x4
 886 0021 8002      		.uleb128 .LVL24-.Ltext0
 887 0023 8202      		.uleb128 .LVL25-.Ltext0
 888 0025 07        		.uleb128 0x7
 889 0026 7A        		.byte	0x7a
 890 0027 00        		.sleb128 0
 891 0028 91        		.byte	0x91
 892 0029 74        		.sleb128 -12
 893 002a 06        		.byte	0x6
 894 002b 1C        		.byte	0x1c
 895 002c 9F        		.byte	0x9f
 896 002d 04        		.byte	0x4
 897 002e 8202      		.uleb128 .LVL25-.Ltext0
 898 0030 9402      		.uleb128 .LVL26-.Ltext0
 899 0032 08        		.uleb128 0x8
 900 0033 91        		.byte	0x91
 901 0034 74        		.sleb128 -12
 902 0035 06        		.byte	0x6
 903 0036 20        		.byte	0x20
 904 0037 7A        		.byte	0x7a
 905 0038 00        		.sleb128 0
 906 0039 22        		.byte	0x22
 907 003a 9F        		.byte	0x9f
 908 003b 04        		.byte	0x4
 909 003c 9402      		.uleb128 .LVL26-.Ltext0
 910 003e 9A02      		.uleb128 .LVL27-.Ltext0
 911 0040 07        		.uleb128 0x7
 912 0041 7A        		.byte	0x7a
 913 0042 00        		.sleb128 0
 914 0043 91        		.byte	0x91
 915 0044 74        		.sleb128 -12
 916 0045 06        		.byte	0x6
 917 0046 1C        		.byte	0x1c


 918 0047 9F        		.byte	0x9f
 919 0048 04        		.byte	0x4
 920 0049 A202      		.uleb128 .LVL29-.Ltext0
 921 004b BC02      		.uleb128 .LVL31-.Ltext0
 922 004d 08        		.uleb128 0x8
 923 004e 91        		.byte	0x91
 924 004f 74        		.sleb128 -12
 925 0050 06        		.byte	0x6
 926 0051 20        		.byte	0x20
 927 0052 7A        		.byte	0x7a
 928 0053 00        		.sleb128 0
 929 0054 22        		.byte	0x22
 930 0055 9F        		.byte	0x9f
 931 0056 04        		.byte	0x4
 932 0057 BC02      		.uleb128 .LVL31-.Ltext0
 933 0059 C402      		.uleb128 .LVL32-.Ltext0
 934 005b 07        		.uleb128 0x7
 935 005c 7A        		.byte	0x7a
 936 005d 00        		.sleb128 0
 937 005e 91        		.byte	0x91
 938 005f 74        		.sleb128 -12
 939 0060 06        		.byte	0x6
 940 0061 1C        		.byte	0x1c
 941 0062 9F        		.byte	0x9f
 942 0063 00        		.byte	0
 943               	.LVUS4:
 944 0064 00        		.uleb128 .LVU66
 945 0065 00        		.uleb128 .LVU78
 946 0066 00        		.uleb128 .LVU78
 947 0067 00        		.uleb128 .LVU79
 948 0068 00        		.uleb128 .LVU79
 949 0069 00        		.uleb128 .LVU86
 950               	.LLST4:
 951 006a 04        		.byte	0x4
 952 006b EE01      		.uleb128 .LVL23-.Ltext0
 953 006d A002      		.uleb128 .LVL28-.Ltext0
 954 006f 01        		.uleb128 0x1
 955 0070 52        		.byte	0x52
 956 0071 04        		.byte	0x4
 957 0072 A002      		.uleb128 .LVL28-.Ltext0
 958 0074 A202      		.uleb128 .LVL29-.Ltext0
 959 0076 0E        		.uleb128 0xe
 960 0077 91        		.byte	0x91
 961 0078 70        		.sleb128 -16
 962 0079 06        		.byte	0x6
 963 007a 34        		.byte	0x34
 964 007b 29        		.byte	0x29
 965 007c 09        		.byte	0x9
 966 007d FF        		.byte	0xff
 967 007e 1E        		.byte	0x1e
 968 007f 48        		.byte	0x48
 969 0080 24        		.byte	0x24
 970 0081 48        		.byte	0x48
 971 0082 26        		.byte	0x26
 972 0083 1F        		.byte	0x1f
 973 0084 9F        		.byte	0x9f
 974 0085 04        		.byte	0x4


 975 0086 A202      		.uleb128 .LVL29-.Ltext0
 976 0088 C402      		.uleb128 .LVL32-.Ltext0
 977 008a 01        		.uleb128 0x1
 978 008b 52        		.byte	0x52
 979 008c 00        		.byte	0
 980               	.LVUS0:
 981 008d 00        		.uleb128 .LVU18
 982 008e 00        		.uleb128 .LVU24
 983 008f 00        		.uleb128 .LVU24
 984 0090 00        		.uleb128 .LVU34
 985 0091 00        		.uleb128 .LVU34
 986 0092 00        		.uleb128 .LVU37
 987 0093 00        		.uleb128 .LVU37
 988 0094 00        		.uleb128 .LVU45
 989 0095 00        		.uleb128 .LVU46
 990 0096 00        		.uleb128 .LVU50
 991 0097 00        		.uleb128 .LVU50
 992 0098 00        		.uleb128 0
 993               	.LLST0:
 994 0099 04        		.byte	0x4
 995 009a 4C        		.uleb128 .LVL4-.Ltext0
 996 009b 62        		.uleb128 .LVL5-.Ltext0
 997 009c 01        		.uleb128 0x1
 998 009d 50        		.byte	0x50
 999 009e 04        		.byte	0x4
 1000 009f 62        		.uleb128 .LVL5-.Ltext0
 1001 00a0 7C        		.uleb128 .LVL11-.Ltext0
 1002 00a1 01        		.uleb128 0x1
 1003 00a2 52        		.byte	0x52
 1004 00a3 04        		.byte	0x4
 1005 00a4 7C        		.uleb128 .LVL11-.Ltext0
 1006 00a5 8B01      		.uleb128 .LVL12-1-.Ltext0
 1007 00a7 01        		.uleb128 0x1
 1008 00a8 50        		.byte	0x50
 1009 00a9 04        		.byte	0x4
 1010 00aa 8B01      		.uleb128 .LVL12-1-.Ltext0
 1011 00ac A601      		.uleb128 .LVL15-.Ltext0
 1012 00ae 01        		.uleb128 0x1
 1013 00af 52        		.byte	0x52
 1014 00b0 04        		.byte	0x4
 1015 00b1 A801      		.uleb128 .LVL16-.Ltext0
 1016 00b3 B501      		.uleb128 .LVL18-1-.Ltext0
 1017 00b5 01        		.uleb128 0x1
 1018 00b6 50        		.byte	0x50
 1019 00b7 04        		.byte	0x4
 1020 00b8 B501      		.uleb128 .LVL18-1-.Ltext0
 1021 00ba D201      		.uleb128 .LFE3-.Ltext0
 1022 00bc 01        		.uleb128 0x1
 1023 00bd 52        		.byte	0x52
 1024 00be 00        		.byte	0
 1025               	.LVUS1:
 1026 00bf 01        		.uleb128 .LVU13
 1027 00c0 00        		.uleb128 .LVU16
 1028 00c1 00        		.uleb128 .LVU16
 1029 00c2 00        		.uleb128 .LVU29
 1030 00c3 00        		.uleb128 .LVU29
 1031 00c4 00        		.uleb128 .LVU30


 1032 00c5 00        		.uleb128 .LVU32
 1033 00c6 00        		.uleb128 .LVU43
 1034 00c7 00        		.uleb128 .LVU43
 1035 00c8 00        		.uleb128 .LVU45
 1036 00c9 00        		.uleb128 .LVU45
 1037 00ca 00        		.uleb128 .LVU46
 1038 00cb 00        		.uleb128 .LVU46
 1039 00cc 00        		.uleb128 .LVU49
 1040 00cd 00        		.uleb128 .LVU49
 1041 00ce 01        		.uleb128 .LVU53
 1042 00cf 01        		.uleb128 .LVU53
 1043 00d0 02        		.uleb128 .LVU54
 1044 00d1 02        		.uleb128 .LVU54
 1045 00d2 00        		.uleb128 .LVU55
 1046               	.LLST1:
 1047 00d3 04        		.byte	0x4
 1048 00d4 34        		.uleb128 .LVL1-.Ltext0
 1049 00d5 46        		.uleb128 .LVL2-.Ltext0
 1050 00d6 02        		.uleb128 0x2
 1051 00d7 30        		.byte	0x30
 1052 00d8 9F        		.byte	0x9f
 1053 00d9 04        		.byte	0x4
 1054 00da 46        		.uleb128 .LVL2-.Ltext0
 1055 00db 70        		.uleb128 .LVL7-.Ltext0
 1056 00dc 01        		.uleb128 0x1
 1057 00dd 53        		.byte	0x53
 1058 00de 04        		.byte	0x4
 1059 00df 70        		.uleb128 .LVL7-.Ltext0
 1060 00e0 72        		.uleb128 .LVL8-.Ltext0
 1061 00e1 03        		.uleb128 0x3
 1062 00e2 73        		.byte	0x73
 1063 00e3 7F        		.sleb128 -1
 1064 00e4 9F        		.byte	0x9f
 1065 00e5 04        		.byte	0x4
 1066 00e6 76        		.uleb128 .LVL9-.Ltext0
 1067 00e7 9C01      		.uleb128 .LVL14-.Ltext0
 1068 00e9 01        		.uleb128 0x1
 1069 00ea 53        		.byte	0x53
 1070 00eb 04        		.byte	0x4
 1071 00ec 9C01      		.uleb128 .LVL14-.Ltext0
 1072 00ee A601      		.uleb128 .LVL15-.Ltext0
 1073 00f0 03        		.uleb128 0x3
 1074 00f1 73        		.byte	0x73
 1075 00f2 7F        		.sleb128 -1
 1076 00f3 9F        		.byte	0x9f
 1077 00f4 04        		.byte	0x4
 1078 00f5 A601      		.uleb128 .LVL15-.Ltext0
 1079 00f7 A801      		.uleb128 .LVL16-.Ltext0
 1080 00f9 03        		.uleb128 0x3
 1081 00fa 70        		.byte	0x70
 1082 00fb 7F        		.sleb128 -1
 1083 00fc 9F        		.byte	0x9f
 1084 00fd 04        		.byte	0x4
 1085 00fe A801      		.uleb128 .LVL16-.Ltext0
 1086 0100 AE01      		.uleb128 .LVL17-.Ltext0
 1087 0102 01        		.uleb128 0x1
 1088 0103 53        		.byte	0x53


 1089 0104 04        		.byte	0x4
 1090 0105 AE01      		.uleb128 .LVL17-.Ltext0
 1091 0107 C601      		.uleb128 .LVL20-.Ltext0
 1092 0109 03        		.uleb128 0x3
 1093 010a 73        		.byte	0x73
 1094 010b 01        		.sleb128 1
 1095 010c 9F        		.byte	0x9f
 1096 010d 04        		.byte	0x4
 1097 010e C601      		.uleb128 .LVL20-.Ltext0
 1098 0110 C601      		.uleb128 .LVL20-.Ltext0
 1099 0112 01        		.uleb128 0x1
 1100 0113 53        		.byte	0x53
 1101 0114 04        		.byte	0x4
 1102 0115 C601      		.uleb128 .LVL20-.Ltext0
 1103 0117 CA01      		.uleb128 .LVL21-.Ltext0
 1104 0119 03        		.uleb128 0x3
 1105 011a 73        		.byte	0x73
 1106 011b 7F        		.sleb128 -1
 1107 011c 9F        		.byte	0x9f
 1108 011d 00        		.byte	0
 1109               	.LVUS2:
 1110 011e 00        		.uleb128 .LVU12
 1111 011f 00        		.uleb128 .LVU45
 1112 0120 00        		.uleb128 .LVU46
 1113 0121 00        		.uleb128 0
 1114               	.LLST2:
 1115 0122 04        		.byte	0x4
 1116 0123 34        		.uleb128 .LVL1-.Ltext0
 1117 0124 A601      		.uleb128 .LVL15-.Ltext0
 1118 0126 01        		.uleb128 0x1
 1119 0127 54        		.byte	0x54
 1120 0128 04        		.byte	0x4
 1121 0129 A801      		.uleb128 .LVL16-.Ltext0
 1122 012b D201      		.uleb128 .LFE3-.Ltext0
 1123 012d 01        		.uleb128 0x1
 1124 012e 54        		.byte	0x54
 1125 012f 00        		.byte	0
 1126               	.Ldebug_loc3:
 1127               		.section	.debug_aranges,"",@progbits
 1128 0000 0000 001C 		.long	0x1c
 1129 0004 0002      		.word	0x2
 1130 0006 0000 0000 		.long	.Ldebug_info0
 1131 000a 04        		.byte	0x4
 1132 000b 00        		.byte	0
 1133 000c 0000      		.word	0
 1134 000e 0000      		.word	0
 1135 0010 0000 0000 		.long	.Ltext0
 1136 0014 0000 015E 		.long	.Letext0-.Ltext0
 1137 0018 0000 0000 		.long	0
 1138 001c 0000 0000 		.long	0
 1139               		.section	.debug_line,"",@progbits
 1140               	.Ldebug_line0:
 1141 0000 0000 01BD 		.section	.debug_str,"MS",@progbits,1
 1141      0003 0000 
 1141      0054 0201 
 1141      FB0E 0D00 
 1141      0101 0101 


 1142               	.LASF6:
 1143 0000 6C6F 6E67 		.string	"long long int"
 1143      206C 6F6E 
 1143      6720 696E 
 1143      7400 
 1144               	.LASF9:
 1145 000e 756E 7369 		.string	"unsigned int"
 1145      676E 6564 
 1145      2069 6E74 
 1145      00
 1146               	.LASF14:
 1147 001b 474E 5520 		.string	"GNU C17 11.4.0 -mcpu=68000 -msoft-float -g -O2 -fomit-frame-pointer"
 1147      4331 3720 
 1147      3131 2E34 
 1147      2E30 202D 
 1147      6D63 7075 
 1148               	.LASF11:
 1149 005f 6663 6E74 		.string	"fcntl"
 1149      6C00 
 1150               	.LASF12:
 1151 0065 7772 6974 		.string	"write"
 1151      6500 
 1152               	.LASF5:
 1153 006b 6C6F 6E67 		.string	"long unsigned int"
 1153      2075 6E73 
 1153      6967 6E65 
 1153      6420 696E 
 1153      7400 
 1154               	.LASF7:
 1155 007d 6C6F 6E67 		.string	"long long unsigned int"
 1155      206C 6F6E 
 1155      6720 756E 
 1155      7369 676E 
 1155      6564 2069 
 1156               	.LASF15:
 1157 0094 6373 7973 		.string	"csys68k.c"
 1157      3638 6B2E 
 1157      6300 
 1158               	.LASF16:
 1159 009e 2F68 6F6D 		.string	"/home/students/4494672686/sw2-3/theme3/mtk_3"
 1159      652F 7374 
 1159      7564 656E 
 1159      7473 2F34 
 1159      3439 3436 
 1160               	.LASF1:
 1161 00cb 756E 7369 		.string	"unsigned char"
 1161      676E 6564 
 1161      2063 6861 
 1161      7200 
 1162               	.LASF10:
 1163 00d9 6368 6172 		.string	"char"
 1163      00
 1164               	.LASF19:
 1165 00de 7265 6164 		.string	"read"
 1165      00
 1166               	.LASF4:
 1167 00e3 6C6F 6E67 		.string	"long int"


 1167      2069 6E74 
 1167      00
 1168               	.LASF13:
 1169 00ec 6E62 7974 		.string	"nbytes"
 1169      6573 00
 1170               	.LASF18:
 1171 00f3 696E 6279 		.string	"inbyte"
 1171      7465 00
 1172               	.LASF3:
 1173 00fa 7368 6F72 		.string	"short unsigned int"
 1173      7420 756E 
 1173      7369 676E 
 1173      6564 2069 
 1173      6E74 00
 1174               	.LASF0:
 1175 010d 7369 676E 		.string	"signed char"
 1175      6564 2063 
 1175      6861 7200 
 1176               	.LASF8:
 1177 0119 6C6F 6E67 		.string	"long double"
 1177      2064 6F75 
 1177      626C 6500 
 1178               	.LASF2:
 1179 0125 7368 6F72 		.string	"short int"
 1179      7420 696E 
 1179      7400 
 1180               	.LASF17:
 1181 012f 6F75 7462 		.string	"outbyte"
 1181      7974 6500 
 1182               		.ident	"GCC: (GNU) 11.4.0"




   1               	.global inbyte
   2               	.include "equdefs.inc"
   1               	***********************************************
   2               	** 変数の定義
   3               	***********************************************
   4               	
   5               	***************************************************************
   6               	** 各種レジスタ定義
   7               	***************************************************************
   8               	***************
   9               	** レジスタ群の先頭
  10               	***************
  11               	.equ REGBASE, 	0xFFF000 	| DMAP を使用．
  12               	.equ IOBASE, 	0x00d00000
  13               		
  14               	***************
  15               	** 割り込み関係のレジスタ
  16               	***************
  17               	.equ IVR, REGBASE+0x300 	| 割り込みベクタレジスタ
  18               	.equ IMR, REGBASE+0x304 	| 割り込みマスクレジスタ
  19               	.equ ISR, REGBASE+0x30c 	| 割り込みステータスレジスタ
  20               	.equ IPR, REGBASE+0x310 	| 割り込みペンディングレジスタ
  21               		
  22               	***************
  23               	** タイマ関係のレジスタ
  24               	***************
  25               	.equ TCTL1, 	REGBASE+0x600 	| タイマ１コントロールレジスタ
  26               	.equ TPRER1, 	REGBASE+0x602 	| タイマ１プリスケーラレジスタ
  27               	.equ TCMP1, 	REGBASE+0x604 	| タイマ１コンペアレジスタ
  28               	.equ TCN1, 	REGBASE+0x608 	| タイマ１カウンタレジスタ
  29               	.equ TSTAT1, 	REGBASE+0x60a 	| タイマ１ステータスレジスタ
  30               		
  31               	***************
  32               	** UART1（送受信）関係のレジスタ
  33               	***************
  34               	.equ USTCNT1, 	REGBASE+0x900 	| UART1 ステータス/コントロールレジスタ
  35               	.equ UBAUD1, 	REGBASE+0x902 	| UART1 ボーコントロールレジスタ
  36               	.equ URX1, 	REGBASE+0x904 	| UART1 受信レジスタ
  37               	.equ UTX1, 	REGBASE+0x906 	| UART1 送信レジスタ
  38               		
  39               	***************
  40               	** LED
  41               	***************
  42               	.equ LED7, IOBASE+0x000002f
  43               	.equ LED6, IOBASE+0x000002d
  44               	.equ LED5, IOBASE+0x000002b
  45               	.equ LED4, IOBASE+0x0000029
  46               	.equ LED3, IOBASE+0x000003f
  47               	.equ LED2, IOBASE+0x000003d
  48               	.equ LED1, IOBASE+0x000003b
  49               	.equ LED0, IOBASE+0x0000039
  50               	
  51               	***************
  52               	** システムコール番号
  53               	***************
  54               	.equ SYSCALL_NUM_GETSTRING, 	1
  55               	.equ SYSCALL_NUM_PUTSTRING, 	2


  56               	.equ SYSCALL_NUM_RESET_TIMER, 	3
  57               	.equ SYSCALL_NUM_SET_TIMER, 	4
  58               	
  59               	****************************************************************
  60               	*** 初期値のあるデータ領域
  61               	****************************************************************
  62               	.section .data
  63               	
  64               	.even 				| \n: 次の行へ (ラインフィード)
  65 0000 0000      	TTC:	.dc.w 0
  66               	.even
  67               		
  68               	****************************************************************
  69               	*** 初期値の無いデータ領域
  70               	****************************************************************
  71               	.section .bss
  72 0000 0000 0000 	BUF: .ds.b 256 			| BUF[256]
  72      0000 0000 
  72      0000 0000 
  72      0000 0000 
  72      0000 0000 
  73               	
  74               	.even
  75 0100 0000 0000 	USR_STK: .ds.b 0x4000 		| ユーザスタック領域
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  76               	.even
  77               	USR_STK_TOP: 			| ユーザスタック領域の最後尾
  78               		
  79               	*******************************
  80               	.section .bss
  81 4100 0000 0000 	Queue0:		.ds.b	274	/* 受信用キュー */
  81      0000 0000 
  81      0000 0000 
  81      0000 0000 
  81      0000 0000 
  82 4212 0000 0000 	Queue1:		.ds.b	274	/* 送信用キュー */
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  83               	
  84               	.section .text
  85               	.equ	BF_START, 	0		/* キューのデータ領域の先頭 */
  86               	.equ	BF_END, 	255		/* キューのデータ領域の最後尾 */
  87               	.equ	top, 		256		/* キューの先頭アドレスを保持へのオフセット */
  88               	.equ	out, 		260		/* 次にpopするデータアドレスを保持へのオフセット */
  89               	.equ	in, 		264		/* 次にinするデータアドレスを保持へのオフセット */
  90               	.equ	bottom, 	268		/* キューの最終アドレスを保持へのオフセット */
  91               	.equ	s, 		272		/* キュー内の要素数を保持する変数へのオフセット */
  92               	
  93               	
  94               	
   3               		
   4               	.text


   5               	.even
   6               	
   7               	inbyte:
   8 0000 4E56 FFFC 		link.w	%a6, #-4
   9 0004 48E7 7080 		movem.l %d1-%d3/%a0, -(%sp) 
  10               	
  11               	inbyte_loop:
  12 0008 7001      		move.l  #SYSCALL_NUM_GETSTRING, %d0
  13 000a 204F      		move.l  %sp, %a0
  14 000c D1FC 0000 	   	adda.l  #28, %a0
  14      001C 
  15 0012 2210      	   	move.l  (%a0),%d1  
  16               	
  17 0014 240E      	   	move.l  %a6, %d2
  18 0016 5382      	   	sub.l   #1,  %d2            
  19 0018 7601      	    	move.l  #1, %d3              
  20 001a 4E40      	    	trap    #0                        
  21               	   	
  22 001c 0C80 0000 	    	cmpi.l  #0, %d0         
  22      0000 
  23 0022 6700 FFE4 	    	beq     inbyte_loop     
  24 0026 13F8 0041 	    	move.b	'A', LED0     
  24      00D0 0039 
  25               	    	
  26 002e 13F8 0030 	    	move.b	'0', LED1 
  26      00D0 003B 
  27               	    	
  28 0036 102E FFFF 	    	move.b  -1(%a6), %d0
  29               	    	
  30 003a 4CDF 010E 	    	movem.l (%sp)+, %d1-%d3/%a0
  31 003e 4E5E      	    	unlk    %a6
  32 0040 4E75      		rts




   1               	**global変数の宣言
   2               	.global	first_task
   3               	.global	swtch
   4               	.global hard_clock
   5               	.global init_timer
   6               	.global skipmt
   7               	.global	P
   8               	.global	V
   9               	.global	pv_handler
  10               	
  11               	**外部入力（大域変数）
  12               	.extern curr_task
  13               	.extern next_task
  14               	.extern ready
  15               	.extern task_tab
  16               	
  17               	**外部関数
  18               	.extern addq
  19               	.extern sched
  20               	.extern	p_body
  21               	.extern	v_body
  22               	
  23               	**システムコール番号
  24               	.equ SYSCALL_NUM_GETSTRING,	1
  25               	.equ SYSCALL_NUM_PUTSTRING,	2
  26               	.equ SYSCALL_NUM_RESET_TIMER,   3
  27               	.equ SYSCALL_NUM_SET_TIMER,	4
  28               	.equ SYSCALL_NUM_SKIPMT, 5
  29               	
  30               	.equ PV_CALL_P,			0
  31               	.equ PV_CALL_V,			1
  32               	
  33               	.section .text
  34               	
  35               	*********************************************************************************
  36               	** ユーザタスク起動用ルーチン
  37               	** first_task
  38               	** 入出力なし
  39               	** 担当：一瀬
  40               	**
  41               	*********************************************************************************
  42               	first_task:
  43 0000 2039 0000 	    move.l	curr_task, %d0             /*curr_taskの番号をd1に*/	
  43      0000 
  44 0006 207C 0000 	    movea.l	#task_tab, %a0             /*task_tab配列の先頭アドレスをa0に*/
  44      0000 
  45               	
  46 000c C0FC 0014 	    mulu.w	#20, %d0                  /*curr_taskの番号に20を乗算し、d1に格納*/
  47 0010 D1C0      	    add.l   %d0, %a0                   /*a0にd1を加算し、curr_taskの先頭アドレスを計
  48               	 
  49 0012 2248      	    movea.l %a0, %a1
  50 0014 5889      	    add.l   #4,  %a1                   /*a0は該当のcurr_taskのstack_ptr(SSP）の先頭アド
  51               	
  52 0016 2E51      	    move.l  (%a1), %sp                 /*スーパーバイザーモードのspにSSPを回復*/
  53 0018 245F      	    move.l	(%sp)+, %a2                
  54 001a 4E62      	    move.l	%a2, %USP
  55               	


  56 001c 4CDF 7FFF 	    movem.l (%sp)+, %d0-%d7/%a0-%a6    /*レジスタ15本回復*/
  57               	        
  58 0020 4E73      	    rte
  59               	
  60               	***********************************************************************************
  61               	** タスクスイッチを実際に起こす関数
  62               	** swtch
  63               	** 入出力なし
  64               	** 担当：若松
  65               	***********************************************************************************
  66               	swtch:
  67 0022 40E7      		move.w	%SR,-(%sp)                 /* SRを退避しrteでの復帰を可能に */
  68               	
  69 0024 48E7 FFFE 		movem.l	%d0-%d7/%a0-%a6,-(%sp)	   /* 実行中タスクのレジスタ退避 */
  70 0028 4E68      		move.l	%usp, %a0
  71 002a 2F08      		move.l	%a0, -(%sp)
  72               		
  73 002c 2239 0000 		move.l 	curr_task, %d1             /* curr_task -> d1 */
  73      0000 
  74 0032 C2FC 0014 		mulu.w  #20, %d1                   /* TCB配列の各要素は4*5=20byte, タスクidに乗算 */
  75 0036 207C 0000 		movea.l #task_tab, %a0             /* task_tab配列の先頭アドレス -> a0 */
  75      0000 
  76 003c D1C1      		add.l   %d1, %a0                   /* task_tab配列内のcurr_taskの先頭アドレスまで移
  77 003e 5888      		add.l   #4,  %a0                   /* stack_ptr(SSP）の先頭アドレス -> a0 */
  78 0040 208F      		move.l  %sp, (%a0)                 /* 現在のタスクのTCBにSSPを記録*/
  79               		
  80 0042 2239 0000 		move.l  next_task, %d1             /* next_task-> d1 */
  80      0000 
  81 0048 23C1 0000 		move.l  %d1, curr_task             /* curr_taskをnext_taskで更新*/
  81      0000 
  82 004e C2FC 0014 		mulu.w  #20, %d1                   /* TCB配列の各要素は4*5=20byte, タスクidに乗算 */
  83 0052 207C 0000 		movea.l #task_tab, %a0             /* task_tab配列の先頭アドレス -> a0*/
  83      0000 
  84 0058 D1C1      		add.l   %d1, %a0                   /* task_tab配列内のcurr_taskの先頭アドレスまで移
  85 005a 5888      		add.l   #4,  %a0                   /* stack_ptr(SSP）の先頭アドレス -> a0 */
  86 005c 2E50      	 	move.l  (%a0),%sp                  /* スーパバイザモードのspにSSPを回復 */
  87               	
  88 005e 205F      	 	move.l	(%sp)+, %a0
  89 0060 4E60      	 	move.l	%a0, %USP   
  90 0062 4CDF 7FFF 		movem.l (%sp)+,%d0-%d7/%a0-%a6 	   /*次のタスクのレジスタを回復*/
  91               	
  92 0066 4E73      		rte
  93               	        
  94               	        
  95               	hard_clock:
  96 0068 48E7 FFFE 		movem.l	%d0-%d7/%a0-%a6, -(%sp)
  97               		
  98 006c 203C 0000 		move.l	#ready, %d0			|%d0->readyキューへのポインタ
  98      0000 
  99 0072 2239 0000 		move.l	curr_task, %d1			|%d1->タスクのID
  99      0000 
 100 0078 48E7 C000 		movem.l	%d0-%d1, -(%sp)		|%d0, %d1をスタックに積んで
 101 007c 4EB9 0000 		jsr	addq				|addqを実行
 101      0000 
 102 0082 DFFC 0000 		adda.l	#8, %sp			|%d0, %d1の8バイト分を%spに加算
 102      0008 
 103               		


 104 0088 4EB9 0000 		jsr	sched
 104      0000 
 105 008e 4EBA FF92 		jsr	swtch
 106               	
 107 0092 4CDF 7FFF 		movem.l	(%sp)+, %d0-%d7/%a0-%a6
 108               		
 109 0096 4E75      		rts     
 110               	        
 111               	        
 112               	init_timer:
 113 0098 48E7 E000 		movem.l %d0-%d2, -(%sp) 
 114 009c 7003      		move.l #SYSCALL_NUM_RESET_TIMER, %d0    | タイマーをリセット
 115 009e 4E40      		trap #0
 116               	    
 117 00a0 7004      		move.l #SYSCALL_NUM_SET_TIMER, %d0      | タイマーをセット
 118 00a2 323C 03E8 		move.w #1000, %d1			                                        | およそ１秒くらい
 119 00a6 243C 0000 		move.l #hard_clock, %d2                                        | 割り込み時に呼び出すル
 119      0000 
 120 00ac 4E40      		trap #0
 121               	    
 122 00ae 4CDF 0007 		movem.l (%sp)+,%d0-%d2
 123 00b2 4E75      		rts  
 124               	
 125               	skipmt:
 126 00b4 48E7 E000 		movem.l %d0-%d2, -(%sp) 
 127 00b8 7005      		move.l #SYSCALL_NUM_SKIPMT, %d0
 128 00ba 4E40      		trap	#0
 129               		
 130 00bc 4CDF 0007 	  	movem.l (%sp)+,%d0-%d2
 131 00c0 4E75      		rts  
 132               	
 133               	P:
 134 00c2 4E56 0000 		link.w	%a6,#0
 135 00c6 48E7 C000 		movem.l	%d0-%d1,-(%sp)  /*レジスタ退避*/
 136               		
 137 00ca 7000      		move.l	#0,%d0          /*PシステムコールIDの0をd0レジスタにセット*/
 138 00cc 222E 0008 		move.l	8(%a6),%d1      /*スタックから取り出した引数（セマフォID）をd1レジス
 139 00d0 4E41      		trap	#1              
 140               		
 141 00d2 4CDF 0003 		movem.l	(%sp)+,%d0-%d1  /*レジスタ復帰*/
 142 00d6 4E5E      		unlk	%a6
 143               		
 144 00d8 4E75      		rts
 145               		
 146               	V:
 147 00da 4E56 0000 		link.w	%a6,#0
 148 00de 48E7 C000 		movem.l	%d0-%d1,-(%sp)  /*レジスタ退避*/
 149               		
 150 00e2 7001      		move.l	#1,%d0          /*VシステムコールIDの1をd1レジスタにセット*/
 151 00e4 222E 0008 		move.l	8(%a6),%d1      /*スタックから取り出した引数（セマフォID)をd1レジス
 152 00e8 4E41      		trap	#1
 153               		
 154 00ea 4CDF 0003 		movem.l	(%sp)+,%d0-%d1  /*レジスタ復帰*/
 155 00ee 4E5E      		unlk	%a6
 156               		
 157 00f0 4E75      		rts
 158               	


 159               	pv_handler:
 160 00f2 48E7 FFFE 		movem.l %a0-%a6/%d0-%d7, -(%sp) 
 161 00f6 40E7      		move.w	%SR,-(%sp)  /*SRをスタックに退避*/
 162 00f8 46FC 2700 		move.w	#0x2700,%SR /*走行レベルを７にして割り込み禁止*/
 163               		
 164 00fc 48E7 4000 		movem.l	%d1,-(%sp)  /*レジスタd1をスタックに退避*/
 165 0100 0C80 0000 		cmpi.l	#0,%d0      /*d0の値が0であるか比較*/
 165      0000 
 166 0106 6600 000C 		bne	pv_handler_1    /*d0が0でないならば分岐*/
 167 010a 4EB9 0000 		jsr	p_body          /*p_body()を呼び出す*/
 167      0000 
 168 0110 6000 0012 		bra	pv_handler_end  /*復帰処理へ*/
 169               		
 170               	pv_handler_1:
 171 0114 0C80 0000 		cmpi.l	#1,%d0      /*d0の値が1であるか比較*/
 171      0001 
 172 011a 6600 0008 		bne	pv_handler_end  /*d0が1でないならば分岐*/
 173 011e 4EB9 0000 		jsr	v_body          /*v_body()を呼び出す*/
 173      0000 
 174               		
 175               	pv_handler_end:
 176               	
 177 0124 4CDF 0002 		movem.l	(%sp)+,%d1  /*レジスタd1をスタックから復帰*/
 178 0128 46DF      		move.w	(%sp)+,%SR  /*SRをスタックから復帰*/
 179 012a 4CDF 7FFF 		movem.l (%sp)+, %a0-%a6/%d0-%d7
 180 012e 4E73      		rte                 /*割り込み終了*/         




   1               	#NO_APP
   2               		.file	"mtk_c.c"
   3               		.text
   4               	.Ltext0:
   5               		.cfi_sections	.debug_frame
   6               		.align	2
   7               		.globl	init_kernel
   8               		.type	init_kernel, @function
   9               	init_kernel:
  10               	.LFB3:
  11               		.file 1 "mtk_c.c"
   1:mtk_c.c       **** #include <stdio.h>
   2:mtk_c.c       **** #include "mtk_c.h"
   3:mtk_c.c       **** 
   4:mtk_c.c       **** TASK_ID_TYPE curr_task;
   5:mtk_c.c       **** TASK_ID_TYPE new_task;
   6:mtk_c.c       **** TASK_ID_TYPE next_task;
   7:mtk_c.c       **** TASK_ID_TYPE ready;
   8:mtk_c.c       **** 
   9:mtk_c.c       **** SEMAPHORE_TYPE semaphore[NUMSEMAPHORE];
  10:mtk_c.c       **** TCB_TYPE task_tab[NUMTASK + 1];
  11:mtk_c.c       **** STACK_TYPE stacks[NUMTASK];
  12:mtk_c.c       **** 
  13:mtk_c.c       **** FILE *com0in;
  14:mtk_c.c       **** FILE *com0out;
  15:mtk_c.c       **** FILE *com1in;
  16:mtk_c.c       **** FILE *com1out;
  17:mtk_c.c       **** 
  18:mtk_c.c       **** /*======================================================
  19:mtk_c.c       **** カーネルの初期化
  20:mtk_c.c       **** init_kernel:
  21:mtk_c.c       **** 引数 : なし
  22:mtk_c.c       **** 返り値 : なし
  23:mtk_c.c       **** 担当 : 若松
  24:mtk_c.c       **** ========================================================*/
  25:mtk_c.c       **** 
  26:mtk_c.c       **** void init_kernel()
  27:mtk_c.c       **** {
  12               		.loc 1 27 1 view -0
  13               		.cfi_startproc
  28:mtk_c.c       ****   /* TCB配列の初期化. TCB配列の各要素はTCB_TYPE型の構造体 */
  29:mtk_c.c       ****   for (int i = 0; i <= NUMTASK; i++)
  14               		.loc 1 29 3 view .LVU1
  15               	.LBB23:
  16               		.loc 1 29 8 view .LVU2
  17               	.LVL0:
  18               		.loc 1 29 21 view .LVU3
  19 0000 41F9 0000 		lea task_tab,%a0
  19      0000 
  20               	.LVL1:
  21               	.L2:
  30:mtk_c.c       ****   {                                /* id = 0 は使わないが初期化は行っておく */
  31:mtk_c.c       ****     task_tab[i].status = EMPTY;    /* status = EMPTY */
  22               		.loc 1 31 5 discriminator 3 view .LVU4
  23               		.loc 1 31 24 is_stmt 0 discriminator 3 view .LVU5
  24 0006 42A8 000C 		clr.l 12(%a0)
  32:mtk_c.c       ****     task_tab[i].next = NULLTASKID; /* 次のタスクidはNULLTASKID */


  25               		.loc 1 32 5 is_stmt 1 discriminator 3 view .LVU6
  26               		.loc 1 32 22 is_stmt 0 discriminator 3 view .LVU7
  27 000a 42A8 0010 		clr.l 16(%a0)
  33:mtk_c.c       ****     task_tab[i].task_addr = NULL;  /* タスクアドレス = NULL */
  28               		.loc 1 33 5 is_stmt 1 discriminator 3 view .LVU8
  29               		.loc 1 33 27 is_stmt 0 discriminator 3 view .LVU9
  30 000e 4290      		clr.l (%a0)
  34:mtk_c.c       ****     task_tab[i].stack_ptr = NULL;  /* スタックアドレス = NULL*/
  31               		.loc 1 34 5 is_stmt 1 discriminator 3 view .LVU10
  32               		.loc 1 34 27 is_stmt 0 discriminator 3 view .LVU11
  33 0010 42A8 0004 		clr.l 4(%a0)
  35:mtk_c.c       ****     task_tab[i].priority = 0;      /* 優先度は0 */
  34               		.loc 1 35 5 is_stmt 1 discriminator 3 view .LVU12
  35               		.loc 1 35 26 is_stmt 0 discriminator 3 view .LVU13
  36 0014 42A8 0008 		clr.l 8(%a0)
  29:mtk_c.c       ****   {                                /* id = 0 は使わないが初期化は行っておく */
  37               		.loc 1 29 34 is_stmt 1 discriminator 3 view .LVU14
  29:mtk_c.c       ****   {                                /* id = 0 は使わないが初期化は行っておく */
  38               		.loc 1 29 21 discriminator 3 view .LVU15
  39 0018 41E8 0014 		lea (20,%a0),%a0
  40 001c B1FC 0000 		cmp.l #task_tab+120,%a0
  40      0000 
  41 0022 66E2      		jne .L2
  42               	.LBE23:
  36:mtk_c.c       ****   }
  37:mtk_c.c       **** 
  38:mtk_c.c       ****   /* readyキューの初期化 */
  39:mtk_c.c       ****   ready = 0; /* 実行待ちタスクはない */
  43               		.loc 1 39 3 view .LVU16
  44               		.loc 1 39 9 is_stmt 0 view .LVU17
  45 0024 42B9 0000 		clr.l ready
  45      0000 
  40:mtk_c.c       **** 
  41:mtk_c.c       ****   /* pr_handler = TRAP #1 */
  42:mtk_c.c       ****   *(unsigned int *)0x084 = (unsigned int)pv_handler; /* 関数名でアドレス参照 */
  46               		.loc 1 42 3 is_stmt 1 view .LVU18
  47               		.loc 1 42 26 is_stmt 0 view .LVU19
  48 002a 21FC 0000 		move.l #pv_handler,132.w
  48      0000 0084 
  43:mtk_c.c       **** 
  44:mtk_c.c       ****   /* セマフォの値を初期化 */
  45:mtk_c.c       ****   for (int i = 0; i < NUMSEMAPHORE; i++)
  49               		.loc 1 45 3 is_stmt 1 view .LVU20
  50               	.LBB24:
  51               		.loc 1 45 8 view .LVU21
  52               	.LVL2:
  53               		.loc 1 45 21 view .LVU22
  46:mtk_c.c       ****   {
  47:mtk_c.c       ****     semaphore[i].count = 1;              /* セマフォは専有されていない */
  54               		.loc 1 47 5 view .LVU23
  55               		.loc 1 47 24 is_stmt 0 view .LVU24
  56 0032 7001      		moveq #1,%d0
  57 0034 23C0 0000 		move.l %d0,semaphore
  57      0000 
  48:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  58               		.loc 1 48 5 is_stmt 1 view .LVU25
  59               		.loc 1 48 28 is_stmt 0 view .LVU26


  60 003a 42B9 0000 		clr.l semaphore+8
  60      0000 
  45:mtk_c.c       ****   {
  61               		.loc 1 45 38 is_stmt 1 view .LVU27
  62               	.LVL3:
  45:mtk_c.c       ****   {
  63               		.loc 1 45 21 view .LVU28
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  64               		.loc 1 47 5 view .LVU29
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  65               		.loc 1 47 24 is_stmt 0 view .LVU30
  66 0040 23C0 0000 		move.l %d0,semaphore+12
  66      0000 
  67               		.loc 1 48 5 is_stmt 1 view .LVU31
  68               		.loc 1 48 28 is_stmt 0 view .LVU32
  69 0046 42B9 0000 		clr.l semaphore+20
  69      0000 
  45:mtk_c.c       ****   {
  70               		.loc 1 45 38 is_stmt 1 view .LVU33
  71               	.LVL4:
  45:mtk_c.c       ****   {
  72               		.loc 1 45 21 view .LVU34
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  73               		.loc 1 47 5 view .LVU35
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  74               		.loc 1 47 24 is_stmt 0 view .LVU36
  75 004c 23C0 0000 		move.l %d0,semaphore+24
  75      0000 
  76               		.loc 1 48 5 is_stmt 1 view .LVU37
  77               		.loc 1 48 28 is_stmt 0 view .LVU38
  78 0052 42B9 0000 		clr.l semaphore+32
  78      0000 
  45:mtk_c.c       ****   {
  79               		.loc 1 45 38 is_stmt 1 view .LVU39
  80               	.LVL5:
  45:mtk_c.c       ****   {
  81               		.loc 1 45 21 view .LVU40
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  82               		.loc 1 47 5 view .LVU41
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  83               		.loc 1 47 24 is_stmt 0 view .LVU42
  84 0058 23C0 0000 		move.l %d0,semaphore+36
  84      0000 
  85               		.loc 1 48 5 is_stmt 1 view .LVU43
  86               		.loc 1 48 28 is_stmt 0 view .LVU44
  87 005e 42B9 0000 		clr.l semaphore+44
  87      0000 
  45:mtk_c.c       ****   {
  88               		.loc 1 45 38 is_stmt 1 view .LVU45
  89               	.LVL6:
  45:mtk_c.c       ****   {
  90               		.loc 1 45 21 view .LVU46
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  91               		.loc 1 47 5 view .LVU47
  47:mtk_c.c       ****     semaphore[i].task_list = NULLTASKID; /* 初期化時点で次のタスクはない */
  92               		.loc 1 47 24 is_stmt 0 view .LVU48
  93 0064 23C0 0000 		move.l %d0,semaphore+48


  93      0000 
  94               		.loc 1 48 5 is_stmt 1 view .LVU49
  95               		.loc 1 48 28 is_stmt 0 view .LVU50
  96 006a 42B9 0000 		clr.l semaphore+56
  96      0000 
  45:mtk_c.c       ****   {
  97               		.loc 1 45 38 is_stmt 1 view .LVU51
  98               	.LVL7:
  45:mtk_c.c       ****   {
  99               		.loc 1 45 21 view .LVU52
 100               	.LBE24:
  49:mtk_c.c       ****   }
  50:mtk_c.c       **** }
 101               		.loc 1 50 1 is_stmt 0 view .LVU53
 102 0070 4E75      		rts
 103               		.cfi_endproc
 104               	.LFE3:
 105               		.size	init_kernel, .-init_kernel
 106               		.align	2
 107               		.globl	set_task
 108               		.type	set_task, @function
 109               	set_task:
 110               	.LVL8:
 111               	.LFB4:
  51:mtk_c.c       **** 
  52:mtk_c.c       **** /*======================================================
  53:mtk_c.c       **** ユーザタスクの初期化と登録
  54:mtk_c.c       **** set_task:
  55:mtk_c.c       **** 引数 : ユーザタスク関数へのポインタ(タスクの先頭番地)
  56:mtk_c.c       **** 返り値 : なし
  57:mtk_c.c       **** 担当：一瀬
  58:mtk_c.c       **** ========================================================*/
  59:mtk_c.c       **** 
  60:mtk_c.c       **** void set_task(void *p)
  61:mtk_c.c       **** {
 112               		.loc 1 61 1 is_stmt 1 view -0
 113               		.cfi_startproc
 114               		.loc 1 61 1 is_stmt 0 view .LVU55
 115 0072 48E7 3020 		movem.l #12320,-(%sp)
 116               		.cfi_def_cfa_offset 16
 117               		.cfi_offset 2, -16
 118               		.cfi_offset 3, -12
 119               		.cfi_offset 10, -8
 120 0076 242F 0010 		move.l 16(%sp),%d2
  62:mtk_c.c       ****   TASK_ID_TYPE i;
 121               		.loc 1 62 3 is_stmt 1 view .LVU56
  63:mtk_c.c       ****   for (int i = 1; i <= NUMTASK; i++)
 122               		.loc 1 63 3 view .LVU57
 123               	.LBB25:
 124               		.loc 1 63 8 view .LVU58
 125               	.LVL9:
 126               		.loc 1 63 21 view .LVU59
 127 007a 41F9 0000 		lea task_tab+32,%a0
 127      0000 
 128               		.loc 1 63 12 is_stmt 0 view .LVU60
 129 0080 7201      		moveq #1,%d1
 130               	.LVL10:


 131               	.L9:
  64:mtk_c.c       ****   {
  65:mtk_c.c       ****     if (task_tab[i].status == EMPTY)
 132               		.loc 1 65 5 is_stmt 1 view .LVU61
 133               		.loc 1 65 8 is_stmt 0 view .LVU62
 134 0082 4A90      		tst.l (%a0)
 135 0084 6700 00BA 		jeq .L19
  63:mtk_c.c       ****   for (int i = 1; i <= NUMTASK; i++)
 136               		.loc 1 63 34 is_stmt 1 discriminator 2 view .LVU63
 137 0088 5281      		addq.l #1,%d1
 138               	.LVL11:
  63:mtk_c.c       ****   for (int i = 1; i <= NUMTASK; i++)
 139               		.loc 1 63 21 discriminator 2 view .LVU64
 140 008a 41E8 0014 		lea (20,%a0),%a0
 141 008e 7006      		moveq #6,%d0
 142 0090 B081      		cmp.l %d1,%d0
 143 0092 66EE      		jne .L9
 144               	.LBE25:
  66:mtk_c.c       ****     {
  67:mtk_c.c       ****       new_task = i;
  68:mtk_c.c       ****       break;
  69:mtk_c.c       ****     } // タスクを走査し、空きスロット見つけたらそのIDをnew_taskに代入
  70:mtk_c.c       ****   }
  71:mtk_c.c       ****   task_tab[new_task].task_addr = p;                    // 空きスロットにユーザタスク
 145               		.loc 1 71 21 is_stmt 0 view .LVU65
 146 0094 2239 0000 		move.l new_task,%d1
 146      0000 
 147               	.LVL12:
 148               	.L8:
 149               		.loc 1 71 3 is_stmt 1 view .LVU66
 150               		.loc 1 71 32 is_stmt 0 view .LVU67
 151 009a 43F9 0000 		lea task_tab,%a1
 151      0000 
 152 00a0 2041      		move.l %d1,%a0
 153 00a2 D1C1      		add.l %d1,%a0
 154 00a4 D1C8      		add.l %a0,%a0
 155 00a6 D1C1      		add.l %d1,%a0
 156 00a8 D1C8      		add.l %a0,%a0
 157 00aa D1C8      		add.l %a0,%a0
 158 00ac 2382 8800 		move.l %d2,(%a1,%a0.l)
  72:mtk_c.c       ****   task_tab[new_task].status = OCCUPIED;                // スロットの使用状態を使用中
 159               		.loc 1 72 3 is_stmt 1 view .LVU68
 160               		.loc 1 72 29 is_stmt 0 view .LVU69
 161 00b0 41F1 8800 		lea (%a1,%a0.l),%a0
 162 00b4 7601      		moveq #1,%d3
 163 00b6 2143 000C 		move.l %d3,12(%a0)
  73:mtk_c.c       ****   task_tab[new_task].stack_ptr = init_stack(new_task); // init_stackで初期化
 164               		.loc 1 73 3 is_stmt 1 view .LVU70
 165               	.LVL13:
 166               	.LBB26:
 167               	.LBI26:
  74:mtk_c.c       ****   addq(&ready, new_task);                              // readyキューにnew_taskを登録
  75:mtk_c.c       **** }
  76:mtk_c.c       **** 
  77:mtk_c.c       **** /*==========================================================================
  78:mtk_c.c       **** ユーザタスク用のスタックの初期化
  79:mtk_c.c       **** init_stack:


  80:mtk_c.c       **** 引数   : タスクID
  81:mtk_c.c       **** 返り値 : 初期化後にユーザタスク用SSPが指すアドレス(void *型)
  82:mtk_c.c       **** 担当：若松、一瀬（共同）
  83:mtk_c.c       **** ===========================================================================*/
  84:mtk_c.c       **** 
  85:mtk_c.c       **** void *init_stack(TASK_ID_TYPE id)
 168               		.loc 1 85 7 view .LVU71
 169               	.LBB27:
  86:mtk_c.c       **** {
  87:mtk_c.c       ****   int *int_ssp;
 170               		.loc 1 87 3 view .LVU72
  88:mtk_c.c       ****   int_ssp = (int *)&stacks[id - 1].sstack[STKSIZE]; // Sスタックの底+1のアドレスをポ
 171               		.loc 1 88 3 view .LVU73
 172 00ba 2001      		move.l %d1,%d0
 173 00bc 760B      		moveq #11,%d3
 174 00be E7A8      		lsl.l %d3,%d0
 175               		.loc 1 88 11 is_stmt 0 view .LVU74
 176 00c0 2440      		move.l %d0,%a2
 177 00c2 D5FC 0000 		add.l #stacks,%a2
 177      0000 
 178               	.LVL14:
  89:mtk_c.c       **** 
  90:mtk_c.c       ****   *(--int_ssp) = (int)task_tab[id].task_addr; // 初期PCを積む
 179               		.loc 1 90 3 is_stmt 1 view .LVU75
 180               		.loc 1 90 16 is_stmt 0 view .LVU76
 181 00c8 2542 FFFC 		move.l %d2,-4(%a2)
  91:mtk_c.c       **** 
  92:mtk_c.c       ****   unsigned short int *short_ssp = (unsigned short int *)int_ssp;
 182               		.loc 1 92 3 is_stmt 1 view .LVU77
 183               	.LVL15:
  93:mtk_c.c       ****   *(--short_ssp) = 0x0000; // 初期SRを積む
 184               		.loc 1 93 3 view .LVU78
 185               		.loc 1 93 18 is_stmt 0 view .LVU79
 186 00cc 426A FFFA 		clr.w -6(%a2)
  94:mtk_c.c       ****   int_ssp = (int *)short_ssp;
 187               		.loc 1 94 3 is_stmt 1 view .LVU80
 188               	.LVL16:
  95:mtk_c.c       **** 
  96:mtk_c.c       ****   int_ssp -= 15;                                  // 15×4バイト分の領域を飛ばす（レ
 189               		.loc 1 96 3 view .LVU81
  97:mtk_c.c       ****   *(--int_ssp) = &stacks[id - 1].ustack[STKSIZE]; // 初期USPを積む
 190               		.loc 1 97 3 view .LVU82
 191               		.loc 1 97 18 is_stmt 0 view .LVU83
 192 00d0 0680 0000 		add.l #stacks-1024,%d0
 192      0000 
 193 00d6 2540 FFBA 		move.l %d0,-70(%a2)
  98:mtk_c.c       **** 
  99:mtk_c.c       ****   return (void *)int_ssp; // 関数終了時のSSPが返り値
 194               		.loc 1 99 3 is_stmt 1 view .LVU84
 195               	.LVL17:
  97:mtk_c.c       ****   *(--int_ssp) = &stacks[id - 1].ustack[STKSIZE]; // 初期USPを積む
 196               		.loc 1 97 16 is_stmt 0 view .LVU85
 197 00da 45EA FFBA 		lea (-70,%a2),%a2
 198               	.LVL18:
  97:mtk_c.c       ****   *(--int_ssp) = &stacks[id - 1].ustack[STKSIZE]; // 初期USPを積む
 199               		.loc 1 97 16 view .LVU86
 200 00de 214A 0004 		move.l %a2,4(%a0)


 201               	.LBE27:
 202               	.LBE26:
  74:mtk_c.c       **** }
 203               		.loc 1 74 3 is_stmt 1 view .LVU87
 204               	.LVL19:
 205               	.LBB28:
 206               	.LBI28:
 100:mtk_c.c       **** }
 101:mtk_c.c       **** 
 102:mtk_c.c       **** /*==========================================================================
 103:mtk_c.c       **** マルチタスク処理の開始
 104:mtk_c.c       **** begin_sch:
 105:mtk_c.c       **** 引数 : なし
 106:mtk_c.c       **** 返り値 : なし
 107:mtk_c.c       **** 担当 : 若松
 108:mtk_c.c       **** ===========================================================================*/
 109:mtk_c.c       **** 
 110:mtk_c.c       **** void begin_sch()
 111:mtk_c.c       **** {
 112:mtk_c.c       ****   curr_task = removeq(&ready); /* removeqで最初のタスクを設定 */
 113:mtk_c.c       ****   init_timer();                /* init_timerでタイマの初期化 */
 114:mtk_c.c       ****   first_task();                /* first_taskで最初のタスクを起動 */
 115:mtk_c.c       **** }
 116:mtk_c.c       **** 
 117:mtk_c.c       **** /*=============================================================
 118:mtk_c.c       **** タスクキューの最後尾へのTCBの追加
 119:mtk_c.c       **** addq:
 120:mtk_c.c       **** 引数 : キューへのポインタとタスクのID
 121:mtk_c.c       **** 返り値 : なし
 122:mtk_c.c       **** 担当：一瀬
 123:mtk_c.c       **** ===============================================================*/
 124:mtk_c.c       **** 
 125:mtk_c.c       **** void addq(TASK_ID_TYPE *que_ptr, TASK_ID_TYPE id)
 207               		.loc 1 125 6 view .LVU88
 208               	.LBB29:
 126:mtk_c.c       **** {
 127:mtk_c.c       ****   if (*que_ptr == NULLTASKID)
 209               		.loc 1 127 3 view .LVU89
 210               		.loc 1 127 7 is_stmt 0 view .LVU90
 211 00e2 2079 0000 		move.l ready,%a0
 211      0000 
 212               		.loc 1 127 6 view .LVU91
 213 00e8 B0FC 0000 		cmp.w #0,%a0
 214 00ec 660C      		jne .L10
 128:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 129:mtk_c.c       ****     *que_ptr = id; // 先頭にタスクを登録
 215               		.loc 1 129 5 is_stmt 1 view .LVU92
 216               		.loc 1 129 14 is_stmt 0 view .LVU93
 217 00ee 23C1 0000 		move.l %d1,ready
 217      0000 
 218               	.LBE29:
 219               	.LBE28:
  75:mtk_c.c       **** 
 220               		.loc 1 75 1 view .LVU94
 221 00f4 4CDF 040C 		movem.l (%sp)+,#1036
 222               	.LVL20:
  75:mtk_c.c       **** 


 223               		.loc 1 75 1 view .LVU95
 224 00f8 4E75      		rts
 225               	.LVL21:
 226               	.L10:
 227               	.LBB32:
 228               	.LBB31:
 229               	.LBB30:
 130:mtk_c.c       ****   }
 131:mtk_c.c       ****   else
 132:mtk_c.c       ****   {
 133:mtk_c.c       ****     TCB_TYPE *task_ptr = &task_tab[*que_ptr]; // 先頭のタスクのポインタ設定
 230               		.loc 1 133 5 is_stmt 1 view .LVU96
 134:mtk_c.c       ****     while (1)
 231               		.loc 1 134 5 view .LVU97
 135:mtk_c.c       ****     {
 136:mtk_c.c       ****       if ((*task_ptr).next == NULLTASKID)
 232               		.loc 1 136 7 view .LVU98
 233               		.loc 1 136 22 is_stmt 0 view .LVU99
 234 00fa 2008      		move.l %a0,%d0
 235 00fc D088      		add.l %a0,%d0
 236 00fe D080      		add.l %d0,%d0
 237 0100 D088      		add.l %a0,%d0
 238 0102 D080      		add.l %d0,%d0
 239 0104 D080      		add.l %d0,%d0
 240 0106 41F1 0800 		lea (%a1,%d0.l),%a0
 241               	.LVL22:
 242               		.loc 1 136 22 view .LVU100
 243 010a 2028 0010 		move.l 16(%a0),%d0
 244               		.loc 1 136 10 view .LVU101
 245 010e 6726      		jeq .L13
 246               	.LVL23:
 247               	.L12:
 137:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 138:mtk_c.c       ****         (*task_ptr).next = id; // タスクを登録
 139:mtk_c.c       ****         break;
 140:mtk_c.c       ****       }
 141:mtk_c.c       ****       else
 142:mtk_c.c       ****       {
 143:mtk_c.c       ****         task_ptr = &task_tab[(*task_ptr).next]; // 次のタスクにポインタを移動
 248               		.loc 1 143 9 is_stmt 1 view .LVU102
 134:mtk_c.c       ****     {
 249               		.loc 1 134 11 view .LVU103
 134:mtk_c.c       ****     {
 250               		.loc 1 134 5 view .LVU104
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 251               		.loc 1 136 7 view .LVU105
 252 0110 2040      		move.l %d0,%a0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 253               		.loc 1 136 22 is_stmt 0 view .LVU106
 254 0112 D080      		add.l %d0,%d0
 255               	.LVL24:
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 256               		.loc 1 136 22 view .LVU107
 257 0114 D080      		add.l %d0,%d0
 258 0116 D088      		add.l %a0,%d0
 259 0118 D080      		add.l %d0,%d0
 260 011a D080      		add.l %d0,%d0


 261 011c 2031 0810 		move.l 16(%a1,%d0.l),%d0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 262               		.loc 1 136 10 view .LVU108
 263 0120 66EE      		jne .L12
 264               		.loc 1 143 18 view .LVU109
 265 0122 2008      		move.l %a0,%d0
 266 0124 D088      		add.l %a0,%d0
 267 0126 D080      		add.l %d0,%d0
 268 0128 D088      		add.l %a0,%d0
 269 012a D080      		add.l %d0,%d0
 270 012c D080      		add.l %d0,%d0
 271 012e 2040      		move.l %d0,%a0
 272               	.LVL25:
 273               		.loc 1 143 18 view .LVU110
 274 0130 D1FC 0000 		add.l #task_tab,%a0
 274      0000 
 275               	.L13:
 138:mtk_c.c       ****         break;
 276               		.loc 1 138 9 is_stmt 1 view .LVU111
 138:mtk_c.c       ****         break;
 277               		.loc 1 138 26 is_stmt 0 view .LVU112
 278 0136 2141 0010 		move.l %d1,16(%a0)
 139:mtk_c.c       ****       }
 279               		.loc 1 139 9 is_stmt 1 view .LVU113
 280               	.LBE30:
 281               	.LBE31:
 282               	.LBE32:
  75:mtk_c.c       **** 
 283               		.loc 1 75 1 is_stmt 0 view .LVU114
 284 013a 4CDF 040C 		movem.l (%sp)+,#1036
 285               	.LVL26:
  75:mtk_c.c       **** 
 286               		.loc 1 75 1 view .LVU115
 287 013e 4E75      		rts
 288               	.LVL27:
 289               	.L19:
 290               	.LBB33:
  67:mtk_c.c       ****       break;
 291               		.loc 1 67 7 is_stmt 1 view .LVU116
  67:mtk_c.c       ****       break;
 292               		.loc 1 67 16 is_stmt 0 view .LVU117
 293 0140 23C1 0000 		move.l %d1,new_task
 293      0000 
  68:mtk_c.c       ****     } // タスクを走査し、空きスロット見つけたらそのIDをnew_taskに代入
 294               		.loc 1 68 7 is_stmt 1 view .LVU118
 295 0146 6000 FF52 		jra .L8
 296               	.LBE33:
 297               		.cfi_endproc
 298               	.LFE4:
 299               		.size	set_task, .-set_task
 300               		.align	2
 301               		.globl	init_stack
 302               		.type	init_stack, @function
 303               	init_stack:
 304               	.LVL28:
 305               	.LFB5:
  86:mtk_c.c       ****   int *int_ssp;


 306               		.loc 1 86 1 view -0
 307               		.cfi_startproc
  86:mtk_c.c       ****   int *int_ssp;
 308               		.loc 1 86 1 is_stmt 0 view .LVU120
 309 014a 2F02      		move.l %d2,-(%sp)
 310               		.cfi_def_cfa_offset 8
 311               		.cfi_offset 2, -8
 312 014c 202F 0008 		move.l 8(%sp),%d0
  87:mtk_c.c       ****   int_ssp = (int *)&stacks[id - 1].sstack[STKSIZE]; // Sスタックの底+1のアドレスをポ
 313               		.loc 1 87 3 is_stmt 1 view .LVU121
  88:mtk_c.c       **** 
 314               		.loc 1 88 3 view .LVU122
 315 0150 2400      		move.l %d0,%d2
 316 0152 720B      		moveq #11,%d1
 317 0154 E3AA      		lsl.l %d1,%d2
  88:mtk_c.c       **** 
 318               		.loc 1 88 11 is_stmt 0 view .LVU123
 319 0156 2042      		move.l %d2,%a0
 320 0158 D1FC 0000 		add.l #stacks,%a0
 320      0000 
 321               	.LVL29:
  90:mtk_c.c       **** 
 322               		.loc 1 90 3 is_stmt 1 view .LVU124
  90:mtk_c.c       **** 
 323               		.loc 1 90 35 is_stmt 0 view .LVU125
 324 015e 2200      		move.l %d0,%d1
 325 0160 D280      		add.l %d0,%d1
 326 0162 D281      		add.l %d1,%d1
 327 0164 D280      		add.l %d0,%d1
 328 0166 D281      		add.l %d1,%d1
 329 0168 D281      		add.l %d1,%d1
  90:mtk_c.c       **** 
 330               		.loc 1 90 16 view .LVU126
 331 016a 43F9 0000 		lea task_tab,%a1
 331      0000 
 332 0170 2171 1800 		move.l (%a1,%d1.l),-4(%a0)
 332      FFFC 
  92:mtk_c.c       ****   *(--short_ssp) = 0x0000; // 初期SRを積む
 333               		.loc 1 92 3 is_stmt 1 view .LVU127
 334               	.LVL30:
  93:mtk_c.c       ****   int_ssp = (int *)short_ssp;
 335               		.loc 1 93 3 view .LVU128
  93:mtk_c.c       ****   int_ssp = (int *)short_ssp;
 336               		.loc 1 93 18 is_stmt 0 view .LVU129
 337 0176 4268 FFFA 		clr.w -6(%a0)
  94:mtk_c.c       **** 
 338               		.loc 1 94 3 is_stmt 1 view .LVU130
 339               	.LVL31:
  96:mtk_c.c       ****   *(--int_ssp) = &stacks[id - 1].ustack[STKSIZE]; // 初期USPを積む
 340               		.loc 1 96 3 view .LVU131
  97:mtk_c.c       **** 
 341               		.loc 1 97 3 view .LVU132
  97:mtk_c.c       **** 
 342               		.loc 1 97 18 is_stmt 0 view .LVU133
 343 017a 0682 0000 		add.l #stacks-1024,%d2
 343      0000 
 344 0180 2142 FFBA 		move.l %d2,-70(%a0)


  99:mtk_c.c       **** }
 345               		.loc 1 99 3 is_stmt 1 view .LVU134
 100:mtk_c.c       **** 
 346               		.loc 1 100 1 is_stmt 0 view .LVU135
 347 0184 70BA      		moveq #-70,%d0
 348 0186 D088      		add.l %a0,%d0
 349               	.LVL32:
 100:mtk_c.c       **** 
 350               		.loc 1 100 1 view .LVU136
 351 0188 241F      		move.l (%sp)+,%d2
 352 018a 4E75      		rts
 353               		.cfi_endproc
 354               	.LFE5:
 355               		.size	init_stack, .-init_stack
 356               		.align	2
 357               		.globl	begin_sch
 358               		.type	begin_sch, @function
 359               	begin_sch:
 360               	.LFB6:
 111:mtk_c.c       ****   curr_task = removeq(&ready); /* removeqで最初のタスクを設定 */
 361               		.loc 1 111 1 is_stmt 1 view -0
 362               		.cfi_startproc
 112:mtk_c.c       ****   init_timer();                /* init_timerでタイマの初期化 */
 363               		.loc 1 112 3 view .LVU138
 364               	.LVL33:
 365               	.LBB34:
 366               	.LBI34:
 144:mtk_c.c       ****       }
 145:mtk_c.c       ****     }
 146:mtk_c.c       ****   }
 147:mtk_c.c       **** }
 148:mtk_c.c       **** 
 149:mtk_c.c       **** /*=============================================================
 150:mtk_c.c       **** タスクキューの先頭からTCBの除去
 151:mtk_c.c       **** removeq:
 152:mtk_c.c       **** 引数 : キューへのポインタ
 153:mtk_c.c       **** 返り値 : 先頭のID
 154:mtk_c.c       **** 担当：一瀬
 155:mtk_c.c       **** ===============================================================*/
 156:mtk_c.c       **** TASK_ID_TYPE removeq(TASK_ID_TYPE *que_ptr)
 367               		.loc 1 156 14 view .LVU139
 368               	.LBB35:
 157:mtk_c.c       **** {
 158:mtk_c.c       ****   TASK_ID_TYPE r_id = *que_ptr; // 返却値（先頭のタスクのidを取得）
 369               		.loc 1 158 3 view .LVU140
 370               		.loc 1 158 16 is_stmt 0 view .LVU141
 371 018c 2039 0000 		move.l ready,%d0
 371      0000 
 372               	.LVL34:
 159:mtk_c.c       ****   if (r_id != NULLTASKID)
 373               		.loc 1 159 3 is_stmt 1 view .LVU142
 374               		.loc 1 159 6 is_stmt 0 view .LVU143
 375 0192 671A      		jeq .L23
 376               	.LBB36:
 160:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 161:mtk_c.c       ****     TCB_TYPE *task_ptr = &task_tab[r_id]; // 先頭のタスクのポインタ設定
 377               		.loc 1 161 5 is_stmt 1 view .LVU144


 378               	.LVL35:
 162:mtk_c.c       ****     *que_ptr = (*task_ptr).next;          // 先頭から2番目のタスクを先頭にする
 379               		.loc 1 162 5 view .LVU145
 380               		.loc 1 162 27 is_stmt 0 view .LVU146
 381 0194 2040      		move.l %d0,%a0
 382 0196 D1C0      		add.l %d0,%a0
 383 0198 D1C8      		add.l %a0,%a0
 384 019a D1C0      		add.l %d0,%a0
 385 019c D1C8      		add.l %a0,%a0
 386 019e D1C8      		add.l %a0,%a0
 387 01a0 D1FC 0000 		add.l #task_tab+16,%a0
 387      0000 
 388               		.loc 1 162 14 view .LVU147
 389 01a6 23D0 0000 		move.l (%a0),ready
 389      0000 
 163:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 390               		.loc 1 163 5 is_stmt 1 view .LVU148
 391               		.loc 1 163 22 is_stmt 0 view .LVU149
 392 01ac 4290      		clr.l (%a0)
 393               	.LVL36:
 394               	.L23:
 395               		.loc 1 163 22 view .LVU150
 396               	.LBE36:
 164:mtk_c.c       ****   }
 165:mtk_c.c       ****   return r_id; // キューの先頭のタスクのidを返す
 397               		.loc 1 165 3 is_stmt 1 view .LVU151
 398               		.loc 1 165 3 is_stmt 0 view .LVU152
 399               	.LBE35:
 400               	.LBE34:
 112:mtk_c.c       ****   init_timer();                /* init_timerでタイマの初期化 */
 401               		.loc 1 112 13 view .LVU153
 402 01ae 23C0 0000 		move.l %d0,curr_task
 402      0000 
 113:mtk_c.c       ****   first_task();                /* first_taskで最初のタスクを起動 */
 403               		.loc 1 113 3 is_stmt 1 view .LVU154
 404 01b4 4EB9 0000 		jsr init_timer
 404      0000 
 405               	.LVL37:
 114:mtk_c.c       **** }
 406               		.loc 1 114 3 view .LVU155
 115:mtk_c.c       **** 
 407               		.loc 1 115 1 is_stmt 0 view .LVU156
 114:mtk_c.c       **** }
 408               		.loc 1 114 3 view .LVU157
 409 01ba 4EF9 0000 		jra first_task
 409      0000 
 410               	.LVL38:
 411               		.cfi_endproc
 412               	.LFE6:
 413               		.size	begin_sch, .-begin_sch
 414               		.align	2
 415               		.globl	addq
 416               		.type	addq, @function
 417               	addq:
 418               	.LVL39:
 419               	.LFB7:
 126:mtk_c.c       ****   if (*que_ptr == NULLTASKID)


 420               		.loc 1 126 1 is_stmt 1 view -0
 421               		.cfi_startproc
 126:mtk_c.c       ****   if (*que_ptr == NULLTASKID)
 422               		.loc 1 126 1 is_stmt 0 view .LVU159
 423 01c0 206F 0004 		move.l 4(%sp),%a0
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 424               		.loc 1 127 3 is_stmt 1 view .LVU160
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 425               		.loc 1 127 7 is_stmt 0 view .LVU161
 426 01c4 2210      		move.l (%a0),%d1
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 427               		.loc 1 127 6 view .LVU162
 428 01c6 6606      		jne .L30
 129:mtk_c.c       ****   }
 429               		.loc 1 129 5 is_stmt 1 view .LVU163
 129:mtk_c.c       ****   }
 430               		.loc 1 129 14 is_stmt 0 view .LVU164
 431 01c8 20AF 0008 		move.l 8(%sp),(%a0)
 147:mtk_c.c       **** 
 432               		.loc 1 147 1 view .LVU165
 433 01cc 4E75      		rts
 434               	.L30:
 435               	.LBB37:
 133:mtk_c.c       ****     while (1)
 436               		.loc 1 133 5 is_stmt 1 view .LVU166
 437               	.LVL40:
 134:mtk_c.c       ****     {
 438               		.loc 1 134 5 view .LVU167
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 439               		.loc 1 136 7 view .LVU168
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 440               		.loc 1 136 22 is_stmt 0 view .LVU169
 441 01ce 43F9 0000 		lea task_tab,%a1
 441      0000 
 442 01d4 2001      		move.l %d1,%d0
 443 01d6 D081      		add.l %d1,%d0
 444 01d8 D080      		add.l %d0,%d0
 445 01da D081      		add.l %d1,%d0
 446 01dc D080      		add.l %d0,%d0
 447 01de D080      		add.l %d0,%d0
 448 01e0 41F1 0800 		lea (%a1,%d0.l),%a0
 449 01e4 2028 0010 		move.l 16(%a0),%d0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 450               		.loc 1 136 10 view .LVU170
 451 01e8 6726      		jeq .L33
 452               	.LVL41:
 453               	.L32:
 143:mtk_c.c       ****       }
 454               		.loc 1 143 9 is_stmt 1 view .LVU171
 134:mtk_c.c       ****     {
 455               		.loc 1 134 11 view .LVU172
 134:mtk_c.c       ****     {
 456               		.loc 1 134 5 view .LVU173
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 457               		.loc 1 136 7 view .LVU174
 458 01ea 2200      		move.l %d0,%d1
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,


 459               		.loc 1 136 22 is_stmt 0 view .LVU175
 460 01ec D080      		add.l %d0,%d0
 461               	.LVL42:
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 462               		.loc 1 136 22 view .LVU176
 463 01ee D080      		add.l %d0,%d0
 464 01f0 D081      		add.l %d1,%d0
 465 01f2 D080      		add.l %d0,%d0
 466 01f4 D080      		add.l %d0,%d0
 467 01f6 2031 0810 		move.l 16(%a1,%d0.l),%d0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 468               		.loc 1 136 10 view .LVU177
 469 01fa 66EE      		jne .L32
 143:mtk_c.c       ****       }
 470               		.loc 1 143 18 view .LVU178
 471 01fc 2001      		move.l %d1,%d0
 472 01fe D081      		add.l %d1,%d0
 473 0200 D080      		add.l %d0,%d0
 474 0202 D081      		add.l %d1,%d0
 475 0204 D080      		add.l %d0,%d0
 476 0206 D080      		add.l %d0,%d0
 477 0208 2040      		move.l %d0,%a0
 478 020a D1FC 0000 		add.l #task_tab,%a0
 478      0000 
 479               	.LVL43:
 480               	.L33:
 138:mtk_c.c       ****         break;
 481               		.loc 1 138 9 is_stmt 1 view .LVU179
 138:mtk_c.c       ****         break;
 482               		.loc 1 138 26 is_stmt 0 view .LVU180
 483 0210 216F 0008 		move.l 8(%sp),16(%a0)
 483      0010 
 139:mtk_c.c       ****       }
 484               		.loc 1 139 9 is_stmt 1 view .LVU181
 485               	.LBE37:
 147:mtk_c.c       **** 
 486               		.loc 1 147 1 is_stmt 0 view .LVU182
 487 0216 4E75      		rts
 488               		.cfi_endproc
 489               	.LFE7:
 490               		.size	addq, .-addq
 491               		.align	2
 492               		.globl	removeq
 493               		.type	removeq, @function
 494               	removeq:
 495               	.LVL44:
 496               	.LFB8:
 157:mtk_c.c       ****   TASK_ID_TYPE r_id = *que_ptr; // 返却値（先頭のタスクのidを取得）
 497               		.loc 1 157 1 is_stmt 1 view -0
 498               		.cfi_startproc
 157:mtk_c.c       ****   TASK_ID_TYPE r_id = *que_ptr; // 返却値（先頭のタスクのidを取得）
 499               		.loc 1 157 1 is_stmt 0 view .LVU184
 500 0218 226F 0004 		move.l 4(%sp),%a1
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 501               		.loc 1 158 3 is_stmt 1 view .LVU185
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 502               		.loc 1 158 16 is_stmt 0 view .LVU186


 503 021c 2011      		move.l (%a1),%d0
 504               	.LVL45:
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 505               		.loc 1 159 3 is_stmt 1 view .LVU187
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 506               		.loc 1 159 6 is_stmt 0 view .LVU188
 507 021e 6716      		jeq .L38
 508               	.LBB38:
 161:mtk_c.c       ****     *que_ptr = (*task_ptr).next;          // 先頭から2番目のタスクを先頭にする
 509               		.loc 1 161 5 is_stmt 1 view .LVU189
 510               	.LVL46:
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 511               		.loc 1 162 5 view .LVU190
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 512               		.loc 1 162 27 is_stmt 0 view .LVU191
 513 0220 2040      		move.l %d0,%a0
 514 0222 D1C0      		add.l %d0,%a0
 515 0224 D1C8      		add.l %a0,%a0
 516 0226 D1C0      		add.l %d0,%a0
 517 0228 D1C8      		add.l %a0,%a0
 518 022a D1C8      		add.l %a0,%a0
 519 022c D1FC 0000 		add.l #task_tab+16,%a0
 519      0000 
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 520               		.loc 1 162 14 view .LVU192
 521 0232 2290      		move.l (%a0),(%a1)
 163:mtk_c.c       ****   }
 522               		.loc 1 163 5 is_stmt 1 view .LVU193
 163:mtk_c.c       ****   }
 523               		.loc 1 163 22 is_stmt 0 view .LVU194
 524 0234 4290      		clr.l (%a0)
 525               	.LBE38:
 526               		.loc 1 165 3 is_stmt 1 view .LVU195
 527               	.LVL47:
 528               	.L38:
 166:mtk_c.c       **** }
 529               		.loc 1 166 1 is_stmt 0 view .LVU196
 530 0236 4E75      		rts
 531               		.cfi_endproc
 532               	.LFE8:
 533               		.size	removeq, .-removeq
 534               		.align	2
 535               		.globl	sched
 536               		.type	sched, @function
 537               	sched:
 538               	.LFB9:
 167:mtk_c.c       **** 
 168:mtk_c.c       **** /*=============================================================
 169:mtk_c.c       **** タスクのスケジュール関数
 170:mtk_c.c       **** sched:
 171:mtk_c.c       **** 引数 : なし
 172:mtk_c.c       **** 返り値 : なし
 173:mtk_c.c       **** 担当 : 若松
 174:mtk_c.c       **** ===============================================================*/
 175:mtk_c.c       **** 
 176:mtk_c.c       **** void sched()
 177:mtk_c.c       **** {


 539               		.loc 1 177 1 is_stmt 1 view -0
 540               		.cfi_startproc
 178:mtk_c.c       ****   next_task = removeq(&ready); /* readyキューからタスクを取り出しnext_taskに代入 */
 541               		.loc 1 178 3 view .LVU198
 542               	.LVL48:
 543               	.LBB42:
 544               	.LBI42:
 156:mtk_c.c       **** {
 545               		.loc 1 156 14 view .LVU199
 546               	.LBB43:
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 547               		.loc 1 158 3 view .LVU200
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 548               		.loc 1 158 16 is_stmt 0 view .LVU201
 549 0238 2039 0000 		move.l ready,%d0
 549      0000 
 550               	.LVL49:
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 551               		.loc 1 159 3 is_stmt 1 view .LVU202
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 552               		.loc 1 159 6 is_stmt 0 view .LVU203
 553 023e 671A      		jeq .L46
 554               	.LBB44:
 161:mtk_c.c       ****     *que_ptr = (*task_ptr).next;          // 先頭から2番目のタスクを先頭にする
 555               		.loc 1 161 5 is_stmt 1 view .LVU204
 556               	.LVL50:
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 557               		.loc 1 162 5 view .LVU205
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 558               		.loc 1 162 27 is_stmt 0 view .LVU206
 559 0240 2040      		move.l %d0,%a0
 560 0242 D1C0      		add.l %d0,%a0
 561 0244 D1C8      		add.l %a0,%a0
 562 0246 D1C0      		add.l %d0,%a0
 563 0248 D1C8      		add.l %a0,%a0
 564 024a D1C8      		add.l %a0,%a0
 565 024c D1FC 0000 		add.l #task_tab+16,%a0
 565      0000 
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 566               		.loc 1 162 14 view .LVU207
 567 0252 23D0 0000 		move.l (%a0),ready
 567      0000 
 163:mtk_c.c       ****   }
 568               		.loc 1 163 5 is_stmt 1 view .LVU208
 163:mtk_c.c       ****   }
 569               		.loc 1 163 22 is_stmt 0 view .LVU209
 570 0258 4290      		clr.l (%a0)
 571               	.LVL51:
 572               	.L46:
 163:mtk_c.c       ****   }
 573               		.loc 1 163 22 view .LVU210
 574               	.LBE44:
 165:mtk_c.c       **** }
 575               		.loc 1 165 3 is_stmt 1 view .LVU211
 165:mtk_c.c       **** }
 576               		.loc 1 165 3 is_stmt 0 view .LVU212
 577               	.LBE43:


 578               	.LBE42:
 579               		.loc 1 178 13 view .LVU213
 580 025a 23C0 0000 		move.l %d0,next_task
 580      0000 
 179:mtk_c.c       ****   while (next_task == NULLTASKID)
 581               		.loc 1 179 3 is_stmt 1 view .LVU214
 180:mtk_c.c       ****   {
 181:mtk_c.c       ****   } /* NULLTASKIDの場合は無限ループ */
 582               		.loc 1 181 3 view .LVU215
 179:mtk_c.c       ****   while (next_task == NULLTASKID)
 583               		.loc 1 179 20 view .LVU216
 584 0260 6602      		jne .L53
 585               	.L52:
 586 0262 60FE      		jra .L52
 587               	.L53:
 182:mtk_c.c       **** }
 588               		.loc 1 182 1 is_stmt 0 view .LVU217
 589 0264 4E75      		rts
 590               		.cfi_endproc
 591               	.LFE9:
 592               		.size	sched, .-sched
 593               		.align	2
 594               		.globl	sleep
 595               		.type	sleep, @function
 596               	sleep:
 597               	.LVL52:
 598               	.LFB12:
 183:mtk_c.c       **** 
 184:mtk_c.c       **** void p_body(int a)
 185:mtk_c.c       **** {
 186:mtk_c.c       ****   semaphore[a].count--; /*セマフォの値をデクリメント*/
 187:mtk_c.c       ****   if (semaphore[a].count < 0)
 188:mtk_c.c       ****   {           /*その結果セマフォが獲得できないなら*/
 189:mtk_c.c       ****     sleep(a); /*セマフォ待ちのキューに入れ休眠状態へ*/
 190:mtk_c.c       ****   }
 191:mtk_c.c       **** }
 192:mtk_c.c       **** 
 193:mtk_c.c       **** void v_body(int a)
 194:mtk_c.c       **** {
 195:mtk_c.c       ****   semaphore[a].count++; /*セマフォの値をインクリメント*/
 196:mtk_c.c       ****   if (semaphore[a].count <= 0)
 197:mtk_c.c       ****   {            /*その結果セマフォが空いたなら*/
 198:mtk_c.c       ****     wakeup(a); /*そのセマフォを待っている先頭のタスクを実行可能状態へ*/
 199:mtk_c.c       ****   }
 200:mtk_c.c       **** }
 201:mtk_c.c       **** 
 202:mtk_c.c       **** int sleep(int a)
 203:mtk_c.c       **** { /* a := セマフォID*/
 599               		.loc 1 203 1 is_stmt 1 view -0
 600               		.cfi_startproc
 601               		.loc 1 203 1 is_stmt 0 view .LVU219
 602 0266 2F0A      		move.l %a2,-(%sp)
 603               		.cfi_def_cfa_offset 8
 604               		.cfi_offset 10, -8
 605 0268 222F 0008 		move.l 8(%sp),%d1
 204:mtk_c.c       ****   addq(&(semaphore[a].task_list), curr_task);
 606               		.loc 1 204 3 is_stmt 1 view .LVU220


 607 026c 2279 0000 		move.l curr_task,%a1
 607      0000 
 608               	.LVL53:
 609               	.LBB53:
 610               	.LBI53:
 125:mtk_c.c       **** {
 611               		.loc 1 125 6 view .LVU221
 612               	.LBB54:
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 613               		.loc 1 127 3 view .LVU222
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 614               		.loc 1 127 7 is_stmt 0 view .LVU223
 615 0272 2001      		move.l %d1,%d0
 616 0274 D081      		add.l %d1,%d0
 617 0276 D081      		add.l %d1,%d0
 618 0278 D080      		add.l %d0,%d0
 619 027a D080      		add.l %d0,%d0
 620 027c 2040      		move.l %d0,%a0
 621 027e D1FC 0000 		add.l #semaphore+8,%a0
 621      0000 
 622 0284 2210      		move.l (%a0),%d1
 623               	.LVL54:
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 624               		.loc 1 127 6 view .LVU224
 625 0286 6638      		jne .L57
 129:mtk_c.c       ****   }
 626               		.loc 1 129 5 is_stmt 1 view .LVU225
 129:mtk_c.c       ****   }
 627               		.loc 1 129 14 is_stmt 0 view .LVU226
 628 0288 2089      		move.l %a1,(%a0)
 629               	.L58:
 630               	.LVL55:
 129:mtk_c.c       ****   }
 631               		.loc 1 129 14 view .LVU227
 632               	.LBE54:
 633               	.LBE53:
 205:mtk_c.c       ****   sched();
 634               		.loc 1 205 3 is_stmt 1 view .LVU228
 635               	.LBB57:
 636               	.LBI57:
 176:mtk_c.c       **** {
 637               		.loc 1 176 6 view .LVU229
 638               	.LBB58:
 178:mtk_c.c       ****   while (next_task == NULLTASKID)
 639               		.loc 1 178 3 view .LVU230
 640               	.LBB59:
 641               	.LBI59:
 156:mtk_c.c       **** {
 642               		.loc 1 156 14 view .LVU231
 643               	.LBB60:
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 644               		.loc 1 158 3 view .LVU232
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 645               		.loc 1 158 16 is_stmt 0 view .LVU233
 646 028a 2039 0000 		move.l ready,%d0
 646      0000 
 647               	.LVL56:


 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 648               		.loc 1 159 3 is_stmt 1 view .LVU234
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 649               		.loc 1 159 6 is_stmt 0 view .LVU235
 650 0290 671A      		jeq .L61
 651               	.LBB61:
 161:mtk_c.c       ****     *que_ptr = (*task_ptr).next;          // 先頭から2番目のタスクを先頭にする
 652               		.loc 1 161 5 is_stmt 1 view .LVU236
 653               	.LVL57:
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 654               		.loc 1 162 5 view .LVU237
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 655               		.loc 1 162 27 is_stmt 0 view .LVU238
 656 0292 2040      		move.l %d0,%a0
 657 0294 D1C0      		add.l %d0,%a0
 658 0296 D1C8      		add.l %a0,%a0
 659 0298 D1C0      		add.l %d0,%a0
 660 029a D1C8      		add.l %a0,%a0
 661 029c D1C8      		add.l %a0,%a0
 662 029e D1FC 0000 		add.l #task_tab+16,%a0
 662      0000 
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 663               		.loc 1 162 14 view .LVU239
 664 02a4 23D0 0000 		move.l (%a0),ready
 664      0000 
 163:mtk_c.c       ****   }
 665               		.loc 1 163 5 is_stmt 1 view .LVU240
 163:mtk_c.c       ****   }
 666               		.loc 1 163 22 is_stmt 0 view .LVU241
 667 02aa 4290      		clr.l (%a0)
 668               	.LVL58:
 669               	.L61:
 163:mtk_c.c       ****   }
 670               		.loc 1 163 22 view .LVU242
 671               	.LBE61:
 165:mtk_c.c       **** }
 672               		.loc 1 165 3 is_stmt 1 view .LVU243
 165:mtk_c.c       **** }
 673               		.loc 1 165 3 is_stmt 0 view .LVU244
 674               	.LBE60:
 675               	.LBE59:
 178:mtk_c.c       ****   while (next_task == NULLTASKID)
 676               		.loc 1 178 13 view .LVU245
 677 02ac 23C0 0000 		move.l %d0,next_task
 677      0000 
 179:mtk_c.c       ****   {
 678               		.loc 1 179 3 is_stmt 1 view .LVU246
 181:mtk_c.c       **** }
 679               		.loc 1 181 3 view .LVU247
 179:mtk_c.c       ****   {
 680               		.loc 1 179 20 view .LVU248
 681 02b2 6602      		jne .L70
 682               	.L69:
 683 02b4 60FE      		jra .L69
 684               	.L70:
 685               	.LBE58:
 686               	.LBE57:


 206:mtk_c.c       ****   swtch();
 687               		.loc 1 206 3 view .LVU249
 688 02b6 4EB9 0000 		jsr swtch
 688      0000 
 689               	.LVL59:
 207:mtk_c.c       **** }
 690               		.loc 1 207 1 is_stmt 0 view .LVU250
 691 02bc 245F      		move.l (%sp)+,%a2
 692 02be 4E75      		rts
 693               	.LVL60:
 694               	.L57:
 695               	.LBB62:
 696               	.LBB56:
 697               	.LBB55:
 133:mtk_c.c       ****     while (1)
 698               		.loc 1 133 5 is_stmt 1 view .LVU251
 134:mtk_c.c       ****     {
 699               		.loc 1 134 5 view .LVU252
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 700               		.loc 1 136 7 view .LVU253
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 701               		.loc 1 136 22 is_stmt 0 view .LVU254
 702 02c0 45F9 0000 		lea task_tab,%a2
 702      0000 
 703 02c6 2001      		move.l %d1,%d0
 704 02c8 D081      		add.l %d1,%d0
 705 02ca D080      		add.l %d0,%d0
 706 02cc D081      		add.l %d1,%d0
 707 02ce D080      		add.l %d0,%d0
 708 02d0 D080      		add.l %d0,%d0
 709 02d2 41F2 0800 		lea (%a2,%d0.l),%a0
 710 02d6 2028 0010 		move.l 16(%a0),%d0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 711               		.loc 1 136 10 view .LVU255
 712 02da 6726      		jeq .L60
 713               	.LVL61:
 714               	.L59:
 143:mtk_c.c       ****       }
 715               		.loc 1 143 9 is_stmt 1 view .LVU256
 134:mtk_c.c       ****     {
 716               		.loc 1 134 11 view .LVU257
 134:mtk_c.c       ****     {
 717               		.loc 1 134 5 view .LVU258
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 718               		.loc 1 136 7 view .LVU259
 719 02dc 2200      		move.l %d0,%d1
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 720               		.loc 1 136 22 is_stmt 0 view .LVU260
 721 02de D080      		add.l %d0,%d0
 722               	.LVL62:
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 723               		.loc 1 136 22 view .LVU261
 724 02e0 D080      		add.l %d0,%d0
 725 02e2 D081      		add.l %d1,%d0
 726 02e4 D080      		add.l %d0,%d0
 727 02e6 D080      		add.l %d0,%d0
 728 02e8 2032 0810 		move.l 16(%a2,%d0.l),%d0


 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 729               		.loc 1 136 10 view .LVU262
 730 02ec 66EE      		jne .L59
 143:mtk_c.c       ****       }
 731               		.loc 1 143 18 view .LVU263
 732 02ee 2001      		move.l %d1,%d0
 733 02f0 D081      		add.l %d1,%d0
 734 02f2 D080      		add.l %d0,%d0
 735 02f4 D081      		add.l %d1,%d0
 736 02f6 D080      		add.l %d0,%d0
 737 02f8 D080      		add.l %d0,%d0
 738 02fa 2040      		move.l %d0,%a0
 739 02fc D1FC 0000 		add.l #task_tab,%a0
 739      0000 
 740               	.LVL63:
 741               	.L60:
 138:mtk_c.c       ****         break;
 742               		.loc 1 138 9 is_stmt 1 view .LVU264
 138:mtk_c.c       ****         break;
 743               		.loc 1 138 26 is_stmt 0 view .LVU265
 744 0302 2149 0010 		move.l %a1,16(%a0)
 139:mtk_c.c       ****       }
 745               		.loc 1 139 9 is_stmt 1 view .LVU266
 746 0306 6082      		jra .L58
 747               	.LBE55:
 748               	.LBE56:
 749               	.LBE62:
 750               		.cfi_endproc
 751               	.LFE12:
 752               		.size	sleep, .-sleep
 753               		.align	2
 754               		.globl	p_body
 755               		.type	p_body, @function
 756               	p_body:
 757               	.LVL64:
 758               	.LFB10:
 185:mtk_c.c       ****   semaphore[a].count--; /*セマフォの値をデクリメント*/
 759               		.loc 1 185 1 view -0
 760               		.cfi_startproc
 185:mtk_c.c       ****   semaphore[a].count--; /*セマフォの値をデクリメント*/
 761               		.loc 1 185 1 is_stmt 0 view .LVU268
 762 0308 222F 0004 		move.l 4(%sp),%d1
 186:mtk_c.c       ****   if (semaphore[a].count < 0)
 763               		.loc 1 186 3 is_stmt 1 view .LVU269
 186:mtk_c.c       ****   if (semaphore[a].count < 0)
 764               		.loc 1 186 15 is_stmt 0 view .LVU270
 765 030c 43F9 0000 		lea semaphore,%a1
 765      0000 
 766 0312 2001      		move.l %d1,%d0
 767 0314 D081      		add.l %d1,%d0
 768 0316 D081      		add.l %d1,%d0
 769 0318 D080      		add.l %d0,%d0
 770 031a D080      		add.l %d0,%d0
 186:mtk_c.c       ****   if (semaphore[a].count < 0)
 771               		.loc 1 186 21 view .LVU271
 772 031c 2071 0800 		move.l (%a1,%d0.l),%a0
 773 0320 5388      		subq.l #1,%a0


 774 0322 2388 0800 		move.l %a0,(%a1,%d0.l)
 187:mtk_c.c       ****   {           /*その結果セマフォが獲得できないなら*/
 775               		.loc 1 187 3 is_stmt 1 view .LVU272
 187:mtk_c.c       ****   {           /*その結果セマフォが獲得できないなら*/
 776               		.loc 1 187 6 is_stmt 0 view .LVU273
 777 0326 6B02      		jmi .L77
 191:mtk_c.c       **** 
 778               		.loc 1 191 1 view .LVU274
 779 0328 4E75      		rts
 780               	.L77:
 189:mtk_c.c       ****   }
 781               		.loc 1 189 5 is_stmt 1 view .LVU275
 782 032a 2F41 0004 		move.l %d1,4(%sp)
 191:mtk_c.c       **** 
 783               		.loc 1 191 1 is_stmt 0 view .LVU276
 189:mtk_c.c       ****   }
 784               		.loc 1 189 5 view .LVU277
 785 032e 6000 FF36 		jra sleep
 786               	.LVL65:
 787               		.cfi_endproc
 788               	.LFE10:
 789               		.size	p_body, .-p_body
 790               		.align	2
 791               		.globl	wakeup
 792               		.type	wakeup, @function
 793               	wakeup:
 794               	.LVL66:
 795               	.LFB13:
 208:mtk_c.c       **** 
 209:mtk_c.c       **** int wakeup(int a)
 210:mtk_c.c       **** {
 796               		.loc 1 210 1 is_stmt 1 view -0
 797               		.cfi_startproc
 798               		.loc 1 210 1 is_stmt 0 view .LVU279
 799 0332 2F0A      		move.l %a2,-(%sp)
 800               		.cfi_def_cfa_offset 8
 801               		.cfi_offset 10, -8
 802 0334 222F 0008 		move.l 8(%sp),%d1
 211:mtk_c.c       ****   TASK_ID_TYPE task_id = removeq(&(semaphore[a].task_list));
 803               		.loc 1 211 3 is_stmt 1 view .LVU280
 804               	.LVL67:
 805               	.LBB63:
 806               	.LBI63:
 156:mtk_c.c       **** {
 807               		.loc 1 156 14 view .LVU281
 808               	.LBB64:
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 809               		.loc 1 158 3 view .LVU282
 158:mtk_c.c       ****   if (r_id != NULLTASKID)
 810               		.loc 1 158 16 is_stmt 0 view .LVU283
 811 0338 2001      		move.l %d1,%d0
 812 033a D081      		add.l %d1,%d0
 813 033c D081      		add.l %d1,%d0
 814 033e D080      		add.l %d0,%d0
 815 0340 D080      		add.l %d0,%d0
 816 0342 2040      		move.l %d0,%a0
 817 0344 D1FC 0000 		add.l #semaphore+8,%a0


 817      0000 
 818 034a 2250      		move.l (%a0),%a1
 819               	.LVL68:
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 820               		.loc 1 159 3 is_stmt 1 view .LVU284
 159:mtk_c.c       ****   {                                       // キューの先頭が空でなければ
 821               		.loc 1 159 6 is_stmt 0 view .LVU285
 822 034c B2FC 0000 		cmp.w #0,%a1
 823 0350 6716      		jeq .L79
 824               	.LBB65:
 161:mtk_c.c       ****     *que_ptr = (*task_ptr).next;          // 先頭から2番目のタスクを先頭にする
 825               		.loc 1 161 5 is_stmt 1 view .LVU286
 826               	.LVL69:
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 827               		.loc 1 162 5 view .LVU287
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 828               		.loc 1 162 27 is_stmt 0 view .LVU288
 829 0352 45F1 9800 		lea (%a1,%a1.l),%a2
 830 0356 D5CA      		add.l %a2,%a2
 831 0358 D5C9      		add.l %a1,%a2
 832 035a D5CA      		add.l %a2,%a2
 833 035c D5CA      		add.l %a2,%a2
 834 035e D5FC 0000 		add.l #task_tab+16,%a2
 834      0000 
 162:mtk_c.c       ****     (*task_ptr).next = NULLTASKID;        // 先頭のタスクのnextはNULLTASKIDにして、タ
 835               		.loc 1 162 14 view .LVU289
 836 0364 2092      		move.l (%a2),(%a0)
 163:mtk_c.c       ****   }
 837               		.loc 1 163 5 is_stmt 1 view .LVU290
 163:mtk_c.c       ****   }
 838               		.loc 1 163 22 is_stmt 0 view .LVU291
 839 0366 4292      		clr.l (%a2)
 840               	.LVL70:
 841               	.L79:
 163:mtk_c.c       ****   }
 842               		.loc 1 163 22 view .LVU292
 843               	.LBE65:
 165:mtk_c.c       **** }
 844               		.loc 1 165 3 is_stmt 1 view .LVU293
 165:mtk_c.c       **** }
 845               		.loc 1 165 3 is_stmt 0 view .LVU294
 846               	.LBE64:
 847               	.LBE63:
 212:mtk_c.c       ****   addq(&ready, task_id);
 848               		.loc 1 212 3 is_stmt 1 view .LVU295
 849               	.LBB66:
 850               	.LBI66:
 125:mtk_c.c       **** {
 851               		.loc 1 125 6 view .LVU296
 852               	.LBB67:
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 853               		.loc 1 127 3 view .LVU297
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,
 854               		.loc 1 127 7 is_stmt 0 view .LVU298
 855 0368 2239 0000 		move.l ready,%d1
 855      0000 
 127:mtk_c.c       ****   {                // キューの先頭のタスクが空なら,


 856               		.loc 1 127 6 view .LVU299
 857 036e 660A      		jne .L80
 129:mtk_c.c       ****   }
 858               		.loc 1 129 5 is_stmt 1 view .LVU300
 129:mtk_c.c       ****   }
 859               		.loc 1 129 14 is_stmt 0 view .LVU301
 860 0370 23C9 0000 		move.l %a1,ready
 860      0000 
 861               	.LVL71:
 129:mtk_c.c       ****   }
 862               		.loc 1 129 14 view .LVU302
 863               	.LBE67:
 864               	.LBE66:
 213:mtk_c.c       **** }
 865               		.loc 1 213 1 view .LVU303
 866 0376 245F      		move.l (%sp)+,%a2
 867 0378 4E75      		rts
 868               	.LVL72:
 869               	.L80:
 870               	.LBB70:
 871               	.LBB69:
 872               	.LBB68:
 133:mtk_c.c       ****     while (1)
 873               		.loc 1 133 5 is_stmt 1 view .LVU304
 134:mtk_c.c       ****     {
 874               		.loc 1 134 5 view .LVU305
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 875               		.loc 1 136 7 view .LVU306
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 876               		.loc 1 136 22 is_stmt 0 view .LVU307
 877 037a 45F9 0000 		lea task_tab,%a2
 877      0000 
 878 0380 2001      		move.l %d1,%d0
 879 0382 D081      		add.l %d1,%d0
 880 0384 D080      		add.l %d0,%d0
 881 0386 D081      		add.l %d1,%d0
 882 0388 D080      		add.l %d0,%d0
 883 038a D080      		add.l %d0,%d0
 884 038c 41F2 0800 		lea (%a2,%d0.l),%a0
 885 0390 2028 0010 		move.l 16(%a0),%d0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 886               		.loc 1 136 10 view .LVU308
 887 0394 6726      		jeq .L83
 888               	.LVL73:
 889               	.L82:
 143:mtk_c.c       ****       }
 890               		.loc 1 143 9 is_stmt 1 view .LVU309
 134:mtk_c.c       ****     {
 891               		.loc 1 134 11 view .LVU310
 134:mtk_c.c       ****     {
 892               		.loc 1 134 5 view .LVU311
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 893               		.loc 1 136 7 view .LVU312
 894 0396 2200      		move.l %d0,%d1
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 895               		.loc 1 136 22 is_stmt 0 view .LVU313
 896 0398 D080      		add.l %d0,%d0


 897               	.LVL74:
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 898               		.loc 1 136 22 view .LVU314
 899 039a D080      		add.l %d0,%d0
 900 039c D081      		add.l %d1,%d0
 901 039e D080      		add.l %d0,%d0
 902 03a0 D080      		add.l %d0,%d0
 903 03a2 2032 0810 		move.l 16(%a2,%d0.l),%d0
 136:mtk_c.c       ****       {                        // その次のタスクが空だったら,
 904               		.loc 1 136 10 view .LVU315
 905 03a6 66EE      		jne .L82
 143:mtk_c.c       ****       }
 906               		.loc 1 143 18 view .LVU316
 907 03a8 2001      		move.l %d1,%d0
 908 03aa D081      		add.l %d1,%d0
 909 03ac D080      		add.l %d0,%d0
 910 03ae D081      		add.l %d1,%d0
 911 03b0 D080      		add.l %d0,%d0
 912 03b2 D080      		add.l %d0,%d0
 913 03b4 2040      		move.l %d0,%a0
 914 03b6 D1FC 0000 		add.l #task_tab,%a0
 914      0000 
 915               	.LVL75:
 916               	.L83:
 138:mtk_c.c       ****         break;
 917               		.loc 1 138 9 is_stmt 1 view .LVU317
 138:mtk_c.c       ****         break;
 918               		.loc 1 138 26 is_stmt 0 view .LVU318
 919 03bc 2149 0010 		move.l %a1,16(%a0)
 139:mtk_c.c       ****       }
 920               		.loc 1 139 9 is_stmt 1 view .LVU319
 921               	.LVL76:
 139:mtk_c.c       ****       }
 922               		.loc 1 139 9 is_stmt 0 view .LVU320
 923               	.LBE68:
 924               	.LBE69:
 925               	.LBE70:
 926               		.loc 1 213 1 view .LVU321
 927 03c0 245F      		move.l (%sp)+,%a2
 928 03c2 4E75      		rts
 929               		.cfi_endproc
 930               	.LFE13:
 931               		.size	wakeup, .-wakeup
 932               		.align	2
 933               		.globl	v_body
 934               		.type	v_body, @function
 935               	v_body:
 936               	.LVL77:
 937               	.LFB11:
 194:mtk_c.c       ****   semaphore[a].count++; /*セマフォの値をインクリメント*/
 938               		.loc 1 194 1 is_stmt 1 view -0
 939               		.cfi_startproc
 194:mtk_c.c       ****   semaphore[a].count++; /*セマフォの値をインクリメント*/
 940               		.loc 1 194 1 is_stmt 0 view .LVU323
 941 03c4 222F 0004 		move.l 4(%sp),%d1
 195:mtk_c.c       ****   if (semaphore[a].count <= 0)
 942               		.loc 1 195 3 is_stmt 1 view .LVU324


 195:mtk_c.c       ****   if (semaphore[a].count <= 0)
 943               		.loc 1 195 15 is_stmt 0 view .LVU325
 944 03c8 43F9 0000 		lea semaphore,%a1
 944      0000 
 945 03ce 2001      		move.l %d1,%d0
 946 03d0 D081      		add.l %d1,%d0
 947 03d2 D081      		add.l %d1,%d0
 948 03d4 D080      		add.l %d0,%d0
 949 03d6 D080      		add.l %d0,%d0
 195:mtk_c.c       ****   if (semaphore[a].count <= 0)
 950               		.loc 1 195 21 view .LVU326
 951 03d8 2071 0800 		move.l (%a1,%d0.l),%a0
 952 03dc 5288      		addq.l #1,%a0
 953 03de 2388 0800 		move.l %a0,(%a1,%d0.l)
 196:mtk_c.c       ****   {            /*その結果セマフォが空いたなら*/
 954               		.loc 1 196 3 is_stmt 1 view .LVU327
 196:mtk_c.c       ****   {            /*その結果セマフォが空いたなら*/
 955               		.loc 1 196 6 is_stmt 0 view .LVU328
 956 03e2 6F02      		jle .L95
 200:mtk_c.c       **** 
 957               		.loc 1 200 1 view .LVU329
 958 03e4 4E75      		rts
 959               	.L95:
 198:mtk_c.c       ****   }
 960               		.loc 1 198 5 is_stmt 1 view .LVU330
 961 03e6 2F41 0004 		move.l %d1,4(%sp)
 200:mtk_c.c       **** 
 962               		.loc 1 200 1 is_stmt 0 view .LVU331
 198:mtk_c.c       ****   }
 963               		.loc 1 198 5 view .LVU332
 964 03ea 6000 FF46 		jra wakeup
 965               	.LVL78:
 966               		.cfi_endproc
 967               	.LFE11:
 968               		.size	v_body, .-v_body
 969               		.globl	com1out
 970               		.section	.bss
 971               		.align	2
 972               		.type	com1out, @object
 973               		.size	com1out, 4
 974               	com1out:
 975 0000 0000 0000 		.zero	4
 976               		.globl	com1in
 977               		.align	2
 978               		.type	com1in, @object
 979               		.size	com1in, 4
 980               	com1in:
 981 0004 0000 0000 		.zero	4
 982               		.globl	com0out
 983               		.align	2
 984               		.type	com0out, @object
 985               		.size	com0out, 4
 986               	com0out:
 987 0008 0000 0000 		.zero	4
 988               		.globl	com0in
 989               		.align	2
 990               		.type	com0in, @object


 991               		.size	com0in, 4
 992               	com0in:
 993 000c 0000 0000 		.zero	4
 994               		.globl	stacks
 995               		.type	stacks, @object
 996               		.size	stacks, 10240
 997               	stacks:
 998 0010 0000 0000 		.zero	10240
 998      0000 0000 
 998      0000 0000 
 998      0000 0000 
 998      0000 0000 
 999               		.globl	task_tab
 1000               		.align	2
 1001               		.type	task_tab, @object
 1002               		.size	task_tab, 120
 1003               	task_tab:
 1004 2810 0000 0000 		.zero	120
 1004      0000 0000 
 1004      0000 0000 
 1004      0000 0000 
 1004      0000 0000 
 1005               		.globl	semaphore
 1006               		.align	2
 1007               		.type	semaphore, @object
 1008               		.size	semaphore, 60
 1009               	semaphore:
 1010 2888 0000 0000 		.zero	60
 1010      0000 0000 
 1010      0000 0000 
 1010      0000 0000 
 1010      0000 0000 
 1011               		.globl	ready
 1012               		.align	2
 1013               		.type	ready, @object
 1014               		.size	ready, 4
 1015               	ready:
 1016 28c4 0000 0000 		.zero	4
 1017               		.globl	next_task
 1018               		.align	2
 1019               		.type	next_task, @object
 1020               		.size	next_task, 4
 1021               	next_task:
 1022 28c8 0000 0000 		.zero	4
 1023               		.globl	new_task
 1024               		.align	2
 1025               		.type	new_task, @object
 1026               		.size	new_task, 4
 1027               	new_task:
 1028 28cc 0000 0000 		.zero	4
 1029               		.globl	curr_task
 1030               		.align	2
 1031               		.type	curr_task, @object
 1032               		.size	curr_task, 4
 1033               	curr_task:
 1034 28d0 0000 0000 		.zero	4
 1035               		.text


 1036               	.Letext0:
 1037               		.file 2 "/usr/local/lib/gcc/m68k-elf/11.4.0/include/stddef.h"
 1038               		.file 3 "/usr/local/m68k-elf/include/sys/_types.h"
 1039               		.file 4 "/usr/local/m68k-elf/include/sys/reent.h"
 1040               		.file 5 "/usr/local/m68k-elf/include/sys/lock.h"
 1041               		.file 6 "/usr/local/m68k-elf/include/stdio.h"
 1042               		.file 7 "mtk_c.h"
 1043               		.section	.debug_info,"",@progbits
 1044               	.Ldebug_info0:
 1045 0000 0000 0EA7 		.long	0xea7
 1046 0004 0005      		.word	0x5
 1047 0006 01        		.byte	0x1
 1048 0007 04        		.byte	0x4
 1049 0008 0000 0000 		.long	.Ldebug_abbrev0
 1050 000c 28        		.uleb128 0x28
 1051 000d 0000 0000 		.long	.LASF142
 1052 0011 1D        		.byte	0x1d
 1053 0012 0000 0000 		.long	.LASF143
 1054 0016 0000 0000 		.long	.LASF144
 1055 001a 0000 0000 		.long	.Ltext0
 1056 001e 0000 03EE 		.long	.Letext0-.Ltext0
 1057 0022 0000 0000 		.long	.Ldebug_line0
 1058 0026 09        		.uleb128 0x9
 1059 0027 01        		.byte	0x1
 1060 0028 06        		.byte	0x6
 1061 0029 0000 0000 		.long	.LASF0
 1062 002d 09        		.uleb128 0x9
 1063 002e 01        		.byte	0x1
 1064 002f 08        		.byte	0x8
 1065 0030 0000 0000 		.long	.LASF1
 1066 0034 09        		.uleb128 0x9
 1067 0035 02        		.byte	0x2
 1068 0036 05        		.byte	0x5
 1069 0037 0000 0000 		.long	.LASF2
 1070 003b 09        		.uleb128 0x9
 1071 003c 02        		.byte	0x2
 1072 003d 07        		.byte	0x7
 1073 003e 0000 0000 		.long	.LASF3
 1074 0042 09        		.uleb128 0x9
 1075 0043 04        		.byte	0x4
 1076 0044 05        		.byte	0x5
 1077 0045 0000 0000 		.long	.LASF4
 1078 0049 09        		.uleb128 0x9
 1079 004a 04        		.byte	0x4
 1080 004b 07        		.byte	0x7
 1081 004c 0000 0000 		.long	.LASF5
 1082 0050 09        		.uleb128 0x9
 1083 0051 08        		.byte	0x8
 1084 0052 05        		.byte	0x5
 1085 0053 0000 0000 		.long	.LASF6
 1086 0057 09        		.uleb128 0x9
 1087 0058 08        		.byte	0x8
 1088 0059 07        		.byte	0x7
 1089 005a 0000 0000 		.long	.LASF7
 1090 005e 09        		.uleb128 0x9
 1091 005f 0C        		.byte	0xc
 1092 0060 04        		.byte	0x4


 1093 0061 0000 0000 		.long	.LASF8
 1094 0065 1C        		.uleb128 0x1c
 1095 0066 0000 0000 		.long	.LASF10
 1096 006a 02        		.byte	0x2
 1097 006b 015E      		.word	0x15e
 1098 006d 17        		.byte	0x17
 1099 006e 0000 0072 		.long	0x72
 1100 0072 09        		.uleb128 0x9
 1101 0073 04        		.byte	0x4
 1102 0074 07        		.byte	0x7
 1103 0075 0000 0000 		.long	.LASF9
 1104 0079 07        		.uleb128 0x7
 1105 007a 0000 0000 		.long	.LASF11
 1106 007e 03        		.byte	0x3
 1107 007f 2E        		.byte	0x2e
 1108 0080 0E        		.byte	0xe
 1109 0081 0000 0042 		.long	0x42
 1110 0085 29        		.uleb128 0x29
 1111 0086 04        		.byte	0x4
 1112 0087 05        		.byte	0x5
 1113 0088 696E 7400 		.string	"int"
 1114 008c 07        		.uleb128 0x7
 1115 008d 0000 0000 		.long	.LASF12
 1116 0091 03        		.byte	0x3
 1117 0092 74        		.byte	0x74
 1118 0093 0E        		.byte	0xe
 1119 0094 0000 0042 		.long	0x42
 1120 0098 07        		.uleb128 0x7
 1121 0099 0000 0000 		.long	.LASF13
 1122 009d 03        		.byte	0x3
 1123 009e 93        		.byte	0x93
 1124 009f 17        		.byte	0x17
 1125 00a0 0000 0042 		.long	0x42
 1126 00a4 2A        		.uleb128 0x2a
 1127 00a5 04        		.byte	0x4
 1128 00a6 03        		.byte	0x3
 1129 00a7 A5        		.byte	0xa5
 1130 00a8 03        		.byte	0x3
 1131 00a9 0000 00C4 		.long	0xc4
 1132 00ad 1D        		.uleb128 0x1d
 1133 00ae 0000 0000 		.long	.LASF14
 1134 00b2 A7        		.byte	0xa7
 1135 00b3 0C        		.byte	0xc
 1136 00b4 0000 0065 		.long	0x65
 1137 00b8 1D        		.uleb128 0x1d
 1138 00b9 0000 0000 		.long	.LASF15
 1139 00bd A8        		.byte	0xa8
 1140 00be 13        		.byte	0x13
 1141 00bf 0000 00C4 		.long	0xc4
 1142 00c3 00        		.byte	0
 1143 00c4 06        		.uleb128 0x6
 1144 00c5 0000 002D 		.long	0x2d
 1145 00c9 0000 00D4 		.long	0xd4
 1146 00cd 08        		.uleb128 0x8
 1147 00ce 0000 0049 		.long	0x49
 1148 00d2 03        		.byte	0x3
 1149 00d3 00        		.byte	0


 1150 00d4 17        		.uleb128 0x17
 1151 00d5 08        		.byte	0x8
 1152 00d6 03        		.byte	0x3
 1153 00d7 A2        		.byte	0xa2
 1154 00d8 0000 00F7 		.long	0xf7
 1155 00dc 01        		.uleb128 0x1
 1156 00dd 0000 0000 		.long	.LASF16
 1157 00e1 03        		.byte	0x3
 1158 00e2 A4        		.byte	0xa4
 1159 00e3 07        		.byte	0x7
 1160 00e4 0000 0085 		.long	0x85
 1161 00e8 00        		.byte	0
 1162 00e9 01        		.uleb128 0x1
 1163 00ea 0000 0000 		.long	.LASF17
 1164 00ee 03        		.byte	0x3
 1165 00ef A9        		.byte	0xa9
 1166 00f0 05        		.byte	0x5
 1167 00f1 0000 00A4 		.long	0xa4
 1168 00f5 04        		.byte	0x4
 1169 00f6 00        		.byte	0
 1170 00f7 07        		.uleb128 0x7
 1171 00f8 0000 0000 		.long	.LASF18
 1172 00fc 03        		.byte	0x3
 1173 00fd AA        		.byte	0xaa
 1174 00fe 03        		.byte	0x3
 1175 00ff 0000 00D4 		.long	0xd4
 1176 0103 2B        		.uleb128 0x2b
 1177 0104 04        		.byte	0x4
 1178 0105 07        		.uleb128 0x7
 1179 0106 0000 0000 		.long	.LASF19
 1180 010a 04        		.byte	0x4
 1181 010b 16        		.byte	0x16
 1182 010c 19        		.byte	0x19
 1183 010d 0000 0049 		.long	0x49
 1184 0111 07        		.uleb128 0x7
 1185 0112 0000 0000 		.long	.LASF20
 1186 0116 05        		.byte	0x5
 1187 0117 0C        		.byte	0xc
 1188 0118 0D        		.byte	0xd
 1189 0119 0000 0085 		.long	0x85
 1190 011d 07        		.uleb128 0x7
 1191 011e 0000 0000 		.long	.LASF21
 1192 0122 04        		.byte	0x4
 1193 0123 23        		.byte	0x23
 1194 0124 1B        		.byte	0x1b
 1195 0125 0000 0111 		.long	0x111
 1196 0129 12        		.uleb128 0x12
 1197 012a 0000 0000 		.long	.LASF26
 1198 012e 18        		.byte	0x18
 1199 012f 34        		.byte	0x34
 1200 0130 0000 0181 		.long	0x181
 1201 0134 01        		.uleb128 0x1
 1202 0135 0000 0000 		.long	.LASF22
 1203 0139 04        		.byte	0x4
 1204 013a 36        		.byte	0x36
 1205 013b 13        		.byte	0x13
 1206 013c 0000 0181 		.long	0x181


 1207 0140 00        		.byte	0
 1208 0141 0A        		.uleb128 0xa
 1209 0142 5F6B 00   		.string	"_k"
 1210 0145 04        		.byte	0x4
 1211 0146 37        		.byte	0x37
 1212 0147 07        		.byte	0x7
 1213 0148 0000 0085 		.long	0x85
 1214 014c 04        		.byte	0x4
 1215 014d 01        		.uleb128 0x1
 1216 014e 0000 0000 		.long	.LASF23
 1217 0152 04        		.byte	0x4
 1218 0153 37        		.byte	0x37
 1219 0154 0B        		.byte	0xb
 1220 0155 0000 0085 		.long	0x85
 1221 0159 08        		.byte	0x8
 1222 015a 01        		.uleb128 0x1
 1223 015b 0000 0000 		.long	.LASF24
 1224 015f 04        		.byte	0x4
 1225 0160 37        		.byte	0x37
 1226 0161 14        		.byte	0x14
 1227 0162 0000 0085 		.long	0x85
 1228 0166 0C        		.byte	0xc
 1229 0167 01        		.uleb128 0x1
 1230 0168 0000 0000 		.long	.LASF25
 1231 016c 04        		.byte	0x4
 1232 016d 37        		.byte	0x37
 1233 016e 1B        		.byte	0x1b
 1234 016f 0000 0085 		.long	0x85
 1235 0173 10        		.byte	0x10
 1236 0174 0A        		.uleb128 0xa
 1237 0175 5F78 00   		.string	"_x"
 1238 0178 04        		.byte	0x4
 1239 0179 38        		.byte	0x38
 1240 017a 0B        		.byte	0xb
 1241 017b 0000 0186 		.long	0x186
 1242 017f 14        		.byte	0x14
 1243 0180 00        		.byte	0
 1244 0181 03        		.uleb128 0x3
 1245 0182 0000 0129 		.long	0x129
 1246 0186 06        		.uleb128 0x6
 1247 0187 0000 0105 		.long	0x105
 1248 018b 0000 0196 		.long	0x196
 1249 018f 08        		.uleb128 0x8
 1250 0190 0000 0049 		.long	0x49
 1251 0194 00        		.byte	0
 1252 0195 00        		.byte	0
 1253 0196 12        		.uleb128 0x12
 1254 0197 0000 0000 		.long	.LASF27
 1255 019b 24        		.byte	0x24
 1256 019c 3C        		.byte	0x3c
 1257 019d 0000 0217 		.long	0x217
 1258 01a1 01        		.uleb128 0x1
 1259 01a2 0000 0000 		.long	.LASF28
 1260 01a6 04        		.byte	0x4
 1261 01a7 3E        		.byte	0x3e
 1262 01a8 09        		.byte	0x9
 1263 01a9 0000 0085 		.long	0x85


 1264 01ad 00        		.byte	0
 1265 01ae 01        		.uleb128 0x1
 1266 01af 0000 0000 		.long	.LASF29
 1267 01b3 04        		.byte	0x4
 1268 01b4 3F        		.byte	0x3f
 1269 01b5 09        		.byte	0x9
 1270 01b6 0000 0085 		.long	0x85
 1271 01ba 04        		.byte	0x4
 1272 01bb 01        		.uleb128 0x1
 1273 01bc 0000 0000 		.long	.LASF30
 1274 01c0 04        		.byte	0x4
 1275 01c1 40        		.byte	0x40
 1276 01c2 09        		.byte	0x9
 1277 01c3 0000 0085 		.long	0x85
 1278 01c7 08        		.byte	0x8
 1279 01c8 01        		.uleb128 0x1
 1280 01c9 0000 0000 		.long	.LASF31
 1281 01cd 04        		.byte	0x4
 1282 01ce 41        		.byte	0x41
 1283 01cf 09        		.byte	0x9
 1284 01d0 0000 0085 		.long	0x85
 1285 01d4 0C        		.byte	0xc
 1286 01d5 01        		.uleb128 0x1
 1287 01d6 0000 0000 		.long	.LASF32
 1288 01da 04        		.byte	0x4
 1289 01db 42        		.byte	0x42
 1290 01dc 09        		.byte	0x9
 1291 01dd 0000 0085 		.long	0x85
 1292 01e1 10        		.byte	0x10
 1293 01e2 01        		.uleb128 0x1
 1294 01e3 0000 0000 		.long	.LASF33
 1295 01e7 04        		.byte	0x4
 1296 01e8 43        		.byte	0x43
 1297 01e9 09        		.byte	0x9
 1298 01ea 0000 0085 		.long	0x85
 1299 01ee 14        		.byte	0x14
 1300 01ef 01        		.uleb128 0x1
 1301 01f0 0000 0000 		.long	.LASF34
 1302 01f4 04        		.byte	0x4
 1303 01f5 44        		.byte	0x44
 1304 01f6 09        		.byte	0x9
 1305 01f7 0000 0085 		.long	0x85
 1306 01fb 18        		.byte	0x18
 1307 01fc 01        		.uleb128 0x1
 1308 01fd 0000 0000 		.long	.LASF35
 1309 0201 04        		.byte	0x4
 1310 0202 45        		.byte	0x45
 1311 0203 09        		.byte	0x9
 1312 0204 0000 0085 		.long	0x85
 1313 0208 1C        		.byte	0x1c
 1314 0209 01        		.uleb128 0x1
 1315 020a 0000 0000 		.long	.LASF36
 1316 020e 04        		.byte	0x4
 1317 020f 46        		.byte	0x46
 1318 0210 09        		.byte	0x9
 1319 0211 0000 0085 		.long	0x85
 1320 0215 20        		.byte	0x20


 1321 0216 00        		.byte	0
 1322 0217 12        		.uleb128 0x12
 1323 0218 0000 0000 		.long	.LASF37
 1324 021c 08        		.byte	0x8
 1325 021d 73        		.byte	0x73
 1326 021e 0000 023D 		.long	0x23d
 1327 0222 01        		.uleb128 0x1
 1328 0223 0000 0000 		.long	.LASF38
 1329 0227 04        		.byte	0x4
 1330 0228 74        		.byte	0x74
 1331 0229 11        		.byte	0x11
 1332 022a 0000 023D 		.long	0x23d
 1333 022e 00        		.byte	0
 1334 022f 01        		.uleb128 0x1
 1335 0230 0000 0000 		.long	.LASF39
 1336 0234 04        		.byte	0x4
 1337 0235 75        		.byte	0x75
 1338 0236 06        		.byte	0x6
 1339 0237 0000 0085 		.long	0x85
 1340 023b 04        		.byte	0x4
 1341 023c 00        		.byte	0
 1342 023d 03        		.uleb128 0x3
 1343 023e 0000 002D 		.long	0x2d
 1344 0242 12        		.uleb128 0x12
 1345 0243 0000 0000 		.long	.LASF40
 1346 0247 68        		.byte	0x68
 1347 0248 98        		.byte	0x98
 1348 0249 0000 0383 		.long	0x383
 1349 024d 0A        		.uleb128 0xa
 1350 024e 5F70 00   		.string	"_p"
 1351 0251 04        		.byte	0x4
 1352 0252 99        		.byte	0x99
 1353 0253 12        		.byte	0x12
 1354 0254 0000 023D 		.long	0x23d
 1355 0258 00        		.byte	0
 1356 0259 0A        		.uleb128 0xa
 1357 025a 5F72 00   		.string	"_r"
 1358 025d 04        		.byte	0x4
 1359 025e 9A        		.byte	0x9a
 1360 025f 07        		.byte	0x7
 1361 0260 0000 0085 		.long	0x85
 1362 0264 04        		.byte	0x4
 1363 0265 0A        		.uleb128 0xa
 1364 0266 5F77 00   		.string	"_w"
 1365 0269 04        		.byte	0x4
 1366 026a 9B        		.byte	0x9b
 1367 026b 07        		.byte	0x7
 1368 026c 0000 0085 		.long	0x85
 1369 0270 08        		.byte	0x8
 1370 0271 01        		.uleb128 0x1
 1371 0272 0000 0000 		.long	.LASF41
 1372 0276 04        		.byte	0x4
 1373 0277 9C        		.byte	0x9c
 1374 0278 09        		.byte	0x9
 1375 0279 0000 0034 		.long	0x34
 1376 027d 0C        		.byte	0xc
 1377 027e 01        		.uleb128 0x1


 1378 027f 0000 0000 		.long	.LASF42
 1379 0283 04        		.byte	0x4
 1380 0284 9D        		.byte	0x9d
 1381 0285 09        		.byte	0x9
 1382 0286 0000 0034 		.long	0x34
 1383 028a 0E        		.byte	0xe
 1384 028b 0A        		.uleb128 0xa
 1385 028c 5F62 6600 		.string	"_bf"
 1386 0290 04        		.byte	0x4
 1387 0291 9E        		.byte	0x9e
 1388 0292 11        		.byte	0x11
 1389 0293 0000 0217 		.long	0x217
 1390 0297 10        		.byte	0x10
 1391 0298 01        		.uleb128 0x1
 1392 0299 0000 0000 		.long	.LASF43
 1393 029d 04        		.byte	0x4
 1394 029e 9F        		.byte	0x9f
 1395 029f 07        		.byte	0x7
 1396 02a0 0000 0085 		.long	0x85
 1397 02a4 18        		.byte	0x18
 1398 02a5 01        		.uleb128 0x1
 1399 02a6 0000 0000 		.long	.LASF44
 1400 02aa 04        		.byte	0x4
 1401 02ab A6        		.byte	0xa6
 1402 02ac 0A        		.byte	0xa
 1403 02ad 0000 0103 		.long	0x103
 1404 02b1 1C        		.byte	0x1c
 1405 02b2 01        		.uleb128 0x1
 1406 02b3 0000 0000 		.long	.LASF45
 1407 02b7 04        		.byte	0x4
 1408 02b8 A8        		.byte	0xa8
 1409 02b9 1D        		.byte	0x1d
 1410 02ba 0000 0499 		.long	0x499
 1411 02be 20        		.byte	0x20
 1412 02bf 01        		.uleb128 0x1
 1413 02c0 0000 0000 		.long	.LASF46
 1414 02c4 04        		.byte	0x4
 1415 02c5 AA        		.byte	0xaa
 1416 02c6 1D        		.byte	0x1d
 1417 02c7 0000 04C1 		.long	0x4c1
 1418 02cb 24        		.byte	0x24
 1419 02cc 01        		.uleb128 0x1
 1420 02cd 0000 0000 		.long	.LASF47
 1421 02d1 04        		.byte	0x4
 1422 02d2 AD        		.byte	0xad
 1423 02d3 0D        		.byte	0xd
 1424 02d4 0000 04E4 		.long	0x4e4
 1425 02d8 28        		.byte	0x28
 1426 02d9 01        		.uleb128 0x1
 1427 02da 0000 0000 		.long	.LASF48
 1428 02de 04        		.byte	0x4
 1429 02df AE        		.byte	0xae
 1430 02e0 09        		.byte	0x9
 1431 02e1 0000 04FD 		.long	0x4fd
 1432 02e5 2C        		.byte	0x2c
 1433 02e6 0A        		.uleb128 0xa
 1434 02e7 5F75 6200 		.string	"_ub"


 1435 02eb 04        		.byte	0x4
 1436 02ec B1        		.byte	0xb1
 1437 02ed 11        		.byte	0x11
 1438 02ee 0000 0217 		.long	0x217
 1439 02f2 30        		.byte	0x30
 1440 02f3 0A        		.uleb128 0xa
 1441 02f4 5F75 7000 		.string	"_up"
 1442 02f8 04        		.byte	0x4
 1443 02f9 B2        		.byte	0xb2
 1444 02fa 12        		.byte	0x12
 1445 02fb 0000 023D 		.long	0x23d
 1446 02ff 38        		.byte	0x38
 1447 0300 0A        		.uleb128 0xa
 1448 0301 5F75 7200 		.string	"_ur"
 1449 0305 04        		.byte	0x4
 1450 0306 B3        		.byte	0xb3
 1451 0307 07        		.byte	0x7
 1452 0308 0000 0085 		.long	0x85
 1453 030c 3C        		.byte	0x3c
 1454 030d 01        		.uleb128 0x1
 1455 030e 0000 0000 		.long	.LASF49
 1456 0312 04        		.byte	0x4
 1457 0313 B6        		.byte	0xb6
 1458 0314 11        		.byte	0x11
 1459 0315 0000 0502 		.long	0x502
 1460 0319 40        		.byte	0x40
 1461 031a 01        		.uleb128 0x1
 1462 031b 0000 0000 		.long	.LASF50
 1463 031f 04        		.byte	0x4
 1464 0320 B7        		.byte	0xb7
 1465 0321 11        		.byte	0x11
 1466 0322 0000 0512 		.long	0x512
 1467 0326 43        		.byte	0x43
 1468 0327 0A        		.uleb128 0xa
 1469 0328 5F6C 6200 		.string	"_lb"
 1470 032c 04        		.byte	0x4
 1471 032d BA        		.byte	0xba
 1472 032e 11        		.byte	0x11
 1473 032f 0000 0217 		.long	0x217
 1474 0333 44        		.byte	0x44
 1475 0334 01        		.uleb128 0x1
 1476 0335 0000 0000 		.long	.LASF51
 1477 0339 04        		.byte	0x4
 1478 033a BD        		.byte	0xbd
 1479 033b 07        		.byte	0x7
 1480 033c 0000 0085 		.long	0x85
 1481 0340 4C        		.byte	0x4c
 1482 0341 01        		.uleb128 0x1
 1483 0342 0000 0000 		.long	.LASF52
 1484 0346 04        		.byte	0x4
 1485 0347 BE        		.byte	0xbe
 1486 0348 0A        		.byte	0xa
 1487 0349 0000 0079 		.long	0x79
 1488 034d 50        		.byte	0x50
 1489 034e 01        		.uleb128 0x1
 1490 034f 0000 0000 		.long	.LASF53
 1491 0353 04        		.byte	0x4


 1492 0354 C1        		.byte	0xc1
 1493 0355 12        		.byte	0x12
 1494 0356 0000 03A1 		.long	0x3a1
 1495 035a 54        		.byte	0x54
 1496 035b 01        		.uleb128 0x1
 1497 035c 0000 0000 		.long	.LASF54
 1498 0360 04        		.byte	0x4
 1499 0361 C5        		.byte	0xc5
 1500 0362 0C        		.byte	0xc
 1501 0363 0000 011D 		.long	0x11d
 1502 0367 58        		.byte	0x58
 1503 0368 01        		.uleb128 0x1
 1504 0369 0000 0000 		.long	.LASF55
 1505 036d 04        		.byte	0x4
 1506 036e C7        		.byte	0xc7
 1507 036f 0E        		.byte	0xe
 1508 0370 0000 00F7 		.long	0xf7
 1509 0374 5C        		.byte	0x5c
 1510 0375 01        		.uleb128 0x1
 1511 0376 0000 0000 		.long	.LASF56
 1512 037a 04        		.byte	0x4
 1513 037b C8        		.byte	0xc8
 1514 037c 09        		.byte	0x9
 1515 037d 0000 0085 		.long	0x85
 1516 0381 64        		.byte	0x64
 1517 0382 00        		.byte	0
 1518 0383 13        		.uleb128 0x13
 1519 0384 0000 0098 		.long	0x98
 1520 0388 0000 03A1 		.long	0x3a1
 1521 038c 05        		.uleb128 0x5
 1522 038d 0000 03A1 		.long	0x3a1
 1523 0391 05        		.uleb128 0x5
 1524 0392 0000 0103 		.long	0x103
 1525 0396 05        		.uleb128 0x5
 1526 0397 0000 0488 		.long	0x488
 1527 039b 05        		.uleb128 0x5
 1528 039c 0000 0085 		.long	0x85
 1529 03a0 00        		.byte	0
 1530 03a1 03        		.uleb128 0x3
 1531 03a2 0000 03A6 		.long	0x3a6
 1532 03a6 2C        		.uleb128 0x2c
 1533 03a7 0000 0000 		.long	.LASF57
 1534 03ab 0116      		.word	0x116
 1535 03ad 04        		.byte	0x4
 1536 03ae 0237      		.word	0x237
 1537 03b0 08        		.byte	0x8
 1538 03b1 0000 0488 		.long	0x488
 1539 03b5 02        		.uleb128 0x2
 1540 03b6 0000 0000 		.long	.LASF58
 1541 03ba 0239      		.word	0x239
 1542 03bc 07        		.byte	0x7
 1543 03bd 0000 0085 		.long	0x85
 1544 03c1 00        		.byte	0
 1545 03c2 02        		.uleb128 0x2
 1546 03c3 0000 0000 		.long	.LASF59
 1547 03c7 023E      		.word	0x23e
 1548 03c9 0B        		.byte	0xb


 1549 03ca 0000 052F 		.long	0x52f
 1550 03ce 04        		.byte	0x4
 1551 03cf 02        		.uleb128 0x2
 1552 03d0 0000 0000 		.long	.LASF60
 1553 03d4 023E      		.word	0x23e
 1554 03d6 14        		.byte	0x14
 1555 03d7 0000 052F 		.long	0x52f
 1556 03db 08        		.byte	0x8
 1557 03dc 02        		.uleb128 0x2
 1558 03dd 0000 0000 		.long	.LASF61
 1559 03e1 023E      		.word	0x23e
 1560 03e3 1E        		.byte	0x1e
 1561 03e4 0000 052F 		.long	0x52f
 1562 03e8 0C        		.byte	0xc
 1563 03e9 02        		.uleb128 0x2
 1564 03ea 0000 0000 		.long	.LASF62
 1565 03ee 0240      		.word	0x240
 1566 03f0 08        		.byte	0x8
 1567 03f1 0000 0085 		.long	0x85
 1568 03f5 10        		.byte	0x10
 1569 03f6 02        		.uleb128 0x2
 1570 03f7 0000 0000 		.long	.LASF63
 1571 03fb 0241      		.word	0x241
 1572 03fd 08        		.byte	0x8
 1573 03fe 0000 06B7 		.long	0x6b7
 1574 0402 14        		.byte	0x14
 1575 0403 02        		.uleb128 0x2
 1576 0404 0000 0000 		.long	.LASF64
 1577 0408 0246      		.word	0x246
 1578 040a 16        		.byte	0x16
 1579 040b 0000 06CC 		.long	0x6cc
 1580 040f 2E        		.byte	0x2e
 1581 0410 02        		.uleb128 0x2
 1582 0411 0000 0000 		.long	.LASF65
 1583 0415 024C      		.word	0x24c
 1584 0417 0A        		.byte	0xa
 1585 0418 0000 06DC 		.long	0x6dc
 1586 041c 32        		.byte	0x32
 1587 041d 02        		.uleb128 0x2
 1588 041e 0000 0000 		.long	.LASF66
 1589 0422 024F      		.word	0x24f
 1590 0424 13        		.byte	0x13
 1591 0425 0000 0181 		.long	0x181
 1592 0429 36        		.byte	0x36
 1593 042a 02        		.uleb128 0x2
 1594 042b 0000 0000 		.long	.LASF67
 1595 042f 0250      		.word	0x250
 1596 0431 07        		.byte	0x7
 1597 0432 0000 0085 		.long	0x85
 1598 0436 3A        		.byte	0x3a
 1599 0437 02        		.uleb128 0x2
 1600 0438 0000 0000 		.long	.LASF68
 1601 043c 0251      		.word	0x251
 1602 043e 13        		.byte	0x13
 1603 043f 0000 0181 		.long	0x181
 1604 0443 3E        		.byte	0x3e
 1605 0444 02        		.uleb128 0x2


 1606 0445 0000 0000 		.long	.LASF69
 1607 0449 0252      		.word	0x252
 1608 044b 14        		.byte	0x14
 1609 044c 0000 06E1 		.long	0x6e1
 1610 0450 42        		.byte	0x42
 1611 0451 02        		.uleb128 0x2
 1612 0452 0000 0000 		.long	.LASF70
 1613 0456 0255      		.word	0x255
 1614 0458 07        		.byte	0x7
 1615 0459 0000 0085 		.long	0x85
 1616 045d 46        		.byte	0x46
 1617 045e 02        		.uleb128 0x2
 1618 045f 0000 0000 		.long	.LASF71
 1619 0463 0256      		.word	0x256
 1620 0465 09        		.byte	0x9
 1621 0466 0000 0488 		.long	0x488
 1622 046a 4A        		.byte	0x4a
 1623 046b 02        		.uleb128 0x2
 1624 046c 0000 0000 		.long	.LASF72
 1625 0470 0279      		.word	0x279
 1626 0472 07        		.byte	0x7
 1627 0473 0000 069F 		.long	0x69f
 1628 0477 4E        		.byte	0x4e
 1629 0478 2D        		.uleb128 0x2d
 1630 0479 0000 0000 		.long	.LASF73
 1631 047d 04        		.byte	0x4
 1632 047e 0281      		.word	0x281
 1633 0480 0B        		.byte	0xb
 1634 0481 0000 06F1 		.long	0x6f1
 1635 0485 0112      		.word	0x112
 1636 0487 00        		.byte	0
 1637 0488 03        		.uleb128 0x3
 1638 0489 0000 048D 		.long	0x48d
 1639 048d 09        		.uleb128 0x9
 1640 048e 01        		.byte	0x1
 1641 048f 06        		.byte	0x6
 1642 0490 0000 0000 		.long	.LASF74
 1643 0494 2E        		.uleb128 0x2e
 1644 0495 0000 048D 		.long	0x48d
 1645 0499 03        		.uleb128 0x3
 1646 049a 0000 0383 		.long	0x383
 1647 049e 13        		.uleb128 0x13
 1648 049f 0000 0098 		.long	0x98
 1649 04a3 0000 04BC 		.long	0x4bc
 1650 04a7 05        		.uleb128 0x5
 1651 04a8 0000 03A1 		.long	0x3a1
 1652 04ac 05        		.uleb128 0x5
 1653 04ad 0000 0103 		.long	0x103
 1654 04b1 05        		.uleb128 0x5
 1655 04b2 0000 04BC 		.long	0x4bc
 1656 04b6 05        		.uleb128 0x5
 1657 04b7 0000 0085 		.long	0x85
 1658 04bb 00        		.byte	0
 1659 04bc 03        		.uleb128 0x3
 1660 04bd 0000 0494 		.long	0x494
 1661 04c1 03        		.uleb128 0x3
 1662 04c2 0000 049E 		.long	0x49e


 1663 04c6 13        		.uleb128 0x13
 1664 04c7 0000 008C 		.long	0x8c
 1665 04cb 0000 04E4 		.long	0x4e4
 1666 04cf 05        		.uleb128 0x5
 1667 04d0 0000 03A1 		.long	0x3a1
 1668 04d4 05        		.uleb128 0x5
 1669 04d5 0000 0103 		.long	0x103
 1670 04d9 05        		.uleb128 0x5
 1671 04da 0000 008C 		.long	0x8c
 1672 04de 05        		.uleb128 0x5
 1673 04df 0000 0085 		.long	0x85
 1674 04e3 00        		.byte	0
 1675 04e4 03        		.uleb128 0x3
 1676 04e5 0000 04C6 		.long	0x4c6
 1677 04e9 13        		.uleb128 0x13
 1678 04ea 0000 0085 		.long	0x85
 1679 04ee 0000 04FD 		.long	0x4fd
 1680 04f2 05        		.uleb128 0x5
 1681 04f3 0000 03A1 		.long	0x3a1
 1682 04f7 05        		.uleb128 0x5
 1683 04f8 0000 0103 		.long	0x103
 1684 04fc 00        		.byte	0
 1685 04fd 03        		.uleb128 0x3
 1686 04fe 0000 04E9 		.long	0x4e9
 1687 0502 06        		.uleb128 0x6
 1688 0503 0000 002D 		.long	0x2d
 1689 0507 0000 0512 		.long	0x512
 1690 050b 08        		.uleb128 0x8
 1691 050c 0000 0049 		.long	0x49
 1692 0510 02        		.byte	0x2
 1693 0511 00        		.byte	0
 1694 0512 06        		.uleb128 0x6
 1695 0513 0000 002D 		.long	0x2d
 1696 0517 0000 0522 		.long	0x522
 1697 051b 08        		.uleb128 0x8
 1698 051c 0000 0049 		.long	0x49
 1699 0520 00        		.byte	0
 1700 0521 00        		.byte	0
 1701 0522 1C        		.uleb128 0x1c
 1702 0523 0000 0000 		.long	.LASF75
 1703 0527 04        		.byte	0x4
 1704 0528 010D      		.word	0x10d
 1705 052a 1A        		.byte	0x1a
 1706 052b 0000 0242 		.long	0x242
 1707 052f 03        		.uleb128 0x3
 1708 0530 0000 0522 		.long	0x522
 1709 0534 2F        		.uleb128 0x2f
 1710 0535 0000 0000 		.long	.LASF76
 1711 0539 0E        		.byte	0xe
 1712 053a 04        		.byte	0x4
 1713 053b 0131      		.word	0x131
 1714 053d 08        		.byte	0x8
 1715 053e 0000 056A 		.long	0x56a
 1716 0542 02        		.uleb128 0x2
 1717 0543 0000 0000 		.long	.LASF77
 1718 0547 0132      		.word	0x132
 1719 0549 12        		.byte	0x12


 1720 054a 0000 056A 		.long	0x56a
 1721 054e 00        		.byte	0
 1722 054f 02        		.uleb128 0x2
 1723 0550 0000 0000 		.long	.LASF78
 1724 0554 0133      		.word	0x133
 1725 0556 12        		.byte	0x12
 1726 0557 0000 056A 		.long	0x56a
 1727 055b 06        		.byte	0x6
 1728 055c 02        		.uleb128 0x2
 1729 055d 0000 0000 		.long	.LASF79
 1730 0561 0134      		.word	0x134
 1731 0563 12        		.byte	0x12
 1732 0564 0000 003B 		.long	0x3b
 1733 0568 0C        		.byte	0xc
 1734 0569 00        		.byte	0
 1735 056a 06        		.uleb128 0x6
 1736 056b 0000 003B 		.long	0x3b
 1737 056f 0000 057A 		.long	0x57a
 1738 0573 08        		.uleb128 0x8
 1739 0574 0000 0049 		.long	0x49
 1740 0578 02        		.byte	0x2
 1741 0579 00        		.byte	0
 1742 057a 30        		.uleb128 0x30
 1743 057b C4        		.byte	0xc4
 1744 057c 04        		.byte	0x4
 1745 057d 025A      		.word	0x25a
 1746 057f 07        		.byte	0x7
 1747 0580 0000 066F 		.long	0x66f
 1748 0584 02        		.uleb128 0x2
 1749 0585 0000 0000 		.long	.LASF80
 1750 0589 025F      		.word	0x25f
 1751 058b 12        		.byte	0x12
 1752 058c 0000 0488 		.long	0x488
 1753 0590 00        		.byte	0
 1754 0591 02        		.uleb128 0x2
 1755 0592 0000 0000 		.long	.LASF81
 1756 0596 0260      		.word	0x260
 1757 0598 10        		.byte	0x10
 1758 0599 0000 066F 		.long	0x66f
 1759 059d 04        		.byte	0x4
 1760 059e 02        		.uleb128 0x2
 1761 059f 0000 0000 		.long	.LASF82
 1762 05a3 0261      		.word	0x261
 1763 05a5 17        		.byte	0x17
 1764 05a6 0000 0196 		.long	0x196
 1765 05aa 1E        		.byte	0x1e
 1766 05ab 02        		.uleb128 0x2
 1767 05ac 0000 0000 		.long	.LASF83
 1768 05b0 0262      		.word	0x262
 1769 05b2 0F        		.byte	0xf
 1770 05b3 0000 0085 		.long	0x85
 1771 05b7 42        		.byte	0x42
 1772 05b8 02        		.uleb128 0x2
 1773 05b9 0000 0000 		.long	.LASF84
 1774 05bd 0263      		.word	0x263
 1775 05bf 2C        		.byte	0x2c
 1776 05c0 0000 0057 		.long	0x57


 1777 05c4 46        		.byte	0x46
 1778 05c5 02        		.uleb128 0x2
 1779 05c6 0000 0000 		.long	.LASF85
 1780 05ca 0264      		.word	0x264
 1781 05cc 1A        		.byte	0x1a
 1782 05cd 0000 0534 		.long	0x534
 1783 05d1 4E        		.byte	0x4e
 1784 05d2 02        		.uleb128 0x2
 1785 05d3 0000 0000 		.long	.LASF86
 1786 05d7 0265      		.word	0x265
 1787 05d9 16        		.byte	0x16
 1788 05da 0000 00F7 		.long	0xf7
 1789 05de 5C        		.byte	0x5c
 1790 05df 02        		.uleb128 0x2
 1791 05e0 0000 0000 		.long	.LASF87
 1792 05e4 0266      		.word	0x266
 1793 05e6 16        		.byte	0x16
 1794 05e7 0000 00F7 		.long	0xf7
 1795 05eb 64        		.byte	0x64
 1796 05ec 02        		.uleb128 0x2
 1797 05ed 0000 0000 		.long	.LASF88
 1798 05f1 0267      		.word	0x267
 1799 05f3 16        		.byte	0x16
 1800 05f4 0000 00F7 		.long	0xf7
 1801 05f8 6C        		.byte	0x6c
 1802 05f9 02        		.uleb128 0x2
 1803 05fa 0000 0000 		.long	.LASF89
 1804 05fe 0268      		.word	0x268
 1805 0600 10        		.byte	0x10
 1806 0601 0000 067F 		.long	0x67f
 1807 0605 74        		.byte	0x74
 1808 0606 02        		.uleb128 0x2
 1809 0607 0000 0000 		.long	.LASF90
 1810 060b 0269      		.word	0x269
 1811 060d 10        		.byte	0x10
 1812 060e 0000 068F 		.long	0x68f
 1813 0612 7C        		.byte	0x7c
 1814 0613 02        		.uleb128 0x2
 1815 0614 0000 0000 		.long	.LASF91
 1816 0618 026A      		.word	0x26a
 1817 061a 0F        		.byte	0xf
 1818 061b 0000 0085 		.long	0x85
 1819 061f 94        		.byte	0x94
 1820 0620 02        		.uleb128 0x2
 1821 0621 0000 0000 		.long	.LASF92
 1822 0625 026B      		.word	0x26b
 1823 0627 16        		.byte	0x16
 1824 0628 0000 00F7 		.long	0xf7
 1825 062c 98        		.byte	0x98
 1826 062d 02        		.uleb128 0x2
 1827 062e 0000 0000 		.long	.LASF93
 1828 0632 026C      		.word	0x26c
 1829 0634 16        		.byte	0x16
 1830 0635 0000 00F7 		.long	0xf7
 1831 0639 A0        		.byte	0xa0
 1832 063a 02        		.uleb128 0x2
 1833 063b 0000 0000 		.long	.LASF94


 1834 063f 026D      		.word	0x26d
 1835 0641 16        		.byte	0x16
 1836 0642 0000 00F7 		.long	0xf7
 1837 0646 A8        		.byte	0xa8
 1838 0647 02        		.uleb128 0x2
 1839 0648 0000 0000 		.long	.LASF95
 1840 064c 026E      		.word	0x26e
 1841 064e 16        		.byte	0x16
 1842 064f 0000 00F7 		.long	0xf7
 1843 0653 B0        		.byte	0xb0
 1844 0654 02        		.uleb128 0x2
 1845 0655 0000 0000 		.long	.LASF96
 1846 0659 026F      		.word	0x26f
 1847 065b 16        		.byte	0x16
 1848 065c 0000 00F7 		.long	0xf7
 1849 0660 B8        		.byte	0xb8
 1850 0661 02        		.uleb128 0x2
 1851 0662 0000 0000 		.long	.LASF97
 1852 0666 0270      		.word	0x270
 1853 0668 08        		.byte	0x8
 1854 0669 0000 0085 		.long	0x85
 1855 066d C0        		.byte	0xc0
 1856 066e 00        		.byte	0
 1857 066f 06        		.uleb128 0x6
 1858 0670 0000 048D 		.long	0x48d
 1859 0674 0000 067F 		.long	0x67f
 1860 0678 08        		.uleb128 0x8
 1861 0679 0000 0049 		.long	0x49
 1862 067d 19        		.byte	0x19
 1863 067e 00        		.byte	0
 1864 067f 06        		.uleb128 0x6
 1865 0680 0000 048D 		.long	0x48d
 1866 0684 0000 068F 		.long	0x68f
 1867 0688 08        		.uleb128 0x8
 1868 0689 0000 0049 		.long	0x49
 1869 068d 07        		.byte	0x7
 1870 068e 00        		.byte	0
 1871 068f 06        		.uleb128 0x6
 1872 0690 0000 048D 		.long	0x48d
 1873 0694 0000 069F 		.long	0x69f
 1874 0698 08        		.uleb128 0x8
 1875 0699 0000 0049 		.long	0x49
 1876 069d 17        		.byte	0x17
 1877 069e 00        		.byte	0
 1878 069f 31        		.uleb128 0x31
 1879 06a0 C4        		.byte	0xc4
 1880 06a1 04        		.byte	0x4
 1881 06a2 0258      		.word	0x258
 1882 06a4 03        		.byte	0x3
 1883 06a5 0000 06B7 		.long	0x6b7
 1884 06a9 32        		.uleb128 0x32
 1885 06aa 0000 0000 		.long	.LASF57
 1886 06ae 04        		.byte	0x4
 1887 06af 0271      		.word	0x271
 1888 06b1 0B        		.byte	0xb
 1889 06b2 0000 057A 		.long	0x57a
 1890 06b6 00        		.byte	0


 1891 06b7 06        		.uleb128 0x6
 1892 06b8 0000 048D 		.long	0x48d
 1893 06bc 0000 06C7 		.long	0x6c7
 1894 06c0 08        		.uleb128 0x8
 1895 06c1 0000 0049 		.long	0x49
 1896 06c5 18        		.byte	0x18
 1897 06c6 00        		.byte	0
 1898 06c7 33        		.uleb128 0x33
 1899 06c8 0000 0000 		.long	.LASF145
 1900 06cc 03        		.uleb128 0x3
 1901 06cd 0000 06C7 		.long	0x6c7
 1902 06d1 1E        		.uleb128 0x1e
 1903 06d2 0000 06DC 		.long	0x6dc
 1904 06d6 05        		.uleb128 0x5
 1905 06d7 0000 03A1 		.long	0x3a1
 1906 06db 00        		.byte	0
 1907 06dc 03        		.uleb128 0x3
 1908 06dd 0000 06D1 		.long	0x6d1
 1909 06e1 03        		.uleb128 0x3
 1910 06e2 0000 0181 		.long	0x181
 1911 06e6 1E        		.uleb128 0x1e
 1912 06e7 0000 06F1 		.long	0x6f1
 1913 06eb 05        		.uleb128 0x5
 1914 06ec 0000 0085 		.long	0x85
 1915 06f0 00        		.byte	0
 1916 06f1 03        		.uleb128 0x3
 1917 06f2 0000 06F6 		.long	0x6f6
 1918 06f6 03        		.uleb128 0x3
 1919 06f7 0000 06E6 		.long	0x6e6
 1920 06fb 07        		.uleb128 0x7
 1921 06fc 0000 0000 		.long	.LASF98
 1922 0700 06        		.byte	0x6
 1923 0701 42        		.byte	0x42
 1924 0702 10        		.byte	0x10
 1925 0703 0000 0522 		.long	0x522
 1926 0707 07        		.uleb128 0x7
 1927 0708 0000 0000 		.long	.LASF99
 1928 070c 07        		.byte	0x7
 1929 070d 11        		.byte	0x11
 1930 070e 0D        		.byte	0xd
 1931 070f 0000 0085 		.long	0x85
 1932 0713 17        		.uleb128 0x17
 1933 0714 0C        		.byte	0xc
 1934 0715 07        		.byte	0x7
 1935 0716 13        		.byte	0x13
 1936 0717 0000 0743 		.long	0x743
 1937 071b 01        		.uleb128 0x1
 1938 071c 0000 0000 		.long	.LASF100
 1939 0720 07        		.byte	0x7
 1940 0721 15        		.byte	0x15
 1941 0722 07        		.byte	0x7
 1942 0723 0000 0085 		.long	0x85
 1943 0727 00        		.byte	0
 1944 0728 0A        		.uleb128 0xa
 1945 0729 6E73 7400 		.string	"nst"
 1946 072d 07        		.byte	0x7
 1947 072e 16        		.byte	0x16


 1948 072f 07        		.byte	0x7
 1949 0730 0000 0085 		.long	0x85
 1950 0734 04        		.byte	0x4
 1951 0735 01        		.uleb128 0x1
 1952 0736 0000 0000 		.long	.LASF101
 1953 073a 07        		.byte	0x7
 1954 073b 17        		.byte	0x17
 1955 073c 10        		.byte	0x10
 1956 073d 0000 0707 		.long	0x707
 1957 0741 08        		.byte	0x8
 1958 0742 00        		.byte	0
 1959 0743 07        		.uleb128 0x7
 1960 0744 0000 0000 		.long	.LASF102
 1961 0748 07        		.byte	0x7
 1962 0749 18        		.byte	0x18
 1963 074a 03        		.byte	0x3
 1964 074b 0000 0713 		.long	0x713
 1965 074f 17        		.uleb128 0x17
 1966 0750 14        		.byte	0x14
 1967 0751 07        		.byte	0x7
 1968 0752 1A        		.byte	0x1a
 1969 0753 0000 0799 		.long	0x799
 1970 0757 01        		.uleb128 0x1
 1971 0758 0000 0000 		.long	.LASF103
 1972 075c 07        		.byte	0x7
 1973 075d 1C        		.byte	0x1c
 1974 075e 0A        		.byte	0xa
 1975 075f 0000 07A0 		.long	0x7a0
 1976 0763 00        		.byte	0
 1977 0764 01        		.uleb128 0x1
 1978 0765 0000 0000 		.long	.LASF104
 1979 0769 07        		.byte	0x7
 1980 076a 1D        		.byte	0x1d
 1981 076b 09        		.byte	0x9
 1982 076c 0000 0103 		.long	0x103
 1983 0770 04        		.byte	0x4
 1984 0771 01        		.uleb128 0x1
 1985 0772 0000 0000 		.long	.LASF105
 1986 0776 07        		.byte	0x7
 1987 0777 1E        		.byte	0x1e
 1988 0778 07        		.byte	0x7
 1989 0779 0000 0085 		.long	0x85
 1990 077d 08        		.byte	0x8
 1991 077e 01        		.uleb128 0x1
 1992 077f 0000 0000 		.long	.LASF106
 1993 0783 07        		.byte	0x7
 1994 0784 1F        		.byte	0x1f
 1995 0785 07        		.byte	0x7
 1996 0786 0000 0085 		.long	0x85
 1997 078a 0C        		.byte	0xc
 1998 078b 01        		.uleb128 0x1
 1999 078c 0000 0000 		.long	.LASF107
 2000 0790 07        		.byte	0x7
 2001 0791 20        		.byte	0x20
 2002 0792 10        		.byte	0x10
 2003 0793 0000 0707 		.long	0x707
 2004 0797 10        		.byte	0x10


 2005 0798 00        		.byte	0
 2006 0799 34        		.uleb128 0x34
 2007 079a 0000 07A0 		.long	0x7a0
 2008 079e 0F        		.uleb128 0xf
 2009 079f 00        		.byte	0
 2010 07a0 03        		.uleb128 0x3
 2011 07a1 0000 0799 		.long	0x799
 2012 07a5 07        		.uleb128 0x7
 2013 07a6 0000 0000 		.long	.LASF108
 2014 07aa 07        		.byte	0x7
 2015 07ab 21        		.byte	0x21
 2016 07ac 03        		.byte	0x3
 2017 07ad 0000 074F 		.long	0x74f
 2018 07b1 35        		.uleb128 0x35
 2019 07b2 0800      		.word	0x800
 2020 07b4 07        		.byte	0x7
 2021 07b5 23        		.byte	0x23
 2022 07b6 09        		.byte	0x9
 2023 07b7 0000 07D7 		.long	0x7d7
 2024 07bb 01        		.uleb128 0x1
 2025 07bc 0000 0000 		.long	.LASF109
 2026 07c0 07        		.byte	0x7
 2027 07c1 25        		.byte	0x25
 2028 07c2 08        		.byte	0x8
 2029 07c3 0000 07D7 		.long	0x7d7
 2030 07c7 00        		.byte	0
 2031 07c8 36        		.uleb128 0x36
 2032 07c9 0000 0000 		.long	.LASF110
 2033 07cd 07        		.byte	0x7
 2034 07ce 26        		.byte	0x26
 2035 07cf 08        		.byte	0x8
 2036 07d0 0000 07D7 		.long	0x7d7
 2037 07d4 0400      		.word	0x400
 2038 07d6 00        		.byte	0
 2039 07d7 06        		.uleb128 0x6
 2040 07d8 0000 048D 		.long	0x48d
 2041 07dc 0000 07E8 		.long	0x7e8
 2042 07e0 37        		.uleb128 0x37
 2043 07e1 0000 0049 		.long	0x49
 2044 07e5 03FF      		.word	0x3ff
 2045 07e7 00        		.byte	0
 2046 07e8 07        		.uleb128 0x7
 2047 07e9 0000 0000 		.long	.LASF111
 2048 07ed 07        		.byte	0x7
 2049 07ee 27        		.byte	0x27
 2050 07ef 03        		.byte	0x3
 2051 07f0 0000 07B1 		.long	0x7b1
 2052 07f4 0B        		.uleb128 0xb
 2053 07f5 0000 0000 		.long	.LASF112
 2054 07f9 2B        		.byte	0x2b
 2055 07fa 15        		.byte	0x15
 2056 07fb 0000 0707 		.long	0x707
 2057 07ff 0B        		.uleb128 0xb
 2058 0800 0000 0000 		.long	.LASF113
 2059 0804 2C        		.byte	0x2c
 2060 0805 15        		.byte	0x15
 2061 0806 0000 0707 		.long	0x707


 2062 080a 0B        		.uleb128 0xb
 2063 080b 0000 0000 		.long	.LASF114
 2064 080f 2D        		.byte	0x2d
 2065 0810 15        		.byte	0x15
 2066 0811 0000 0707 		.long	0x707
 2067 0815 0B        		.uleb128 0xb
 2068 0816 0000 0000 		.long	.LASF115
 2069 081a 2E        		.byte	0x2e
 2070 081b 15        		.byte	0x15
 2071 081c 0000 0707 		.long	0x707
 2072 0820 06        		.uleb128 0x6
 2073 0821 0000 0743 		.long	0x743
 2074 0825 0000 0830 		.long	0x830
 2075 0829 08        		.uleb128 0x8
 2076 082a 0000 0049 		.long	0x49
 2077 082e 04        		.byte	0x4
 2078 082f 00        		.byte	0
 2079 0830 0B        		.uleb128 0xb
 2080 0831 0000 0000 		.long	.LASF116
 2081 0835 30        		.byte	0x30
 2082 0836 17        		.byte	0x17
 2083 0837 0000 0820 		.long	0x820
 2084 083b 06        		.uleb128 0x6
 2085 083c 0000 07A5 		.long	0x7a5
 2086 0840 0000 084B 		.long	0x84b
 2087 0844 08        		.uleb128 0x8
 2088 0845 0000 0049 		.long	0x49
 2089 0849 05        		.byte	0x5
 2090 084a 00        		.byte	0
 2091 084b 0B        		.uleb128 0xb
 2092 084c 0000 0000 		.long	.LASF117
 2093 0850 31        		.byte	0x31
 2094 0851 11        		.byte	0x11
 2095 0852 0000 083B 		.long	0x83b
 2096 0856 06        		.uleb128 0x6
 2097 0857 0000 07E8 		.long	0x7e8
 2098 085b 0000 0866 		.long	0x866
 2099 085f 08        		.uleb128 0x8
 2100 0860 0000 0049 		.long	0x49
 2101 0864 04        		.byte	0x4
 2102 0865 00        		.byte	0
 2103 0866 0B        		.uleb128 0xb
 2104 0867 0000 0000 		.long	.LASF118
 2105 086b 32        		.byte	0x32
 2106 086c 13        		.byte	0x13
 2107 086d 0000 0856 		.long	0x856
 2108 0871 0B        		.uleb128 0xb
 2109 0872 0000 0000 		.long	.LASF119
 2110 0876 59        		.byte	0x59
 2111 0877 0E        		.byte	0xe
 2112 0878 0000 087C 		.long	0x87c
 2113 087c 03        		.uleb128 0x3
 2114 087d 0000 06FB 		.long	0x6fb
 2115 0881 0B        		.uleb128 0xb
 2116 0882 0000 0000 		.long	.LASF120
 2117 0886 5A        		.byte	0x5a
 2118 0887 0E        		.byte	0xe


 2119 0888 0000 087C 		.long	0x87c
 2120 088c 0B        		.uleb128 0xb
 2121 088d 0000 0000 		.long	.LASF121
 2122 0891 5B        		.byte	0x5b
 2123 0892 0E        		.byte	0xe
 2124 0893 0000 087C 		.long	0x87c
 2125 0897 0B        		.uleb128 0xb
 2126 0898 0000 0000 		.long	.LASF122
 2127 089c 5C        		.byte	0x5c
 2128 089d 0E        		.byte	0xe
 2129 089e 0000 087C 		.long	0x87c
 2130 08a2 0C        		.uleb128 0xc
 2131 08a3 0000 07F4 		.long	0x7f4
 2132 08a7 04        		.byte	0x4
 2133 08a8 0E        		.byte	0xe
 2134 08a9 05        		.uleb128 0x5
 2135 08aa 03        		.byte	0x3
 2136 08ab 0000 0000 		.long	curr_task
 2137 08af 0C        		.uleb128 0xc
 2138 08b0 0000 07FF 		.long	0x7ff
 2139 08b4 05        		.byte	0x5
 2140 08b5 0E        		.byte	0xe
 2141 08b6 05        		.uleb128 0x5
 2142 08b7 03        		.byte	0x3
 2143 08b8 0000 0000 		.long	new_task
 2144 08bc 0C        		.uleb128 0xc
 2145 08bd 0000 080A 		.long	0x80a
 2146 08c1 06        		.byte	0x6
 2147 08c2 0E        		.byte	0xe
 2148 08c3 05        		.uleb128 0x5
 2149 08c4 03        		.byte	0x3
 2150 08c5 0000 0000 		.long	next_task
 2151 08c9 0C        		.uleb128 0xc
 2152 08ca 0000 0815 		.long	0x815
 2153 08ce 07        		.byte	0x7
 2154 08cf 0E        		.byte	0xe
 2155 08d0 05        		.uleb128 0x5
 2156 08d1 03        		.byte	0x3
 2157 08d2 0000 0000 		.long	ready
 2158 08d6 0C        		.uleb128 0xc
 2159 08d7 0000 0830 		.long	0x830
 2160 08db 09        		.byte	0x9
 2161 08dc 10        		.byte	0x10
 2162 08dd 05        		.uleb128 0x5
 2163 08de 03        		.byte	0x3
 2164 08df 0000 0000 		.long	semaphore
 2165 08e3 0C        		.uleb128 0xc
 2166 08e4 0000 084B 		.long	0x84b
 2167 08e8 0A        		.byte	0xa
 2168 08e9 0A        		.byte	0xa
 2169 08ea 05        		.uleb128 0x5
 2170 08eb 03        		.byte	0x3
 2171 08ec 0000 0000 		.long	task_tab
 2172 08f0 0C        		.uleb128 0xc
 2173 08f1 0000 0866 		.long	0x866
 2174 08f5 0B        		.byte	0xb
 2175 08f6 0C        		.byte	0xc


 2176 08f7 05        		.uleb128 0x5
 2177 08f8 03        		.byte	0x3
 2178 08f9 0000 0000 		.long	stacks
 2179 08fd 0C        		.uleb128 0xc
 2180 08fe 0000 0871 		.long	0x871
 2181 0902 0D        		.byte	0xd
 2182 0903 07        		.byte	0x7
 2183 0904 05        		.uleb128 0x5
 2184 0905 03        		.byte	0x3
 2185 0906 0000 0000 		.long	com0in
 2186 090a 0C        		.uleb128 0xc
 2187 090b 0000 0881 		.long	0x881
 2188 090f 0E        		.byte	0xe
 2189 0910 07        		.byte	0x7
 2190 0911 05        		.uleb128 0x5
 2191 0912 03        		.byte	0x3
 2192 0913 0000 0000 		.long	com0out
 2193 0917 0C        		.uleb128 0xc
 2194 0918 0000 088C 		.long	0x88c
 2195 091c 0F        		.byte	0xf
 2196 091d 07        		.byte	0x7
 2197 091e 05        		.uleb128 0x5
 2198 091f 03        		.byte	0x3
 2199 0920 0000 0000 		.long	com1in
 2200 0924 0C        		.uleb128 0xc
 2201 0925 0000 0897 		.long	0x897
 2202 0929 10        		.byte	0x10
 2203 092a 07        		.byte	0x7
 2204 092b 05        		.uleb128 0x5
 2205 092c 03        		.byte	0x3
 2206 092d 0000 0000 		.long	com1out
 2207 0931 14        		.uleb128 0x14
 2208 0932 0000 0000 		.long	.LASF123
 2209 0936 44        		.byte	0x44
 2210 0937 0000 093D 		.long	0x93d
 2211 093b 0F        		.uleb128 0xf
 2212 093c 00        		.byte	0
 2213 093d 14        		.uleb128 0x14
 2214 093e 0000 0000 		.long	.LASF124
 2215 0942 43        		.byte	0x43
 2216 0943 0000 0949 		.long	0x949
 2217 0947 0F        		.uleb128 0xf
 2218 0948 00        		.byte	0
 2219 0949 14        		.uleb128 0x14
 2220 094a 0000 0000 		.long	.LASF125
 2221 094e 48        		.byte	0x48
 2222 094f 0000 0955 		.long	0x955
 2223 0953 0F        		.uleb128 0xf
 2224 0954 00        		.byte	0
 2225 0955 14        		.uleb128 0x14
 2226 0956 0000 0000 		.long	.LASF126
 2227 095a 56        		.byte	0x56
 2228 095b 0000 0961 		.long	0x961
 2229 095f 0F        		.uleb128 0xf
 2230 0960 00        		.byte	0
 2231 0961 1F        		.uleb128 0x1f
 2232 0962 0000 0000 		.long	.LASF128


 2233 0966 D1        		.byte	0xd1
 2234 0967 0000 0085 		.long	0x85
 2235 096b 0000 0000 		.long	.LFB13
 2236 096f 0000 0092 		.long	.LFE13-.LFB13
 2237 0973 01        		.uleb128 0x1
 2238 0974 9C        		.byte	0x9c
 2239 0975 0000 0A2D 		.long	0xa2d
 2240 0979 10        		.uleb128 0x10
 2241 097a 6100      		.string	"a"
 2242 097c D1        		.byte	0xd1
 2243 097d 10        		.byte	0x10
 2244 097e 0000 0085 		.long	0x85
 2245 0982 02        		.uleb128 0x2
 2246 0983 91        		.byte	0x91
 2247 0984 00        		.sleb128 0
 2248 0985 38        		.uleb128 0x38
 2249 0986 0000 0000 		.long	.LASF127
 2250 098a 01        		.byte	0x1
 2251 098b D3        		.byte	0xd3
 2252 098c 10        		.byte	0x10
 2253 098d 0000 0707 		.long	0x707
 2254 0991 0000 0000 		.long	.LLST29
 2255 0995 0000 0000 		.long	.LVUS29
 2256 0999 15        		.uleb128 0x15
 2257 099a 0000 0B65 		.long	0xb65
 2258 099e 0000 0000 		.long	.LBI63
 2259 09a2 01        		.byte	.LVU281
 2260 09a3 0000 0000 		.long	.LBB63
 2261 09a7 0000 0030 		.long	.LBE63-.LBB63
 2262 09ab D3        		.byte	0xd3
 2263 09ac 1A        		.byte	0x1a
 2264 09ad 0000 09E7 		.long	0x9e7
 2265 09b1 0D        		.uleb128 0xd
 2266 09b2 0000 0B74 		.long	0xb74
 2267 09b6 0000 0000 		.long	.LLST30
 2268 09ba 0000 0000 		.long	.LVUS30
 2269 09be 04        		.uleb128 0x4
 2270 09bf 0000 0B7F 		.long	0xb7f
 2271 09c3 0000 0000 		.long	.LLST31
 2272 09c7 0000 0000 		.long	.LVUS31
 2273 09cb 0E        		.uleb128 0xe
 2274 09cc 0000 0B8A 		.long	0xb8a
 2275 09d0 0000 0000 		.long	.LBB65
 2276 09d4 0000 0016 		.long	.LBE65-.LBB65
 2277 09d8 04        		.uleb128 0x4
 2278 09d9 0000 0B8B 		.long	0xb8b
 2279 09dd 0000 0000 		.long	.LLST32
 2280 09e1 0000 0000 		.long	.LVUS32
 2281 09e5 00        		.byte	0
 2282 09e6 00        		.byte	0
 2283 09e7 20        		.uleb128 0x20
 2284 09e8 0000 0BA2 		.long	0xba2
 2285 09ec 0000 0000 		.long	.LBI66
 2286 09f0 04        		.byte	.LVU296
 2287 09f1 0000 0000 		.long	.LLRL33
 2288 09f5 D4        		.byte	0xd4
 2289 09f6 0D        		.uleb128 0xd


 2290 09f7 0000 0BBA 		.long	0xbba
 2291 09fb 0000 0000 		.long	.LLST34
 2292 09ff 0000 0000 		.long	.LVUS34
 2293 0a03 0D        		.uleb128 0xd
 2294 0a04 0000 0BAF 		.long	0xbaf
 2295 0a08 0000 0000 		.long	.LLST35
 2296 0a0c 0000 0000 		.long	.LVUS35
 2297 0a10 0E        		.uleb128 0xe
 2298 0a11 0000 0BC4 		.long	0xbc4
 2299 0a15 0000 0000 		.long	.LBB68
 2300 0a19 0000 0046 		.long	.LBE68-.LBB68
 2301 0a1d 04        		.uleb128 0x4
 2302 0a1e 0000 0BC5 		.long	0xbc5
 2303 0a22 0000 0000 		.long	.LLST36
 2304 0a26 0000 0000 		.long	.LVUS36
 2305 0a2a 00        		.byte	0
 2306 0a2b 00        		.byte	0
 2307 0a2c 00        		.byte	0
 2308 0a2d 1F        		.uleb128 0x1f
 2309 0a2e 0000 0000 		.long	.LASF129
 2310 0a32 CA        		.byte	0xca
 2311 0a33 0000 0085 		.long	0x85
 2312 0a37 0000 0000 		.long	.LFB12
 2313 0a3b 0000 00A2 		.long	.LFE12-.LFB12
 2314 0a3f 01        		.uleb128 0x1
 2315 0a40 9C        		.byte	0x9c
 2316 0a41 0000 0B08 		.long	0xb08
 2317 0a45 10        		.uleb128 0x10
 2318 0a46 6100      		.string	"a"
 2319 0a48 CA        		.byte	0xca
 2320 0a49 0F        		.byte	0xf
 2321 0a4a 0000 0085 		.long	0x85
 2322 0a4e 02        		.uleb128 0x2
 2323 0a4f 91        		.byte	0x91
 2324 0a50 00        		.sleb128 0
 2325 0a51 39        		.uleb128 0x39
 2326 0a52 0000 0BA2 		.long	0xba2
 2327 0a56 0000 0000 		.long	.LBI53
 2328 0a5a 00        		.byte	.LVU221
 2329 0a5b 0000 0000 		.long	.LLRL22
 2330 0a5f 01        		.byte	0x1
 2331 0a60 CC        		.byte	0xcc
 2332 0a61 03        		.byte	0x3
 2333 0a62 0000 0A9C 		.long	0xa9c
 2334 0a66 0D        		.uleb128 0xd
 2335 0a67 0000 0BBA 		.long	0xbba
 2336 0a6b 0000 0000 		.long	.LLST23
 2337 0a6f 0000 0000 		.long	.LVUS23
 2338 0a73 0D        		.uleb128 0xd
 2339 0a74 0000 0BAF 		.long	0xbaf
 2340 0a78 0000 0000 		.long	.LLST24
 2341 0a7c 0000 0000 		.long	.LVUS24
 2342 0a80 0E        		.uleb128 0xe
 2343 0a81 0000 0BC4 		.long	0xbc4
 2344 0a85 0000 0000 		.long	.LBB55
 2345 0a89 0000 0048 		.long	.LBE55-.LBB55
 2346 0a8d 04        		.uleb128 0x4


 2347 0a8e 0000 0BC5 		.long	0xbc5
 2348 0a92 0000 0000 		.long	.LLST25
 2349 0a96 0000 0000 		.long	.LVUS25
 2350 0a9a 00        		.byte	0
 2351 0a9b 00        		.byte	0
 2352 0a9c 15        		.uleb128 0x15
 2353 0a9d 0000 0B5C 		.long	0xb5c
 2354 0aa1 0000 0000 		.long	.LBI57
 2355 0aa5 02        		.byte	.LVU229
 2356 0aa6 0000 0000 		.long	.LBB57
 2357 0aaa 0000 002C 		.long	.LBE57-.LBB57
 2358 0aae CD        		.byte	0xcd
 2359 0aaf 03        		.byte	0x3
 2360 0ab0 0000 0AFE 		.long	0xafe
 2361 0ab4 21        		.uleb128 0x21
 2362 0ab5 0000 0B65 		.long	0xb65
 2363 0ab9 0000 0000 		.long	.LBI59
 2364 0abd 04        		.byte	.LVU231
 2365 0abe 0000 0000 		.long	.LBB59
 2366 0ac2 0000 0022 		.long	.LBE59-.LBB59
 2367 0ac6 B2        		.byte	0xb2
 2368 0ac7 0D        		.uleb128 0xd
 2369 0ac8 0000 0B74 		.long	0xb74
 2370 0acc 0000 0000 		.long	.LLST26
 2371 0ad0 0000 0000 		.long	.LVUS26
 2372 0ad4 04        		.uleb128 0x4
 2373 0ad5 0000 0B7F 		.long	0xb7f
 2374 0ad9 0000 0000 		.long	.LLST27
 2375 0add 0000 0000 		.long	.LVUS27
 2376 0ae1 0E        		.uleb128 0xe
 2377 0ae2 0000 0B8A 		.long	0xb8a
 2378 0ae6 0000 0000 		.long	.LBB61
 2379 0aea 0000 001A 		.long	.LBE61-.LBB61
 2380 0aee 04        		.uleb128 0x4
 2381 0aef 0000 0B8B 		.long	0xb8b
 2382 0af3 0000 0000 		.long	.LLST28
 2383 0af7 0000 0000 		.long	.LVUS28
 2384 0afb 00        		.byte	0
 2385 0afc 00        		.byte	0
 2386 0afd 00        		.byte	0
 2387 0afe 22        		.uleb128 0x22
 2388 0aff 0000 0000 		.long	.LVL59
 2389 0b03 0000 0931 		.long	0x931
 2390 0b07 00        		.byte	0
 2391 0b08 18        		.uleb128 0x18
 2392 0b09 0000 0000 		.long	.LASF130
 2393 0b0d C1        		.byte	0xc1
 2394 0b0e 0000 0000 		.long	.LFB11
 2395 0b12 0000 002A 		.long	.LFE11-.LFB11
 2396 0b16 01        		.uleb128 0x1
 2397 0b17 9C        		.byte	0x9c
 2398 0b18 0000 0B32 		.long	0xb32
 2399 0b1c 10        		.uleb128 0x10
 2400 0b1d 6100      		.string	"a"
 2401 0b1f C1        		.byte	0xc1
 2402 0b20 11        		.byte	0x11
 2403 0b21 0000 0085 		.long	0x85


 2404 0b25 02        		.uleb128 0x2
 2405 0b26 91        		.byte	0x91
 2406 0b27 00        		.sleb128 0
 2407 0b28 19        		.uleb128 0x19
 2408 0b29 0000 0000 		.long	.LVL78
 2409 0b2d 0000 0961 		.long	0x961
 2410 0b31 00        		.byte	0
 2411 0b32 18        		.uleb128 0x18
 2412 0b33 0000 0000 		.long	.LASF131
 2413 0b37 B8        		.byte	0xb8
 2414 0b38 0000 0000 		.long	.LFB10
 2415 0b3c 0000 002A 		.long	.LFE10-.LFB10
 2416 0b40 01        		.uleb128 0x1
 2417 0b41 9C        		.byte	0x9c
 2418 0b42 0000 0B5C 		.long	0xb5c
 2419 0b46 10        		.uleb128 0x10
 2420 0b47 6100      		.string	"a"
 2421 0b49 B8        		.byte	0xb8
 2422 0b4a 11        		.byte	0x11
 2423 0b4b 0000 0085 		.long	0x85
 2424 0b4f 02        		.uleb128 0x2
 2425 0b50 91        		.byte	0x91
 2426 0b51 00        		.sleb128 0
 2427 0b52 19        		.uleb128 0x19
 2428 0b53 0000 0000 		.long	.LVL65
 2429 0b57 0000 0A2D 		.long	0xa2d
 2430 0b5b 00        		.byte	0
 2431 0b5c 3A        		.uleb128 0x3a
 2432 0b5d 0000 0000 		.long	.LASF146
 2433 0b61 01        		.byte	0x1
 2434 0b62 B0        		.byte	0xb0
 2435 0b63 06        		.byte	0x6
 2436 0b64 01        		.byte	0x1
 2437 0b65 23        		.uleb128 0x23
 2438 0b66 0000 0000 		.long	.LASF135
 2439 0b6a 9C        		.byte	0x9c
 2440 0b6b 0E        		.byte	0xe
 2441 0b6c 0000 0707 		.long	0x707
 2442 0b70 0000 0B98 		.long	0xb98
 2443 0b74 24        		.uleb128 0x24
 2444 0b75 0000 0000 		.long	.LASF134
 2445 0b79 9C        		.byte	0x9c
 2446 0b7a 24        		.byte	0x24
 2447 0b7b 0000 0B98 		.long	0xb98
 2448 0b7f 11        		.uleb128 0x11
 2449 0b80 0000 0000 		.long	.LASF132
 2450 0b84 9E        		.byte	0x9e
 2451 0b85 10        		.byte	0x10
 2452 0b86 0000 0707 		.long	0x707
 2453 0b8a 25        		.uleb128 0x25
 2454 0b8b 11        		.uleb128 0x11
 2455 0b8c 0000 0000 		.long	.LASF133
 2456 0b90 A1        		.byte	0xa1
 2457 0b91 0F        		.byte	0xf
 2458 0b92 0000 0B9D 		.long	0xb9d
 2459 0b96 00        		.byte	0
 2460 0b97 00        		.byte	0


 2461 0b98 03        		.uleb128 0x3
 2462 0b99 0000 0707 		.long	0x707
 2463 0b9d 03        		.uleb128 0x3
 2464 0b9e 0000 07A5 		.long	0x7a5
 2465 0ba2 3B        		.uleb128 0x3b
 2466 0ba3 0000 0000 		.long	.LASF147
 2467 0ba7 01        		.byte	0x1
 2468 0ba8 7D        		.byte	0x7d
 2469 0ba9 06        		.byte	0x6
 2470 0baa 01        		.byte	0x1
 2471 0bab 0000 0BD2 		.long	0xbd2
 2472 0baf 24        		.uleb128 0x24
 2473 0bb0 0000 0000 		.long	.LASF134
 2474 0bb4 7D        		.byte	0x7d
 2475 0bb5 19        		.byte	0x19
 2476 0bb6 0000 0B98 		.long	0xb98
 2477 0bba 26        		.uleb128 0x26
 2478 0bbb 6964 00   		.string	"id"
 2479 0bbe 7D        		.byte	0x7d
 2480 0bbf 2F        		.byte	0x2f
 2481 0bc0 0000 0707 		.long	0x707
 2482 0bc4 25        		.uleb128 0x25
 2483 0bc5 11        		.uleb128 0x11
 2484 0bc6 0000 0000 		.long	.LASF133
 2485 0bca 85        		.byte	0x85
 2486 0bcb 0F        		.byte	0xf
 2487 0bcc 0000 0B9D 		.long	0xb9d
 2488 0bd0 00        		.byte	0
 2489 0bd1 00        		.byte	0
 2490 0bd2 27        		.uleb128 0x27
 2491 0bd3 0000 0000 		.long	.LASF140
 2492 0bd7 6E        		.byte	0x6e
 2493 0bd8 0000 0000 		.long	.LFB6
 2494 0bdc 0000 0034 		.long	.LFE6-.LFB6
 2495 0be0 01        		.uleb128 0x1
 2496 0be1 9C        		.byte	0x9c
 2497 0be2 0000 0C47 		.long	0xc47
 2498 0be6 15        		.uleb128 0x15
 2499 0be7 0000 0B65 		.long	0xb65
 2500 0beb 0000 0000 		.long	.LBI34
 2501 0bef 02        		.byte	.LVU139
 2502 0bf0 0000 0000 		.long	.LBB34
 2503 0bf4 0000 0022 		.long	.LBE34-.LBB34
 2504 0bf8 70        		.byte	0x70
 2505 0bf9 0F        		.byte	0xf
 2506 0bfa 0000 0C34 		.long	0xc34
 2507 0bfe 0D        		.uleb128 0xd
 2508 0bff 0000 0B74 		.long	0xb74
 2509 0c03 0000 0000 		.long	.LLST13
 2510 0c07 0000 0000 		.long	.LVUS13
 2511 0c0b 04        		.uleb128 0x4
 2512 0c0c 0000 0B7F 		.long	0xb7f
 2513 0c10 0000 0000 		.long	.LLST14
 2514 0c14 0000 0000 		.long	.LVUS14
 2515 0c18 0E        		.uleb128 0xe
 2516 0c19 0000 0B8A 		.long	0xb8a
 2517 0c1d 0000 0000 		.long	.LBB36


 2518 0c21 0000 001A 		.long	.LBE36-.LBB36
 2519 0c25 04        		.uleb128 0x4
 2520 0c26 0000 0B8B 		.long	0xb8b
 2521 0c2a 0000 0000 		.long	.LLST15
 2522 0c2e 0000 0000 		.long	.LVUS15
 2523 0c32 00        		.byte	0
 2524 0c33 00        		.byte	0
 2525 0c34 22        		.uleb128 0x22
 2526 0c35 0000 0000 		.long	.LVL37
 2527 0c39 0000 0949 		.long	0x949
 2528 0c3d 19        		.uleb128 0x19
 2529 0c3e 0000 0000 		.long	.LVL38
 2530 0c42 0000 093D 		.long	0x93d
 2531 0c46 00        		.byte	0
 2532 0c47 23        		.uleb128 0x23
 2533 0c48 0000 0000 		.long	.LASF136
 2534 0c4c 55        		.byte	0x55
 2535 0c4d 07        		.byte	0x7
 2536 0c4e 0000 0103 		.long	0x103
 2537 0c52 0000 0C77 		.long	0xc77
 2538 0c56 26        		.uleb128 0x26
 2539 0c57 6964 00   		.string	"id"
 2540 0c5a 55        		.byte	0x55
 2541 0c5b 1F        		.byte	0x1f
 2542 0c5c 0000 0707 		.long	0x707
 2543 0c60 11        		.uleb128 0x11
 2544 0c61 0000 0000 		.long	.LASF137
 2545 0c65 57        		.byte	0x57
 2546 0c66 08        		.byte	0x8
 2547 0c67 0000 0C77 		.long	0xc77
 2548 0c6b 11        		.uleb128 0x11
 2549 0c6c 0000 0000 		.long	.LASF138
 2550 0c70 5C        		.byte	0x5c
 2551 0c71 17        		.byte	0x17
 2552 0c72 0000 0C7C 		.long	0xc7c
 2553 0c76 00        		.byte	0
 2554 0c77 03        		.uleb128 0x3
 2555 0c78 0000 0085 		.long	0x85
 2556 0c7c 03        		.uleb128 0x3
 2557 0c7d 0000 003B 		.long	0x3b
 2558 0c81 18        		.uleb128 0x18
 2559 0c82 0000 0000 		.long	.LASF139
 2560 0c86 3C        		.byte	0x3c
 2561 0c87 0000 0000 		.long	.LFB4
 2562 0c8b 0000 00D8 		.long	.LFE4-.LFB4
 2563 0c8f 01        		.uleb128 0x1
 2564 0c90 9C        		.byte	0x9c
 2565 0c91 0000 0D4B 		.long	0xd4b
 2566 0c95 10        		.uleb128 0x10
 2567 0c96 7000      		.string	"p"
 2568 0c98 3C        		.byte	0x3c
 2569 0c99 15        		.byte	0x15
 2570 0c9a 0000 0103 		.long	0x103
 2571 0c9e 02        		.uleb128 0x2
 2572 0c9f 91        		.byte	0x91
 2573 0ca0 00        		.sleb128 0
 2574 0ca1 3C        		.uleb128 0x3c


 2575 0ca2 6900      		.string	"i"
 2576 0ca4 01        		.byte	0x1
 2577 0ca5 3E        		.byte	0x3e
 2578 0ca6 10        		.byte	0x10
 2579 0ca7 0000 0707 		.long	0x707
 2580 0cab 3D        		.uleb128 0x3d
 2581 0cac 0000 0000 		.long	.LLRL2
 2582 0cb0 0000 0CC5 		.long	0xcc5
 2583 0cb4 1A        		.uleb128 0x1a
 2584 0cb5 6900      		.string	"i"
 2585 0cb7 3F        		.byte	0x3f
 2586 0cb8 0000 0085 		.long	0x85
 2587 0cbc 0000 0000 		.long	.LLST3
 2588 0cc0 0000 0000 		.long	.LVUS3
 2589 0cc4 00        		.byte	0
 2590 0cc5 15        		.uleb128 0x15
 2591 0cc6 0000 0C47 		.long	0xc47
 2592 0cca 0000 0000 		.long	.LBI26
 2593 0cce 01        		.byte	.LVU71
 2594 0ccf 0000 0000 		.long	.LBB26
 2595 0cd3 0000 0028 		.long	.LBE26-.LBB26
 2596 0cd7 49        		.byte	0x49
 2597 0cd8 22        		.byte	0x22
 2598 0cd9 0000 0D05 		.long	0xd05
 2599 0cdd 0D        		.uleb128 0xd
 2600 0cde 0000 0C56 		.long	0xc56
 2601 0ce2 0000 0000 		.long	.LLST4
 2602 0ce6 0000 0000 		.long	.LVUS4
 2603 0cea 04        		.uleb128 0x4
 2604 0ceb 0000 0C60 		.long	0xc60
 2605 0cef 0000 0000 		.long	.LLST5
 2606 0cf3 0000 0000 		.long	.LVUS5
 2607 0cf7 04        		.uleb128 0x4
 2608 0cf8 0000 0C6B 		.long	0xc6b
 2609 0cfc 0000 0000 		.long	.LLST6
 2610 0d00 0000 0000 		.long	.LVUS6
 2611 0d04 00        		.byte	0
 2612 0d05 20        		.uleb128 0x20
 2613 0d06 0000 0BA2 		.long	0xba2
 2614 0d0a 0000 0000 		.long	.LBI28
 2615 0d0e 01        		.byte	.LVU88
 2616 0d0f 0000 0000 		.long	.LLRL7
 2617 0d13 4A        		.byte	0x4a
 2618 0d14 0D        		.uleb128 0xd
 2619 0d15 0000 0BBA 		.long	0xbba
 2620 0d19 0000 0000 		.long	.LLST8
 2621 0d1d 0000 0000 		.long	.LVUS8
 2622 0d21 0D        		.uleb128 0xd
 2623 0d22 0000 0BAF 		.long	0xbaf
 2624 0d26 0000 0000 		.long	.LLST9
 2625 0d2a 0000 0000 		.long	.LVUS9
 2626 0d2e 0E        		.uleb128 0xe
 2627 0d2f 0000 0BC4 		.long	0xbc4
 2628 0d33 0000 0000 		.long	.LBB30
 2629 0d37 0000 0040 		.long	.LBE30-.LBB30
 2630 0d3b 04        		.uleb128 0x4
 2631 0d3c 0000 0BC5 		.long	0xbc5


 2632 0d40 0000 0000 		.long	.LLST10
 2633 0d44 0000 0000 		.long	.LVUS10
 2634 0d48 00        		.byte	0
 2635 0d49 00        		.byte	0
 2636 0d4a 00        		.byte	0
 2637 0d4b 27        		.uleb128 0x27
 2638 0d4c 0000 0000 		.long	.LASF141
 2639 0d50 1A        		.byte	0x1a
 2640 0d51 0000 0000 		.long	.LFB3
 2641 0d55 0000 0072 		.long	.LFE3-.LFB3
 2642 0d59 01        		.uleb128 0x1
 2643 0d5a 9C        		.byte	0x9c
 2644 0d5b 0000 0D98 		.long	0xd98
 2645 0d5f 3E        		.uleb128 0x3e
 2646 0d60 0000 0000 		.long	.LBB23
 2647 0d64 0000 0024 		.long	.LBE23-.LBB23
 2648 0d68 0000 0D7D 		.long	0xd7d
 2649 0d6c 1A        		.uleb128 0x1a
 2650 0d6d 6900      		.string	"i"
 2651 0d6f 1D        		.byte	0x1d
 2652 0d70 0000 0085 		.long	0x85
 2653 0d74 0000 0000 		.long	.LLST0
 2654 0d78 0000 0000 		.long	.LVUS0
 2655 0d7c 00        		.byte	0
 2656 0d7d 3F        		.uleb128 0x3f
 2657 0d7e 0000 0000 		.long	.LBB24
 2658 0d82 0000 003E 		.long	.LBE24-.LBB24
 2659 0d86 1A        		.uleb128 0x1a
 2660 0d87 6900      		.string	"i"
 2661 0d89 2D        		.byte	0x2d
 2662 0d8a 0000 0085 		.long	0x85
 2663 0d8e 0000 0000 		.long	.LLST1
 2664 0d92 0000 0000 		.long	.LVUS1
 2665 0d96 00        		.byte	0
 2666 0d97 00        		.byte	0
 2667 0d98 1B        		.uleb128 0x1b
 2668 0d99 0000 0C47 		.long	0xc47
 2669 0d9d 0000 0000 		.long	.LFB5
 2670 0da1 0000 0042 		.long	.LFE5-.LFB5
 2671 0da5 01        		.uleb128 0x1
 2672 0da6 9C        		.byte	0x9c
 2673 0da7 0000 0DCE 		.long	0xdce
 2674 0dab 16        		.uleb128 0x16
 2675 0dac 0000 0C56 		.long	0xc56
 2676 0db0 02        		.uleb128 0x2
 2677 0db1 91        		.byte	0x91
 2678 0db2 00        		.sleb128 0
 2679 0db3 04        		.uleb128 0x4
 2680 0db4 0000 0C60 		.long	0xc60
 2681 0db8 0000 0000 		.long	.LLST11
 2682 0dbc 0000 0000 		.long	.LVUS11
 2683 0dc0 04        		.uleb128 0x4
 2684 0dc1 0000 0C6B 		.long	0xc6b
 2685 0dc5 0000 0000 		.long	.LLST12
 2686 0dc9 0000 0000 		.long	.LVUS12
 2687 0dcd 00        		.byte	0
 2688 0dce 1B        		.uleb128 0x1b


 2689 0dcf 0000 0BA2 		.long	0xba2
 2690 0dd3 0000 0000 		.long	.LFB7
 2691 0dd7 0000 0058 		.long	.LFE7-.LFB7
 2692 0ddb 01        		.uleb128 0x1
 2693 0ddc 9C        		.byte	0x9c
 2694 0ddd 0000 0E0D 		.long	0xe0d
 2695 0de1 16        		.uleb128 0x16
 2696 0de2 0000 0BAF 		.long	0xbaf
 2697 0de6 02        		.uleb128 0x2
 2698 0de7 91        		.byte	0x91
 2699 0de8 00        		.sleb128 0
 2700 0de9 16        		.uleb128 0x16
 2701 0dea 0000 0BBA 		.long	0xbba
 2702 0dee 02        		.uleb128 0x2
 2703 0def 91        		.byte	0x91
 2704 0df0 04        		.sleb128 4
 2705 0df1 0E        		.uleb128 0xe
 2706 0df2 0000 0BC4 		.long	0xbc4
 2707 0df6 0000 0000 		.long	.LBB37
 2708 0dfa 0000 0048 		.long	.LBE37-.LBB37
 2709 0dfe 04        		.uleb128 0x4
 2710 0dff 0000 0BC5 		.long	0xbc5
 2711 0e03 0000 0000 		.long	.LLST16
 2712 0e07 0000 0000 		.long	.LVUS16
 2713 0e0b 00        		.byte	0
 2714 0e0c 00        		.byte	0
 2715 0e0d 1B        		.uleb128 0x1b
 2716 0e0e 0000 0B65 		.long	0xb65
 2717 0e12 0000 0000 		.long	.LFB8
 2718 0e16 0000 0020 		.long	.LFE8-.LFB8
 2719 0e1a 01        		.uleb128 0x1
 2720 0e1b 9C        		.byte	0x9c
 2721 0e1c 0000 0E51 		.long	0xe51
 2722 0e20 16        		.uleb128 0x16
 2723 0e21 0000 0B74 		.long	0xb74
 2724 0e25 02        		.uleb128 0x2
 2725 0e26 91        		.byte	0x91
 2726 0e27 00        		.sleb128 0
 2727 0e28 04        		.uleb128 0x4
 2728 0e29 0000 0B7F 		.long	0xb7f
 2729 0e2d 0000 0000 		.long	.LLST17
 2730 0e31 0000 0000 		.long	.LVUS17
 2731 0e35 0E        		.uleb128 0xe
 2732 0e36 0000 0B8A 		.long	0xb8a
 2733 0e3a 0000 0000 		.long	.LBB38
 2734 0e3e 0000 0016 		.long	.LBE38-.LBB38
 2735 0e42 04        		.uleb128 0x4
 2736 0e43 0000 0B8B 		.long	0xb8b
 2737 0e47 0000 0000 		.long	.LLST18
 2738 0e4b 0000 0000 		.long	.LVUS18
 2739 0e4f 00        		.byte	0
 2740 0e50 00        		.byte	0
 2741 0e51 40        		.uleb128 0x40
 2742 0e52 0000 0B5C 		.long	0xb5c
 2743 0e56 0000 0000 		.long	.LFB9
 2744 0e5a 0000 002E 		.long	.LFE9-.LFB9
 2745 0e5e 01        		.uleb128 0x1


 2746 0e5f 9C        		.byte	0x9c
 2747 0e60 21        		.uleb128 0x21
 2748 0e61 0000 0B65 		.long	0xb65
 2749 0e65 0000 0000 		.long	.LBI42
 2750 0e69 02        		.byte	.LVU199
 2751 0e6a 0000 0000 		.long	.LBB42
 2752 0e6e 0000 0022 		.long	.LBE42-.LBB42
 2753 0e72 B2        		.byte	0xb2
 2754 0e73 0D        		.uleb128 0xd
 2755 0e74 0000 0B74 		.long	0xb74
 2756 0e78 0000 0000 		.long	.LLST19
 2757 0e7c 0000 0000 		.long	.LVUS19
 2758 0e80 04        		.uleb128 0x4
 2759 0e81 0000 0B7F 		.long	0xb7f
 2760 0e85 0000 0000 		.long	.LLST20
 2761 0e89 0000 0000 		.long	.LVUS20
 2762 0e8d 0E        		.uleb128 0xe
 2763 0e8e 0000 0B8A 		.long	0xb8a
 2764 0e92 0000 0000 		.long	.LBB44
 2765 0e96 0000 001A 		.long	.LBE44-.LBB44
 2766 0e9a 04        		.uleb128 0x4
 2767 0e9b 0000 0B8B 		.long	0xb8b
 2768 0e9f 0000 0000 		.long	.LLST21
 2769 0ea3 0000 0000 		.long	.LVUS21
 2770 0ea7 00        		.byte	0
 2771 0ea8 00        		.byte	0
 2772 0ea9 00        		.byte	0
 2773 0eaa 00        		.byte	0
 2774               		.section	.debug_abbrev,"",@progbits
 2775               	.Ldebug_abbrev0:
 2776 0000 01        		.uleb128 0x1
 2777 0001 0D        		.uleb128 0xd
 2778 0002 00        		.byte	0
 2779 0003 03        		.uleb128 0x3
 2780 0004 0E        		.uleb128 0xe
 2781 0005 3A        		.uleb128 0x3a
 2782 0006 0B        		.uleb128 0xb
 2783 0007 3B        		.uleb128 0x3b
 2784 0008 0B        		.uleb128 0xb
 2785 0009 39        		.uleb128 0x39
 2786 000a 0B        		.uleb128 0xb
 2787 000b 49        		.uleb128 0x49
 2788 000c 13        		.uleb128 0x13
 2789 000d 38        		.uleb128 0x38
 2790 000e 0B        		.uleb128 0xb
 2791 000f 00        		.byte	0
 2792 0010 00        		.byte	0
 2793 0011 02        		.uleb128 0x2
 2794 0012 0D        		.uleb128 0xd
 2795 0013 00        		.byte	0
 2796 0014 03        		.uleb128 0x3
 2797 0015 0E        		.uleb128 0xe
 2798 0016 3A        		.uleb128 0x3a
 2799 0017 21        		.uleb128 0x21
 2800 0018 04        		.sleb128 4
 2801 0019 3B        		.uleb128 0x3b
 2802 001a 05        		.uleb128 0x5


 2803 001b 39        		.uleb128 0x39
 2804 001c 0B        		.uleb128 0xb
 2805 001d 49        		.uleb128 0x49
 2806 001e 13        		.uleb128 0x13
 2807 001f 38        		.uleb128 0x38
 2808 0020 0B        		.uleb128 0xb
 2809 0021 00        		.byte	0
 2810 0022 00        		.byte	0
 2811 0023 03        		.uleb128 0x3
 2812 0024 0F        		.uleb128 0xf
 2813 0025 00        		.byte	0
 2814 0026 0B        		.uleb128 0xb
 2815 0027 21        		.uleb128 0x21
 2816 0028 04        		.sleb128 4
 2817 0029 49        		.uleb128 0x49
 2818 002a 13        		.uleb128 0x13
 2819 002b 00        		.byte	0
 2820 002c 00        		.byte	0
 2821 002d 04        		.uleb128 0x4
 2822 002e 34        		.uleb128 0x34
 2823 002f 00        		.byte	0
 2824 0030 31        		.uleb128 0x31
 2825 0031 13        		.uleb128 0x13
 2826 0032 02        		.uleb128 0x2
 2827 0033 17        		.uleb128 0x17
 2828 0034 B742      		.uleb128 0x2137
 2829 0036 17        		.uleb128 0x17
 2830 0037 00        		.byte	0
 2831 0038 00        		.byte	0
 2832 0039 05        		.uleb128 0x5
 2833 003a 05        		.uleb128 0x5
 2834 003b 00        		.byte	0
 2835 003c 49        		.uleb128 0x49
 2836 003d 13        		.uleb128 0x13
 2837 003e 00        		.byte	0
 2838 003f 00        		.byte	0
 2839 0040 06        		.uleb128 0x6
 2840 0041 01        		.uleb128 0x1
 2841 0042 01        		.byte	0x1
 2842 0043 49        		.uleb128 0x49
 2843 0044 13        		.uleb128 0x13
 2844 0045 01        		.uleb128 0x1
 2845 0046 13        		.uleb128 0x13
 2846 0047 00        		.byte	0
 2847 0048 00        		.byte	0
 2848 0049 07        		.uleb128 0x7
 2849 004a 16        		.uleb128 0x16
 2850 004b 00        		.byte	0
 2851 004c 03        		.uleb128 0x3
 2852 004d 0E        		.uleb128 0xe
 2853 004e 3A        		.uleb128 0x3a
 2854 004f 0B        		.uleb128 0xb
 2855 0050 3B        		.uleb128 0x3b
 2856 0051 0B        		.uleb128 0xb
 2857 0052 39        		.uleb128 0x39
 2858 0053 0B        		.uleb128 0xb
 2859 0054 49        		.uleb128 0x49


 2860 0055 13        		.uleb128 0x13
 2861 0056 00        		.byte	0
 2862 0057 00        		.byte	0
 2863 0058 08        		.uleb128 0x8
 2864 0059 21        		.uleb128 0x21
 2865 005a 00        		.byte	0
 2866 005b 49        		.uleb128 0x49
 2867 005c 13        		.uleb128 0x13
 2868 005d 2F        		.uleb128 0x2f
 2869 005e 0B        		.uleb128 0xb
 2870 005f 00        		.byte	0
 2871 0060 00        		.byte	0
 2872 0061 09        		.uleb128 0x9
 2873 0062 24        		.uleb128 0x24
 2874 0063 00        		.byte	0
 2875 0064 0B        		.uleb128 0xb
 2876 0065 0B        		.uleb128 0xb
 2877 0066 3E        		.uleb128 0x3e
 2878 0067 0B        		.uleb128 0xb
 2879 0068 03        		.uleb128 0x3
 2880 0069 0E        		.uleb128 0xe
 2881 006a 00        		.byte	0
 2882 006b 00        		.byte	0
 2883 006c 0A        		.uleb128 0xa
 2884 006d 0D        		.uleb128 0xd
 2885 006e 00        		.byte	0
 2886 006f 03        		.uleb128 0x3
 2887 0070 08        		.uleb128 0x8
 2888 0071 3A        		.uleb128 0x3a
 2889 0072 0B        		.uleb128 0xb
 2890 0073 3B        		.uleb128 0x3b
 2891 0074 0B        		.uleb128 0xb
 2892 0075 39        		.uleb128 0x39
 2893 0076 0B        		.uleb128 0xb
 2894 0077 49        		.uleb128 0x49
 2895 0078 13        		.uleb128 0x13
 2896 0079 38        		.uleb128 0x38
 2897 007a 0B        		.uleb128 0xb
 2898 007b 00        		.byte	0
 2899 007c 00        		.byte	0
 2900 007d 0B        		.uleb128 0xb
 2901 007e 34        		.uleb128 0x34
 2902 007f 00        		.byte	0
 2903 0080 03        		.uleb128 0x3
 2904 0081 0E        		.uleb128 0xe
 2905 0082 3A        		.uleb128 0x3a
 2906 0083 21        		.uleb128 0x21
 2907 0084 07        		.sleb128 7
 2908 0085 3B        		.uleb128 0x3b
 2909 0086 0B        		.uleb128 0xb
 2910 0087 39        		.uleb128 0x39
 2911 0088 0B        		.uleb128 0xb
 2912 0089 49        		.uleb128 0x49
 2913 008a 13        		.uleb128 0x13
 2914 008b 3F        		.uleb128 0x3f
 2915 008c 19        		.uleb128 0x19
 2916 008d 3C        		.uleb128 0x3c


 2917 008e 19        		.uleb128 0x19
 2918 008f 00        		.byte	0
 2919 0090 00        		.byte	0
 2920 0091 0C        		.uleb128 0xc
 2921 0092 34        		.uleb128 0x34
 2922 0093 00        		.byte	0
 2923 0094 47        		.uleb128 0x47
 2924 0095 13        		.uleb128 0x13
 2925 0096 3A        		.uleb128 0x3a
 2926 0097 21        		.uleb128 0x21
 2927 0098 01        		.sleb128 1
 2928 0099 3B        		.uleb128 0x3b
 2929 009a 0B        		.uleb128 0xb
 2930 009b 39        		.uleb128 0x39
 2931 009c 0B        		.uleb128 0xb
 2932 009d 02        		.uleb128 0x2
 2933 009e 18        		.uleb128 0x18
 2934 009f 00        		.byte	0
 2935 00a0 00        		.byte	0
 2936 00a1 0D        		.uleb128 0xd
 2937 00a2 05        		.uleb128 0x5
 2938 00a3 00        		.byte	0
 2939 00a4 31        		.uleb128 0x31
 2940 00a5 13        		.uleb128 0x13
 2941 00a6 02        		.uleb128 0x2
 2942 00a7 17        		.uleb128 0x17
 2943 00a8 B742      		.uleb128 0x2137
 2944 00aa 17        		.uleb128 0x17
 2945 00ab 00        		.byte	0
 2946 00ac 00        		.byte	0
 2947 00ad 0E        		.uleb128 0xe
 2948 00ae 0B        		.uleb128 0xb
 2949 00af 01        		.byte	0x1
 2950 00b0 31        		.uleb128 0x31
 2951 00b1 13        		.uleb128 0x13
 2952 00b2 11        		.uleb128 0x11
 2953 00b3 01        		.uleb128 0x1
 2954 00b4 12        		.uleb128 0x12
 2955 00b5 06        		.uleb128 0x6
 2956 00b6 00        		.byte	0
 2957 00b7 00        		.byte	0
 2958 00b8 0F        		.uleb128 0xf
 2959 00b9 18        		.uleb128 0x18
 2960 00ba 00        		.byte	0
 2961 00bb 00        		.byte	0
 2962 00bc 00        		.byte	0
 2963 00bd 10        		.uleb128 0x10
 2964 00be 05        		.uleb128 0x5
 2965 00bf 00        		.byte	0
 2966 00c0 03        		.uleb128 0x3
 2967 00c1 08        		.uleb128 0x8
 2968 00c2 3A        		.uleb128 0x3a
 2969 00c3 21        		.uleb128 0x21
 2970 00c4 01        		.sleb128 1
 2971 00c5 3B        		.uleb128 0x3b
 2972 00c6 0B        		.uleb128 0xb
 2973 00c7 39        		.uleb128 0x39


 2974 00c8 0B        		.uleb128 0xb
 2975 00c9 49        		.uleb128 0x49
 2976 00ca 13        		.uleb128 0x13
 2977 00cb 02        		.uleb128 0x2
 2978 00cc 18        		.uleb128 0x18
 2979 00cd 00        		.byte	0
 2980 00ce 00        		.byte	0
 2981 00cf 11        		.uleb128 0x11
 2982 00d0 34        		.uleb128 0x34
 2983 00d1 00        		.byte	0
 2984 00d2 03        		.uleb128 0x3
 2985 00d3 0E        		.uleb128 0xe
 2986 00d4 3A        		.uleb128 0x3a
 2987 00d5 21        		.uleb128 0x21
 2988 00d6 01        		.sleb128 1
 2989 00d7 3B        		.uleb128 0x3b
 2990 00d8 0B        		.uleb128 0xb
 2991 00d9 39        		.uleb128 0x39
 2992 00da 0B        		.uleb128 0xb
 2993 00db 49        		.uleb128 0x49
 2994 00dc 13        		.uleb128 0x13
 2995 00dd 00        		.byte	0
 2996 00de 00        		.byte	0
 2997 00df 12        		.uleb128 0x12
 2998 00e0 13        		.uleb128 0x13
 2999 00e1 01        		.byte	0x1
 3000 00e2 03        		.uleb128 0x3
 3001 00e3 0E        		.uleb128 0xe
 3002 00e4 0B        		.uleb128 0xb
 3003 00e5 0B        		.uleb128 0xb
 3004 00e6 3A        		.uleb128 0x3a
 3005 00e7 21        		.uleb128 0x21
 3006 00e8 04        		.sleb128 4
 3007 00e9 3B        		.uleb128 0x3b
 3008 00ea 0B        		.uleb128 0xb
 3009 00eb 39        		.uleb128 0x39
 3010 00ec 21        		.uleb128 0x21
 3011 00ed 08        		.sleb128 8
 3012 00ee 01        		.uleb128 0x1
 3013 00ef 13        		.uleb128 0x13
 3014 00f0 00        		.byte	0
 3015 00f1 00        		.byte	0
 3016 00f2 13        		.uleb128 0x13
 3017 00f3 15        		.uleb128 0x15
 3018 00f4 01        		.byte	0x1
 3019 00f5 27        		.uleb128 0x27
 3020 00f6 19        		.uleb128 0x19
 3021 00f7 49        		.uleb128 0x49
 3022 00f8 13        		.uleb128 0x13
 3023 00f9 01        		.uleb128 0x1
 3024 00fa 13        		.uleb128 0x13
 3025 00fb 00        		.byte	0
 3026 00fc 00        		.byte	0
 3027 00fd 14        		.uleb128 0x14
 3028 00fe 2E        		.uleb128 0x2e
 3029 00ff 01        		.byte	0x1
 3030 0100 3F        		.uleb128 0x3f


 3031 0101 19        		.uleb128 0x19
 3032 0102 03        		.uleb128 0x3
 3033 0103 0E        		.uleb128 0xe
 3034 0104 3A        		.uleb128 0x3a
 3035 0105 21        		.uleb128 0x21
 3036 0106 07        		.sleb128 7
 3037 0107 3B        		.uleb128 0x3b
 3038 0108 0B        		.uleb128 0xb
 3039 0109 39        		.uleb128 0x39
 3040 010a 21        		.uleb128 0x21
 3041 010b 0D        		.sleb128 13
 3042 010c 3C        		.uleb128 0x3c
 3043 010d 19        		.uleb128 0x19
 3044 010e 01        		.uleb128 0x1
 3045 010f 13        		.uleb128 0x13
 3046 0110 00        		.byte	0
 3047 0111 00        		.byte	0
 3048 0112 15        		.uleb128 0x15
 3049 0113 1D        		.uleb128 0x1d
 3050 0114 01        		.byte	0x1
 3051 0115 31        		.uleb128 0x31
 3052 0116 13        		.uleb128 0x13
 3053 0117 52        		.uleb128 0x52
 3054 0118 01        		.uleb128 0x1
 3055 0119 B842      		.uleb128 0x2138
 3056 011b 0B        		.uleb128 0xb
 3057 011c 11        		.uleb128 0x11
 3058 011d 01        		.uleb128 0x1
 3059 011e 12        		.uleb128 0x12
 3060 011f 06        		.uleb128 0x6
 3061 0120 58        		.uleb128 0x58
 3062 0121 21        		.uleb128 0x21
 3063 0122 01        		.sleb128 1
 3064 0123 59        		.uleb128 0x59
 3065 0124 0B        		.uleb128 0xb
 3066 0125 57        		.uleb128 0x57
 3067 0126 0B        		.uleb128 0xb
 3068 0127 01        		.uleb128 0x1
 3069 0128 13        		.uleb128 0x13
 3070 0129 00        		.byte	0
 3071 012a 00        		.byte	0
 3072 012b 16        		.uleb128 0x16
 3073 012c 05        		.uleb128 0x5
 3074 012d 00        		.byte	0
 3075 012e 31        		.uleb128 0x31
 3076 012f 13        		.uleb128 0x13
 3077 0130 02        		.uleb128 0x2
 3078 0131 18        		.uleb128 0x18
 3079 0132 00        		.byte	0
 3080 0133 00        		.byte	0
 3081 0134 17        		.uleb128 0x17
 3082 0135 13        		.uleb128 0x13
 3083 0136 01        		.byte	0x1
 3084 0137 0B        		.uleb128 0xb
 3085 0138 0B        		.uleb128 0xb
 3086 0139 3A        		.uleb128 0x3a
 3087 013a 0B        		.uleb128 0xb


 3088 013b 3B        		.uleb128 0x3b
 3089 013c 0B        		.uleb128 0xb
 3090 013d 39        		.uleb128 0x39
 3091 013e 21        		.uleb128 0x21
 3092 013f 09        		.sleb128 9
 3093 0140 01        		.uleb128 0x1
 3094 0141 13        		.uleb128 0x13
 3095 0142 00        		.byte	0
 3096 0143 00        		.byte	0
 3097 0144 18        		.uleb128 0x18
 3098 0145 2E        		.uleb128 0x2e
 3099 0146 01        		.byte	0x1
 3100 0147 3F        		.uleb128 0x3f
 3101 0148 19        		.uleb128 0x19
 3102 0149 03        		.uleb128 0x3
 3103 014a 0E        		.uleb128 0xe
 3104 014b 3A        		.uleb128 0x3a
 3105 014c 21        		.uleb128 0x21
 3106 014d 01        		.sleb128 1
 3107 014e 3B        		.uleb128 0x3b
 3108 014f 0B        		.uleb128 0xb
 3109 0150 39        		.uleb128 0x39
 3110 0151 21        		.uleb128 0x21
 3111 0152 06        		.sleb128 6
 3112 0153 27        		.uleb128 0x27
 3113 0154 19        		.uleb128 0x19
 3114 0155 11        		.uleb128 0x11
 3115 0156 01        		.uleb128 0x1
 3116 0157 12        		.uleb128 0x12
 3117 0158 06        		.uleb128 0x6
 3118 0159 40        		.uleb128 0x40
 3119 015a 18        		.uleb128 0x18
 3120 015b 7A        		.uleb128 0x7a
 3121 015c 19        		.uleb128 0x19
 3122 015d 01        		.uleb128 0x1
 3123 015e 13        		.uleb128 0x13
 3124 015f 00        		.byte	0
 3125 0160 00        		.byte	0
 3126 0161 19        		.uleb128 0x19
 3127 0162 48        		.uleb128 0x48
 3128 0163 00        		.byte	0
 3129 0164 7D        		.uleb128 0x7d
 3130 0165 01        		.uleb128 0x1
 3131 0166 8201      		.uleb128 0x82
 3132 0168 19        		.uleb128 0x19
 3133 0169 7F        		.uleb128 0x7f
 3134 016a 13        		.uleb128 0x13
 3135 016b 00        		.byte	0
 3136 016c 00        		.byte	0
 3137 016d 1A        		.uleb128 0x1a
 3138 016e 34        		.uleb128 0x34
 3139 016f 00        		.byte	0
 3140 0170 03        		.uleb128 0x3
 3141 0171 08        		.uleb128 0x8
 3142 0172 3A        		.uleb128 0x3a
 3143 0173 21        		.uleb128 0x21
 3144 0174 01        		.sleb128 1


 3145 0175 3B        		.uleb128 0x3b
 3146 0176 0B        		.uleb128 0xb
 3147 0177 39        		.uleb128 0x39
 3148 0178 21        		.uleb128 0x21
 3149 0179 0C        		.sleb128 12
 3150 017a 49        		.uleb128 0x49
 3151 017b 13        		.uleb128 0x13
 3152 017c 02        		.uleb128 0x2
 3153 017d 17        		.uleb128 0x17
 3154 017e B742      		.uleb128 0x2137
 3155 0180 17        		.uleb128 0x17
 3156 0181 00        		.byte	0
 3157 0182 00        		.byte	0
 3158 0183 1B        		.uleb128 0x1b
 3159 0184 2E        		.uleb128 0x2e
 3160 0185 01        		.byte	0x1
 3161 0186 31        		.uleb128 0x31
 3162 0187 13        		.uleb128 0x13
 3163 0188 11        		.uleb128 0x11
 3164 0189 01        		.uleb128 0x1
 3165 018a 12        		.uleb128 0x12
 3166 018b 06        		.uleb128 0x6
 3167 018c 40        		.uleb128 0x40
 3168 018d 18        		.uleb128 0x18
 3169 018e 7A        		.uleb128 0x7a
 3170 018f 19        		.uleb128 0x19
 3171 0190 01        		.uleb128 0x1
 3172 0191 13        		.uleb128 0x13
 3173 0192 00        		.byte	0
 3174 0193 00        		.byte	0
 3175 0194 1C        		.uleb128 0x1c
 3176 0195 16        		.uleb128 0x16
 3177 0196 00        		.byte	0
 3178 0197 03        		.uleb128 0x3
 3179 0198 0E        		.uleb128 0xe
 3180 0199 3A        		.uleb128 0x3a
 3181 019a 0B        		.uleb128 0xb
 3182 019b 3B        		.uleb128 0x3b
 3183 019c 05        		.uleb128 0x5
 3184 019d 39        		.uleb128 0x39
 3185 019e 0B        		.uleb128 0xb
 3186 019f 49        		.uleb128 0x49
 3187 01a0 13        		.uleb128 0x13
 3188 01a1 00        		.byte	0
 3189 01a2 00        		.byte	0
 3190 01a3 1D        		.uleb128 0x1d
 3191 01a4 0D        		.uleb128 0xd
 3192 01a5 00        		.byte	0
 3193 01a6 03        		.uleb128 0x3
 3194 01a7 0E        		.uleb128 0xe
 3195 01a8 3A        		.uleb128 0x3a
 3196 01a9 21        		.uleb128 0x21
 3197 01aa 03        		.sleb128 3
 3198 01ab 3B        		.uleb128 0x3b
 3199 01ac 0B        		.uleb128 0xb
 3200 01ad 39        		.uleb128 0x39
 3201 01ae 0B        		.uleb128 0xb


 3202 01af 49        		.uleb128 0x49
 3203 01b0 13        		.uleb128 0x13
 3204 01b1 00        		.byte	0
 3205 01b2 00        		.byte	0
 3206 01b3 1E        		.uleb128 0x1e
 3207 01b4 15        		.uleb128 0x15
 3208 01b5 01        		.byte	0x1
 3209 01b6 27        		.uleb128 0x27
 3210 01b7 19        		.uleb128 0x19
 3211 01b8 01        		.uleb128 0x1
 3212 01b9 13        		.uleb128 0x13
 3213 01ba 00        		.byte	0
 3214 01bb 00        		.byte	0
 3215 01bc 1F        		.uleb128 0x1f
 3216 01bd 2E        		.uleb128 0x2e
 3217 01be 01        		.byte	0x1
 3218 01bf 3F        		.uleb128 0x3f
 3219 01c0 19        		.uleb128 0x19
 3220 01c1 03        		.uleb128 0x3
 3221 01c2 0E        		.uleb128 0xe
 3222 01c3 3A        		.uleb128 0x3a
 3223 01c4 21        		.uleb128 0x21
 3224 01c5 01        		.sleb128 1
 3225 01c6 3B        		.uleb128 0x3b
 3226 01c7 0B        		.uleb128 0xb
 3227 01c8 39        		.uleb128 0x39
 3228 01c9 21        		.uleb128 0x21
 3229 01ca 05        		.sleb128 5
 3230 01cb 27        		.uleb128 0x27
 3231 01cc 19        		.uleb128 0x19
 3232 01cd 49        		.uleb128 0x49
 3233 01ce 13        		.uleb128 0x13
 3234 01cf 11        		.uleb128 0x11
 3235 01d0 01        		.uleb128 0x1
 3236 01d1 12        		.uleb128 0x12
 3237 01d2 06        		.uleb128 0x6
 3238 01d3 40        		.uleb128 0x40
 3239 01d4 18        		.uleb128 0x18
 3240 01d5 7A        		.uleb128 0x7a
 3241 01d6 19        		.uleb128 0x19
 3242 01d7 01        		.uleb128 0x1
 3243 01d8 13        		.uleb128 0x13
 3244 01d9 00        		.byte	0
 3245 01da 00        		.byte	0
 3246 01db 20        		.uleb128 0x20
 3247 01dc 1D        		.uleb128 0x1d
 3248 01dd 01        		.byte	0x1
 3249 01de 31        		.uleb128 0x31
 3250 01df 13        		.uleb128 0x13
 3251 01e0 52        		.uleb128 0x52
 3252 01e1 01        		.uleb128 0x1
 3253 01e2 B842      		.uleb128 0x2138
 3254 01e4 0B        		.uleb128 0xb
 3255 01e5 55        		.uleb128 0x55
 3256 01e6 17        		.uleb128 0x17
 3257 01e7 58        		.uleb128 0x58
 3258 01e8 21        		.uleb128 0x21


 3259 01e9 01        		.sleb128 1
 3260 01ea 59        		.uleb128 0x59
 3261 01eb 0B        		.uleb128 0xb
 3262 01ec 57        		.uleb128 0x57
 3263 01ed 21        		.uleb128 0x21
 3264 01ee 03        		.sleb128 3
 3265 01ef 00        		.byte	0
 3266 01f0 00        		.byte	0
 3267 01f1 21        		.uleb128 0x21
 3268 01f2 1D        		.uleb128 0x1d
 3269 01f3 01        		.byte	0x1
 3270 01f4 31        		.uleb128 0x31
 3271 01f5 13        		.uleb128 0x13
 3272 01f6 52        		.uleb128 0x52
 3273 01f7 01        		.uleb128 0x1
 3274 01f8 B842      		.uleb128 0x2138
 3275 01fa 0B        		.uleb128 0xb
 3276 01fb 11        		.uleb128 0x11
 3277 01fc 01        		.uleb128 0x1
 3278 01fd 12        		.uleb128 0x12
 3279 01fe 06        		.uleb128 0x6
 3280 01ff 58        		.uleb128 0x58
 3281 0200 21        		.uleb128 0x21
 3282 0201 01        		.sleb128 1
 3283 0202 59        		.uleb128 0x59
 3284 0203 0B        		.uleb128 0xb
 3285 0204 57        		.uleb128 0x57
 3286 0205 21        		.uleb128 0x21
 3287 0206 0F        		.sleb128 15
 3288 0207 00        		.byte	0
 3289 0208 00        		.byte	0
 3290 0209 22        		.uleb128 0x22
 3291 020a 48        		.uleb128 0x48
 3292 020b 00        		.byte	0
 3293 020c 7D        		.uleb128 0x7d
 3294 020d 01        		.uleb128 0x1
 3295 020e 7F        		.uleb128 0x7f
 3296 020f 13        		.uleb128 0x13
 3297 0210 00        		.byte	0
 3298 0211 00        		.byte	0
 3299 0212 23        		.uleb128 0x23
 3300 0213 2E        		.uleb128 0x2e
 3301 0214 01        		.byte	0x1
 3302 0215 3F        		.uleb128 0x3f
 3303 0216 19        		.uleb128 0x19
 3304 0217 03        		.uleb128 0x3
 3305 0218 0E        		.uleb128 0xe
 3306 0219 3A        		.uleb128 0x3a
 3307 021a 21        		.uleb128 0x21
 3308 021b 01        		.sleb128 1
 3309 021c 3B        		.uleb128 0x3b
 3310 021d 0B        		.uleb128 0xb
 3311 021e 39        		.uleb128 0x39
 3312 021f 0B        		.uleb128 0xb
 3313 0220 27        		.uleb128 0x27
 3314 0221 19        		.uleb128 0x19
 3315 0222 49        		.uleb128 0x49


 3316 0223 13        		.uleb128 0x13
 3317 0224 20        		.uleb128 0x20
 3318 0225 21        		.uleb128 0x21
 3319 0226 01        		.sleb128 1
 3320 0227 01        		.uleb128 0x1
 3321 0228 13        		.uleb128 0x13
 3322 0229 00        		.byte	0
 3323 022a 00        		.byte	0
 3324 022b 24        		.uleb128 0x24
 3325 022c 05        		.uleb128 0x5
 3326 022d 00        		.byte	0
 3327 022e 03        		.uleb128 0x3
 3328 022f 0E        		.uleb128 0xe
 3329 0230 3A        		.uleb128 0x3a
 3330 0231 21        		.uleb128 0x21
 3331 0232 01        		.sleb128 1
 3332 0233 3B        		.uleb128 0x3b
 3333 0234 0B        		.uleb128 0xb
 3334 0235 39        		.uleb128 0x39
 3335 0236 0B        		.uleb128 0xb
 3336 0237 49        		.uleb128 0x49
 3337 0238 13        		.uleb128 0x13
 3338 0239 00        		.byte	0
 3339 023a 00        		.byte	0
 3340 023b 25        		.uleb128 0x25
 3341 023c 0B        		.uleb128 0xb
 3342 023d 01        		.byte	0x1
 3343 023e 00        		.byte	0
 3344 023f 00        		.byte	0
 3345 0240 26        		.uleb128 0x26
 3346 0241 05        		.uleb128 0x5
 3347 0242 00        		.byte	0
 3348 0243 03        		.uleb128 0x3
 3349 0244 08        		.uleb128 0x8
 3350 0245 3A        		.uleb128 0x3a
 3351 0246 21        		.uleb128 0x21
 3352 0247 01        		.sleb128 1
 3353 0248 3B        		.uleb128 0x3b
 3354 0249 0B        		.uleb128 0xb
 3355 024a 39        		.uleb128 0x39
 3356 024b 0B        		.uleb128 0xb
 3357 024c 49        		.uleb128 0x49
 3358 024d 13        		.uleb128 0x13
 3359 024e 00        		.byte	0
 3360 024f 00        		.byte	0
 3361 0250 27        		.uleb128 0x27
 3362 0251 2E        		.uleb128 0x2e
 3363 0252 01        		.byte	0x1
 3364 0253 3F        		.uleb128 0x3f
 3365 0254 19        		.uleb128 0x19
 3366 0255 03        		.uleb128 0x3
 3367 0256 0E        		.uleb128 0xe
 3368 0257 3A        		.uleb128 0x3a
 3369 0258 21        		.uleb128 0x21
 3370 0259 01        		.sleb128 1
 3371 025a 3B        		.uleb128 0x3b
 3372 025b 0B        		.uleb128 0xb


 3373 025c 39        		.uleb128 0x39
 3374 025d 21        		.uleb128 0x21
 3375 025e 06        		.sleb128 6
 3376 025f 11        		.uleb128 0x11
 3377 0260 01        		.uleb128 0x1
 3378 0261 12        		.uleb128 0x12
 3379 0262 06        		.uleb128 0x6
 3380 0263 40        		.uleb128 0x40
 3381 0264 18        		.uleb128 0x18
 3382 0265 7A        		.uleb128 0x7a
 3383 0266 19        		.uleb128 0x19
 3384 0267 01        		.uleb128 0x1
 3385 0268 13        		.uleb128 0x13
 3386 0269 00        		.byte	0
 3387 026a 00        		.byte	0
 3388 026b 28        		.uleb128 0x28
 3389 026c 11        		.uleb128 0x11
 3390 026d 01        		.byte	0x1
 3391 026e 25        		.uleb128 0x25
 3392 026f 0E        		.uleb128 0xe
 3393 0270 13        		.uleb128 0x13
 3394 0271 0B        		.uleb128 0xb
 3395 0272 03        		.uleb128 0x3
 3396 0273 0E        		.uleb128 0xe
 3397 0274 1B        		.uleb128 0x1b
 3398 0275 0E        		.uleb128 0xe
 3399 0276 11        		.uleb128 0x11
 3400 0277 01        		.uleb128 0x1
 3401 0278 12        		.uleb128 0x12
 3402 0279 06        		.uleb128 0x6
 3403 027a 10        		.uleb128 0x10
 3404 027b 17        		.uleb128 0x17
 3405 027c 00        		.byte	0
 3406 027d 00        		.byte	0
 3407 027e 29        		.uleb128 0x29
 3408 027f 24        		.uleb128 0x24
 3409 0280 00        		.byte	0
 3410 0281 0B        		.uleb128 0xb
 3411 0282 0B        		.uleb128 0xb
 3412 0283 3E        		.uleb128 0x3e
 3413 0284 0B        		.uleb128 0xb
 3414 0285 03        		.uleb128 0x3
 3415 0286 08        		.uleb128 0x8
 3416 0287 00        		.byte	0
 3417 0288 00        		.byte	0
 3418 0289 2A        		.uleb128 0x2a
 3419 028a 17        		.uleb128 0x17
 3420 028b 01        		.byte	0x1
 3421 028c 0B        		.uleb128 0xb
 3422 028d 0B        		.uleb128 0xb
 3423 028e 3A        		.uleb128 0x3a
 3424 028f 0B        		.uleb128 0xb
 3425 0290 3B        		.uleb128 0x3b
 3426 0291 0B        		.uleb128 0xb
 3427 0292 39        		.uleb128 0x39
 3428 0293 0B        		.uleb128 0xb
 3429 0294 01        		.uleb128 0x1


 3430 0295 13        		.uleb128 0x13
 3431 0296 00        		.byte	0
 3432 0297 00        		.byte	0
 3433 0298 2B        		.uleb128 0x2b
 3434 0299 0F        		.uleb128 0xf
 3435 029a 00        		.byte	0
 3436 029b 0B        		.uleb128 0xb
 3437 029c 0B        		.uleb128 0xb
 3438 029d 00        		.byte	0
 3439 029e 00        		.byte	0
 3440 029f 2C        		.uleb128 0x2c
 3441 02a0 13        		.uleb128 0x13
 3442 02a1 01        		.byte	0x1
 3443 02a2 03        		.uleb128 0x3
 3444 02a3 0E        		.uleb128 0xe
 3445 02a4 0B        		.uleb128 0xb
 3446 02a5 05        		.uleb128 0x5
 3447 02a6 3A        		.uleb128 0x3a
 3448 02a7 0B        		.uleb128 0xb
 3449 02a8 3B        		.uleb128 0x3b
 3450 02a9 05        		.uleb128 0x5
 3451 02aa 39        		.uleb128 0x39
 3452 02ab 0B        		.uleb128 0xb
 3453 02ac 01        		.uleb128 0x1
 3454 02ad 13        		.uleb128 0x13
 3455 02ae 00        		.byte	0
 3456 02af 00        		.byte	0
 3457 02b0 2D        		.uleb128 0x2d
 3458 02b1 0D        		.uleb128 0xd
 3459 02b2 00        		.byte	0
 3460 02b3 03        		.uleb128 0x3
 3461 02b4 0E        		.uleb128 0xe
 3462 02b5 3A        		.uleb128 0x3a
 3463 02b6 0B        		.uleb128 0xb
 3464 02b7 3B        		.uleb128 0x3b
 3465 02b8 05        		.uleb128 0x5
 3466 02b9 39        		.uleb128 0x39
 3467 02ba 0B        		.uleb128 0xb
 3468 02bb 49        		.uleb128 0x49
 3469 02bc 13        		.uleb128 0x13
 3470 02bd 38        		.uleb128 0x38
 3471 02be 05        		.uleb128 0x5
 3472 02bf 00        		.byte	0
 3473 02c0 00        		.byte	0
 3474 02c1 2E        		.uleb128 0x2e
 3475 02c2 26        		.uleb128 0x26
 3476 02c3 00        		.byte	0
 3477 02c4 49        		.uleb128 0x49
 3478 02c5 13        		.uleb128 0x13
 3479 02c6 00        		.byte	0
 3480 02c7 00        		.byte	0
 3481 02c8 2F        		.uleb128 0x2f
 3482 02c9 13        		.uleb128 0x13
 3483 02ca 01        		.byte	0x1
 3484 02cb 03        		.uleb128 0x3
 3485 02cc 0E        		.uleb128 0xe
 3486 02cd 0B        		.uleb128 0xb


 3487 02ce 0B        		.uleb128 0xb
 3488 02cf 3A        		.uleb128 0x3a
 3489 02d0 0B        		.uleb128 0xb
 3490 02d1 3B        		.uleb128 0x3b
 3491 02d2 05        		.uleb128 0x5
 3492 02d3 39        		.uleb128 0x39
 3493 02d4 0B        		.uleb128 0xb
 3494 02d5 01        		.uleb128 0x1
 3495 02d6 13        		.uleb128 0x13
 3496 02d7 00        		.byte	0
 3497 02d8 00        		.byte	0
 3498 02d9 30        		.uleb128 0x30
 3499 02da 13        		.uleb128 0x13
 3500 02db 01        		.byte	0x1
 3501 02dc 0B        		.uleb128 0xb
 3502 02dd 0B        		.uleb128 0xb
 3503 02de 3A        		.uleb128 0x3a
 3504 02df 0B        		.uleb128 0xb
 3505 02e0 3B        		.uleb128 0x3b
 3506 02e1 05        		.uleb128 0x5
 3507 02e2 39        		.uleb128 0x39
 3508 02e3 0B        		.uleb128 0xb
 3509 02e4 01        		.uleb128 0x1
 3510 02e5 13        		.uleb128 0x13
 3511 02e6 00        		.byte	0
 3512 02e7 00        		.byte	0
 3513 02e8 31        		.uleb128 0x31
 3514 02e9 17        		.uleb128 0x17
 3515 02ea 01        		.byte	0x1
 3516 02eb 0B        		.uleb128 0xb
 3517 02ec 0B        		.uleb128 0xb
 3518 02ed 3A        		.uleb128 0x3a
 3519 02ee 0B        		.uleb128 0xb
 3520 02ef 3B        		.uleb128 0x3b
 3521 02f0 05        		.uleb128 0x5
 3522 02f1 39        		.uleb128 0x39
 3523 02f2 0B        		.uleb128 0xb
 3524 02f3 01        		.uleb128 0x1
 3525 02f4 13        		.uleb128 0x13
 3526 02f5 00        		.byte	0
 3527 02f6 00        		.byte	0
 3528 02f7 32        		.uleb128 0x32
 3529 02f8 0D        		.uleb128 0xd
 3530 02f9 00        		.byte	0
 3531 02fa 03        		.uleb128 0x3
 3532 02fb 0E        		.uleb128 0xe
 3533 02fc 3A        		.uleb128 0x3a
 3534 02fd 0B        		.uleb128 0xb
 3535 02fe 3B        		.uleb128 0x3b
 3536 02ff 05        		.uleb128 0x5
 3537 0300 39        		.uleb128 0x39
 3538 0301 0B        		.uleb128 0xb
 3539 0302 49        		.uleb128 0x49
 3540 0303 13        		.uleb128 0x13
 3541 0304 00        		.byte	0
 3542 0305 00        		.byte	0
 3543 0306 33        		.uleb128 0x33


 3544 0307 13        		.uleb128 0x13
 3545 0308 00        		.byte	0
 3546 0309 03        		.uleb128 0x3
 3547 030a 0E        		.uleb128 0xe
 3548 030b 3C        		.uleb128 0x3c
 3549 030c 19        		.uleb128 0x19
 3550 030d 00        		.byte	0
 3551 030e 00        		.byte	0
 3552 030f 34        		.uleb128 0x34
 3553 0310 15        		.uleb128 0x15
 3554 0311 01        		.byte	0x1
 3555 0312 01        		.uleb128 0x1
 3556 0313 13        		.uleb128 0x13
 3557 0314 00        		.byte	0
 3558 0315 00        		.byte	0
 3559 0316 35        		.uleb128 0x35
 3560 0317 13        		.uleb128 0x13
 3561 0318 01        		.byte	0x1
 3562 0319 0B        		.uleb128 0xb
 3563 031a 05        		.uleb128 0x5
 3564 031b 3A        		.uleb128 0x3a
 3565 031c 0B        		.uleb128 0xb
 3566 031d 3B        		.uleb128 0x3b
 3567 031e 0B        		.uleb128 0xb
 3568 031f 39        		.uleb128 0x39
 3569 0320 0B        		.uleb128 0xb
 3570 0321 01        		.uleb128 0x1
 3571 0322 13        		.uleb128 0x13
 3572 0323 00        		.byte	0
 3573 0324 00        		.byte	0
 3574 0325 36        		.uleb128 0x36
 3575 0326 0D        		.uleb128 0xd
 3576 0327 00        		.byte	0
 3577 0328 03        		.uleb128 0x3
 3578 0329 0E        		.uleb128 0xe
 3579 032a 3A        		.uleb128 0x3a
 3580 032b 0B        		.uleb128 0xb
 3581 032c 3B        		.uleb128 0x3b
 3582 032d 0B        		.uleb128 0xb
 3583 032e 39        		.uleb128 0x39
 3584 032f 0B        		.uleb128 0xb
 3585 0330 49        		.uleb128 0x49
 3586 0331 13        		.uleb128 0x13
 3587 0332 38        		.uleb128 0x38
 3588 0333 05        		.uleb128 0x5
 3589 0334 00        		.byte	0
 3590 0335 00        		.byte	0
 3591 0336 37        		.uleb128 0x37
 3592 0337 21        		.uleb128 0x21
 3593 0338 00        		.byte	0
 3594 0339 49        		.uleb128 0x49
 3595 033a 13        		.uleb128 0x13
 3596 033b 2F        		.uleb128 0x2f
 3597 033c 05        		.uleb128 0x5
 3598 033d 00        		.byte	0
 3599 033e 00        		.byte	0
 3600 033f 38        		.uleb128 0x38


 3601 0340 34        		.uleb128 0x34
 3602 0341 00        		.byte	0
 3603 0342 03        		.uleb128 0x3
 3604 0343 0E        		.uleb128 0xe
 3605 0344 3A        		.uleb128 0x3a
 3606 0345 0B        		.uleb128 0xb
 3607 0346 3B        		.uleb128 0x3b
 3608 0347 0B        		.uleb128 0xb
 3609 0348 39        		.uleb128 0x39
 3610 0349 0B        		.uleb128 0xb
 3611 034a 49        		.uleb128 0x49
 3612 034b 13        		.uleb128 0x13
 3613 034c 02        		.uleb128 0x2
 3614 034d 17        		.uleb128 0x17
 3615 034e B742      		.uleb128 0x2137
 3616 0350 17        		.uleb128 0x17
 3617 0351 00        		.byte	0
 3618 0352 00        		.byte	0
 3619 0353 39        		.uleb128 0x39
 3620 0354 1D        		.uleb128 0x1d
 3621 0355 01        		.byte	0x1
 3622 0356 31        		.uleb128 0x31
 3623 0357 13        		.uleb128 0x13
 3624 0358 52        		.uleb128 0x52
 3625 0359 01        		.uleb128 0x1
 3626 035a B842      		.uleb128 0x2138
 3627 035c 0B        		.uleb128 0xb
 3628 035d 55        		.uleb128 0x55
 3629 035e 17        		.uleb128 0x17
 3630 035f 58        		.uleb128 0x58
 3631 0360 0B        		.uleb128 0xb
 3632 0361 59        		.uleb128 0x59
 3633 0362 0B        		.uleb128 0xb
 3634 0363 57        		.uleb128 0x57
 3635 0364 0B        		.uleb128 0xb
 3636 0365 01        		.uleb128 0x1
 3637 0366 13        		.uleb128 0x13
 3638 0367 00        		.byte	0
 3639 0368 00        		.byte	0
 3640 0369 3A        		.uleb128 0x3a
 3641 036a 2E        		.uleb128 0x2e
 3642 036b 00        		.byte	0
 3643 036c 3F        		.uleb128 0x3f
 3644 036d 19        		.uleb128 0x19
 3645 036e 03        		.uleb128 0x3
 3646 036f 0E        		.uleb128 0xe
 3647 0370 3A        		.uleb128 0x3a
 3648 0371 0B        		.uleb128 0xb
 3649 0372 3B        		.uleb128 0x3b
 3650 0373 0B        		.uleb128 0xb
 3651 0374 39        		.uleb128 0x39
 3652 0375 0B        		.uleb128 0xb
 3653 0376 20        		.uleb128 0x20
 3654 0377 0B        		.uleb128 0xb
 3655 0378 00        		.byte	0
 3656 0379 00        		.byte	0
 3657 037a 3B        		.uleb128 0x3b


 3658 037b 2E        		.uleb128 0x2e
 3659 037c 01        		.byte	0x1
 3660 037d 3F        		.uleb128 0x3f
 3661 037e 19        		.uleb128 0x19
 3662 037f 03        		.uleb128 0x3
 3663 0380 0E        		.uleb128 0xe
 3664 0381 3A        		.uleb128 0x3a
 3665 0382 0B        		.uleb128 0xb
 3666 0383 3B        		.uleb128 0x3b
 3667 0384 0B        		.uleb128 0xb
 3668 0385 39        		.uleb128 0x39
 3669 0386 0B        		.uleb128 0xb
 3670 0387 27        		.uleb128 0x27
 3671 0388 19        		.uleb128 0x19
 3672 0389 20        		.uleb128 0x20
 3673 038a 0B        		.uleb128 0xb
 3674 038b 01        		.uleb128 0x1
 3675 038c 13        		.uleb128 0x13
 3676 038d 00        		.byte	0
 3677 038e 00        		.byte	0
 3678 038f 3C        		.uleb128 0x3c
 3679 0390 34        		.uleb128 0x34
 3680 0391 00        		.byte	0
 3681 0392 03        		.uleb128 0x3
 3682 0393 08        		.uleb128 0x8
 3683 0394 3A        		.uleb128 0x3a
 3684 0395 0B        		.uleb128 0xb
 3685 0396 3B        		.uleb128 0x3b
 3686 0397 0B        		.uleb128 0xb
 3687 0398 39        		.uleb128 0x39
 3688 0399 0B        		.uleb128 0xb
 3689 039a 49        		.uleb128 0x49
 3690 039b 13        		.uleb128 0x13
 3691 039c 00        		.byte	0
 3692 039d 00        		.byte	0
 3693 039e 3D        		.uleb128 0x3d
 3694 039f 0B        		.uleb128 0xb
 3695 03a0 01        		.byte	0x1
 3696 03a1 55        		.uleb128 0x55
 3697 03a2 17        		.uleb128 0x17
 3698 03a3 01        		.uleb128 0x1
 3699 03a4 13        		.uleb128 0x13
 3700 03a5 00        		.byte	0
 3701 03a6 00        		.byte	0
 3702 03a7 3E        		.uleb128 0x3e
 3703 03a8 0B        		.uleb128 0xb
 3704 03a9 01        		.byte	0x1
 3705 03aa 11        		.uleb128 0x11
 3706 03ab 01        		.uleb128 0x1
 3707 03ac 12        		.uleb128 0x12
 3708 03ad 06        		.uleb128 0x6
 3709 03ae 01        		.uleb128 0x1
 3710 03af 13        		.uleb128 0x13
 3711 03b0 00        		.byte	0
 3712 03b1 00        		.byte	0
 3713 03b2 3F        		.uleb128 0x3f
 3714 03b3 0B        		.uleb128 0xb


 3715 03b4 01        		.byte	0x1
 3716 03b5 11        		.uleb128 0x11
 3717 03b6 01        		.uleb128 0x1
 3718 03b7 12        		.uleb128 0x12
 3719 03b8 06        		.uleb128 0x6
 3720 03b9 00        		.byte	0
 3721 03ba 00        		.byte	0
 3722 03bb 40        		.uleb128 0x40
 3723 03bc 2E        		.uleb128 0x2e
 3724 03bd 01        		.byte	0x1
 3725 03be 31        		.uleb128 0x31
 3726 03bf 13        		.uleb128 0x13
 3727 03c0 11        		.uleb128 0x11
 3728 03c1 01        		.uleb128 0x1
 3729 03c2 12        		.uleb128 0x12
 3730 03c3 06        		.uleb128 0x6
 3731 03c4 40        		.uleb128 0x40
 3732 03c5 18        		.uleb128 0x18
 3733 03c6 7A        		.uleb128 0x7a
 3734 03c7 19        		.uleb128 0x19
 3735 03c8 00        		.byte	0
 3736 03c9 00        		.byte	0
 3737 03ca 00        		.byte	0
 3738               		.section	.debug_loclists,"",@progbits
 3739 0000 0000 0430 		.long	.Ldebug_loc3-.Ldebug_loc2
 3740               	.Ldebug_loc2:
 3741 0004 0005      		.word	0x5
 3742 0006 04        		.byte	0x4
 3743 0007 00        		.byte	0
 3744 0008 0000 0000 		.long	0
 3745               	.Ldebug_loc0:
 3746               	.LVUS29:
 3747 000c 02        		.uleb128 .LVU294
 3748 000d 00        		.uleb128 0
 3749               	.LLST29:
 3750 000e 04        		.byte	0x4
 3751 000f E806      		.uleb128 .LVL70-.Ltext0
 3752 0011 C407      		.uleb128 .LFE13-.Ltext0
 3753 0013 01        		.uleb128 0x1
 3754 0014 59        		.byte	0x59
 3755 0015 00        		.byte	0
 3756               	.LVUS30:
 3757 0016 01        		.uleb128 .LVU281
 3758 0017 02        		.uleb128 .LVU294
 3759               	.LLST30:
 3760 0018 04        		.byte	0x4
 3761 0019 B806      		.uleb128 .LVL67-.Ltext0
 3762 001b E806      		.uleb128 .LVL70-.Ltext0
 3763 001d 0B        		.uleb128 0xb
 3764 001e 71        		.byte	0x71
 3765 001f 00        		.sleb128 0
 3766 0020 3C        		.byte	0x3c
 3767 0021 1E        		.byte	0x1e
 3768 0022 03        		.byte	0x3
 3769 0023 0000 0000 		.long	semaphore+8
 3770 0027 22        		.byte	0x22
 3771 0028 9F        		.byte	0x9f


 3772 0029 00        		.byte	0
 3773               	.LVUS31:
 3774 002a 00        		.uleb128 .LVU284
 3775 002b 02        		.uleb128 .LVU294
 3776               	.LLST31:
 3777 002c 04        		.byte	0x4
 3778 002d CC06      		.uleb128 .LVL68-.Ltext0
 3779 002f E806      		.uleb128 .LVL70-.Ltext0
 3780 0031 01        		.uleb128 0x1
 3781 0032 59        		.byte	0x59
 3782 0033 00        		.byte	0
 3783               	.LVUS32:
 3784 0034 01        		.uleb128 .LVU287
 3785 0035 00        		.uleb128 .LVU292
 3786               	.LLST32:
 3787 0036 04        		.byte	0x4
 3788 0037 D206      		.uleb128 .LVL69-.Ltext0
 3789 0039 E806      		.uleb128 .LVL70-.Ltext0
 3790 003b 0B        		.uleb128 0xb
 3791 003c 79        		.byte	0x79
 3792 003d 00        		.sleb128 0
 3793 003e 44        		.byte	0x44
 3794 003f 1E        		.byte	0x1e
 3795 0040 03        		.byte	0x3
 3796 0041 0000 0000 		.long	task_tab
 3797 0045 22        		.byte	0x22
 3798 0046 9F        		.byte	0x9f
 3799 0047 00        		.byte	0
 3800               	.LVUS34:
 3801 0048 04        		.uleb128 .LVU296
 3802 0049 00        		.uleb128 .LVU302
 3803 004a 00        		.uleb128 .LVU304
 3804 004b 01        		.uleb128 .LVU320
 3805               	.LLST34:
 3806 004c 04        		.byte	0x4
 3807 004d E806      		.uleb128 .LVL70-.Ltext0
 3808 004f F606      		.uleb128 .LVL71-.Ltext0
 3809 0051 01        		.uleb128 0x1
 3810 0052 59        		.byte	0x59
 3811 0053 04        		.byte	0x4
 3812 0054 FA06      		.uleb128 .LVL72-.Ltext0
 3813 0056 C007      		.uleb128 .LVL76-.Ltext0
 3814 0058 01        		.uleb128 0x1
 3815 0059 59        		.byte	0x59
 3816 005a 00        		.byte	0
 3817               	.LVUS35:
 3818 005b 04        		.uleb128 .LVU296
 3819 005c 00        		.uleb128 .LVU302
 3820 005d 00        		.uleb128 .LVU304
 3821 005e 01        		.uleb128 .LVU320
 3822               	.LLST35:
 3823 005f 04        		.byte	0x4
 3824 0060 E806      		.uleb128 .LVL70-.Ltext0
 3825 0062 F606      		.uleb128 .LVL71-.Ltext0
 3826 0064 06        		.uleb128 0x6
 3827 0065 03        		.byte	0x3
 3828 0066 0000 0000 		.long	ready


 3829 006a 9F        		.byte	0x9f
 3830 006b 04        		.byte	0x4
 3831 006c FA06      		.uleb128 .LVL72-.Ltext0
 3832 006e C007      		.uleb128 .LVL76-.Ltext0
 3833 0070 06        		.uleb128 0x6
 3834 0071 03        		.byte	0x3
 3835 0072 0000 0000 		.long	ready
 3836 0076 9F        		.byte	0x9f
 3837 0077 00        		.byte	0
 3838               	.LVUS36:
 3839 0078 01        		.uleb128 .LVU305
 3840 0079 00        		.uleb128 .LVU309
 3841 007a 00        		.uleb128 .LVU309
 3842 007b 01        		.uleb128 .LVU310
 3843 007c 01        		.uleb128 .LVU310
 3844 007d 00        		.uleb128 .LVU314
 3845 007e 00        		.uleb128 .LVU314
 3846 007f 00        		.uleb128 .LVU317
 3847               	.LLST36:
 3848 0080 04        		.byte	0x4
 3849 0081 FA06      		.uleb128 .LVL72-.Ltext0
 3850 0083 9607      		.uleb128 .LVL73-.Ltext0
 3851 0085 0B        		.uleb128 0xb
 3852 0086 71        		.byte	0x71
 3853 0087 00        		.sleb128 0
 3854 0088 44        		.byte	0x44
 3855 0089 1E        		.byte	0x1e
 3856 008a 03        		.byte	0x3
 3857 008b 0000 0000 		.long	task_tab
 3858 008f 22        		.byte	0x22
 3859 0090 9F        		.byte	0x9f
 3860 0091 04        		.byte	0x4
 3861 0092 9607      		.uleb128 .LVL73-.Ltext0
 3862 0094 9607      		.uleb128 .LVL73-.Ltext0
 3863 0096 0F        		.uleb128 0xf
 3864 0097 03        		.byte	0x3
 3865 0098 0000 0000 		.long	ready
 3866 009c 06        		.byte	0x6
 3867 009d 44        		.byte	0x44
 3868 009e 1E        		.byte	0x1e
 3869 009f 03        		.byte	0x3
 3870 00a0 0000 0000 		.long	task_tab
 3871 00a4 22        		.byte	0x22
 3872 00a5 9F        		.byte	0x9f
 3873 00a6 04        		.byte	0x4
 3874 00a7 9607      		.uleb128 .LVL73-.Ltext0
 3875 00a9 9A07      		.uleb128 .LVL74-.Ltext0
 3876 00ab 0B        		.uleb128 0xb
 3877 00ac 70        		.byte	0x70
 3878 00ad 00        		.sleb128 0
 3879 00ae 44        		.byte	0x44
 3880 00af 1E        		.byte	0x1e
 3881 00b0 03        		.byte	0x3
 3882 00b1 0000 0000 		.long	task_tab
 3883 00b5 22        		.byte	0x22
 3884 00b6 9F        		.byte	0x9f
 3885 00b7 04        		.byte	0x4


 3886 00b8 9A07      		.uleb128 .LVL74-.Ltext0
 3887 00ba BC07      		.uleb128 .LVL75-.Ltext0
 3888 00bc 0B        		.uleb128 0xb
 3889 00bd 71        		.byte	0x71
 3890 00be 00        		.sleb128 0
 3891 00bf 44        		.byte	0x44
 3892 00c0 1E        		.byte	0x1e
 3893 00c1 03        		.byte	0x3
 3894 00c2 0000 0000 		.long	task_tab
 3895 00c6 22        		.byte	0x22
 3896 00c7 9F        		.byte	0x9f
 3897 00c8 00        		.byte	0
 3898               	.LVUS23:
 3899 00c9 00        		.uleb128 .LVU221
 3900 00ca 00        		.uleb128 .LVU227
 3901 00cb 00        		.uleb128 .LVU251
 3902 00cc 00        		.uleb128 0
 3903               	.LLST23:
 3904 00cd 04        		.byte	0x4
 3905 00ce F204      		.uleb128 .LVL53-.Ltext0
 3906 00d0 8A05      		.uleb128 .LVL55-.Ltext0
 3907 00d2 01        		.uleb128 0x1
 3908 00d3 59        		.byte	0x59
 3909 00d4 04        		.byte	0x4
 3910 00d5 C005      		.uleb128 .LVL60-.Ltext0
 3911 00d7 8806      		.uleb128 .LFE12-.Ltext0
 3912 00d9 01        		.uleb128 0x1
 3913 00da 59        		.byte	0x59
 3914 00db 00        		.byte	0
 3915               	.LVUS24:
 3916 00dc 00        		.uleb128 .LVU221
 3917 00dd 00        		.uleb128 .LVU224
 3918 00de 00        		.uleb128 .LVU224
 3919 00df 00        		.uleb128 .LVU227
 3920 00e0 00        		.uleb128 .LVU251
 3921 00e1 00        		.uleb128 0
 3922               	.LLST24:
 3923 00e2 04        		.byte	0x4
 3924 00e3 F204      		.uleb128 .LVL53-.Ltext0
 3925 00e5 8605      		.uleb128 .LVL54-.Ltext0
 3926 00e7 0B        		.uleb128 0xb
 3927 00e8 71        		.byte	0x71
 3928 00e9 00        		.sleb128 0
 3929 00ea 3C        		.byte	0x3c
 3930 00eb 1E        		.byte	0x1e
 3931 00ec 03        		.byte	0x3
 3932 00ed 0000 0000 		.long	semaphore+8
 3933 00f1 22        		.byte	0x22
 3934 00f2 9F        		.byte	0x9f
 3935 00f3 04        		.byte	0x4
 3936 00f4 8605      		.uleb128 .LVL54-.Ltext0
 3937 00f6 8A05      		.uleb128 .LVL55-.Ltext0
 3938 00f8 0C        		.uleb128 0xc
 3939 00f9 91        		.byte	0x91
 3940 00fa 70        		.sleb128 -16
 3941 00fb 06        		.byte	0x6
 3942 00fc 3C        		.byte	0x3c


 3943 00fd 1E        		.byte	0x1e
 3944 00fe 03        		.byte	0x3
 3945 00ff 0000 0000 		.long	semaphore+8
 3946 0103 22        		.byte	0x22
 3947 0104 9F        		.byte	0x9f
 3948 0105 04        		.byte	0x4
 3949 0106 C005      		.uleb128 .LVL60-.Ltext0
 3950 0108 8806      		.uleb128 .LFE12-.Ltext0
 3951 010a 0C        		.uleb128 0xc
 3952 010b 91        		.byte	0x91
 3953 010c 70        		.sleb128 -16
 3954 010d 06        		.byte	0x6
 3955 010e 3C        		.byte	0x3c
 3956 010f 1E        		.byte	0x1e
 3957 0110 03        		.byte	0x3
 3958 0111 0000 0000 		.long	semaphore+8
 3959 0115 22        		.byte	0x22
 3960 0116 9F        		.byte	0x9f
 3961 0117 00        		.byte	0
 3962               	.LVUS25:
 3963 0118 01        		.uleb128 .LVU252
 3964 0119 00        		.uleb128 .LVU256
 3965 011a 00        		.uleb128 .LVU256
 3966 011b 01        		.uleb128 .LVU257
 3967 011c 01        		.uleb128 .LVU257
 3968 011d 00        		.uleb128 .LVU261
 3969 011e 00        		.uleb128 .LVU261
 3970 011f 00        		.uleb128 .LVU264
 3971               	.LLST25:
 3972 0120 04        		.byte	0x4
 3973 0121 C005      		.uleb128 .LVL60-.Ltext0
 3974 0123 DC05      		.uleb128 .LVL61-.Ltext0
 3975 0125 0B        		.uleb128 0xb
 3976 0126 71        		.byte	0x71
 3977 0127 00        		.sleb128 0
 3978 0128 44        		.byte	0x44
 3979 0129 1E        		.byte	0x1e
 3980 012a 03        		.byte	0x3
 3981 012b 0000 0000 		.long	task_tab
 3982 012f 22        		.byte	0x22
 3983 0130 9F        		.byte	0x9f
 3984 0131 04        		.byte	0x4
 3985 0132 DC05      		.uleb128 .LVL61-.Ltext0
 3986 0134 DC05      		.uleb128 .LVL61-.Ltext0
 3987 0136 1B        		.uleb128 0x1b
 3988 0137 91        		.byte	0x91
 3989 0138 70        		.sleb128 -16
 3990 0139 06        		.byte	0x6
 3991 013a 31        		.byte	0x31
 3992 013b 24        		.byte	0x24
 3993 013c 91        		.byte	0x91
 3994 013d 70        		.sleb128 -16
 3995 013e 06        		.byte	0x6
 3996 013f 22        		.byte	0x22
 3997 0140 32        		.byte	0x32
 3998 0141 24        		.byte	0x24
 3999 0142 03        		.byte	0x3


 4000 0143 0000 0000 		.long	semaphore+8
 4001 0147 22        		.byte	0x22
 4002 0148 06        		.byte	0x6
 4003 0149 44        		.byte	0x44
 4004 014a 1E        		.byte	0x1e
 4005 014b 03        		.byte	0x3
 4006 014c 0000 0000 		.long	task_tab
 4007 0150 22        		.byte	0x22
 4008 0151 9F        		.byte	0x9f
 4009 0152 04        		.byte	0x4
 4010 0153 DC05      		.uleb128 .LVL61-.Ltext0
 4011 0155 E005      		.uleb128 .LVL62-.Ltext0
 4012 0157 0B        		.uleb128 0xb
 4013 0158 70        		.byte	0x70
 4014 0159 00        		.sleb128 0
 4015 015a 44        		.byte	0x44
 4016 015b 1E        		.byte	0x1e
 4017 015c 03        		.byte	0x3
 4018 015d 0000 0000 		.long	task_tab
 4019 0161 22        		.byte	0x22
 4020 0162 9F        		.byte	0x9f
 4021 0163 04        		.byte	0x4
 4022 0164 E005      		.uleb128 .LVL62-.Ltext0
 4023 0166 8206      		.uleb128 .LVL63-.Ltext0
 4024 0168 0B        		.uleb128 0xb
 4025 0169 71        		.byte	0x71
 4026 016a 00        		.sleb128 0
 4027 016b 44        		.byte	0x44
 4028 016c 1E        		.byte	0x1e
 4029 016d 03        		.byte	0x3
 4030 016e 0000 0000 		.long	task_tab
 4031 0172 22        		.byte	0x22
 4032 0173 9F        		.byte	0x9f
 4033 0174 00        		.byte	0
 4034               	.LVUS26:
 4035 0175 04        		.uleb128 .LVU231
 4036 0176 02        		.uleb128 .LVU244
 4037               	.LLST26:
 4038 0177 04        		.byte	0x4
 4039 0178 8A05      		.uleb128 .LVL55-.Ltext0
 4040 017a AC05      		.uleb128 .LVL58-.Ltext0
 4041 017c 06        		.uleb128 0x6
 4042 017d 03        		.byte	0x3
 4043 017e 0000 0000 		.long	ready
 4044 0182 9F        		.byte	0x9f
 4045 0183 00        		.byte	0
 4046               	.LVUS27:
 4047 0184 00        		.uleb128 .LVU234
 4048 0185 02        		.uleb128 .LVU244
 4049               	.LLST27:
 4050 0186 04        		.byte	0x4
 4051 0187 9005      		.uleb128 .LVL56-.Ltext0
 4052 0189 AC05      		.uleb128 .LVL58-.Ltext0
 4053 018b 01        		.uleb128 0x1
 4054 018c 50        		.byte	0x50
 4055 018d 00        		.byte	0
 4056               	.LVUS28:


 4057 018e 01        		.uleb128 .LVU237
 4058 018f 00        		.uleb128 .LVU242
 4059               	.LLST28:
 4060 0190 04        		.byte	0x4
 4061 0191 9205      		.uleb128 .LVL57-.Ltext0
 4062 0193 AC05      		.uleb128 .LVL58-.Ltext0
 4063 0195 0B        		.uleb128 0xb
 4064 0196 70        		.byte	0x70
 4065 0197 00        		.sleb128 0
 4066 0198 44        		.byte	0x44
 4067 0199 1E        		.byte	0x1e
 4068 019a 03        		.byte	0x3
 4069 019b 0000 0000 		.long	task_tab
 4070 019f 22        		.byte	0x22
 4071 01a0 9F        		.byte	0x9f
 4072 01a1 00        		.byte	0
 4073               	.LVUS13:
 4074 01a2 02        		.uleb128 .LVU139
 4075 01a3 02        		.uleb128 .LVU152
 4076               	.LLST13:
 4077 01a4 04        		.byte	0x4
 4078 01a5 8C03      		.uleb128 .LVL33-.Ltext0
 4079 01a7 AE03      		.uleb128 .LVL36-.Ltext0
 4080 01a9 06        		.uleb128 0x6
 4081 01aa 03        		.byte	0x3
 4082 01ab 0000 0000 		.long	ready
 4083 01af 9F        		.byte	0x9f
 4084 01b0 00        		.byte	0
 4085               	.LVUS14:
 4086 01b1 00        		.uleb128 .LVU142
 4087 01b2 02        		.uleb128 .LVU152
 4088               	.LLST14:
 4089 01b3 04        		.byte	0x4
 4090 01b4 9203      		.uleb128 .LVL34-.Ltext0
 4091 01b6 AE03      		.uleb128 .LVL36-.Ltext0
 4092 01b8 01        		.uleb128 0x1
 4093 01b9 50        		.byte	0x50
 4094 01ba 00        		.byte	0
 4095               	.LVUS15:
 4096 01bb 01        		.uleb128 .LVU145
 4097 01bc 00        		.uleb128 .LVU150
 4098               	.LLST15:
 4099 01bd 04        		.byte	0x4
 4100 01be 9403      		.uleb128 .LVL35-.Ltext0
 4101 01c0 AE03      		.uleb128 .LVL36-.Ltext0
 4102 01c2 0B        		.uleb128 0xb
 4103 01c3 70        		.byte	0x70
 4104 01c4 00        		.sleb128 0
 4105 01c5 44        		.byte	0x44
 4106 01c6 1E        		.byte	0x1e
 4107 01c7 03        		.byte	0x3
 4108 01c8 0000 0000 		.long	task_tab
 4109 01cc 22        		.byte	0x22
 4110 01cd 9F        		.byte	0x9f
 4111 01ce 00        		.byte	0
 4112               	.LVUS3:
 4113 01cf 03        		.uleb128 .LVU59


 4114 01d0 00        		.uleb128 .LVU61
 4115 01d1 00        		.uleb128 .LVU61
 4116 01d2 00        		.uleb128 .LVU66
 4117 01d3 00        		.uleb128 .LVU116
 4118 01d4 00        		.uleb128 0
 4119               	.LLST3:
 4120 01d5 04        		.byte	0x4
 4121 01d6 7A        		.uleb128 .LVL9-.Ltext0
 4122 01d7 8201      		.uleb128 .LVL10-.Ltext0
 4123 01d9 02        		.uleb128 0x2
 4124 01da 31        		.byte	0x31
 4125 01db 9F        		.byte	0x9f
 4126 01dc 04        		.byte	0x4
 4127 01dd 8201      		.uleb128 .LVL10-.Ltext0
 4128 01df 9A01      		.uleb128 .LVL12-.Ltext0
 4129 01e1 01        		.uleb128 0x1
 4130 01e2 51        		.byte	0x51
 4131 01e3 04        		.byte	0x4
 4132 01e4 C002      		.uleb128 .LVL27-.Ltext0
 4133 01e6 CA02      		.uleb128 .LFE4-.Ltext0
 4134 01e8 01        		.uleb128 0x1
 4135 01e9 51        		.byte	0x51
 4136 01ea 00        		.byte	0
 4137               	.LVUS4:
 4138 01eb 01        		.uleb128 .LVU71
 4139 01ec 01        		.uleb128 .LVU85
 4140               	.LLST4:
 4141 01ed 04        		.byte	0x4
 4142 01ee BA01      		.uleb128 .LVL13-.Ltext0
 4143 01f0 DA01      		.uleb128 .LVL17-.Ltext0
 4144 01f2 05        		.uleb128 0x5
 4145 01f3 03        		.byte	0x3
 4146 01f4 0000 0000 		.long	new_task
 4147 01f8 00        		.byte	0
 4148               	.LVUS5:
 4149 01f9 00        		.uleb128 .LVU75
 4150 01fa 01        		.uleb128 .LVU76
 4151 01fb 01        		.uleb128 .LVU76
 4152 01fc 01        		.uleb128 .LVU81
 4153 01fd 01        		.uleb128 .LVU81
 4154 01fe 02        		.uleb128 .LVU82
 4155 01ff 02        		.uleb128 .LVU82
 4156 0200 03        		.uleb128 .LVU83
 4157 0201 03        		.uleb128 .LVU83
 4158 0202 01        		.uleb128 .LVU85
 4159               	.LLST5:
 4160 0203 04        		.byte	0x4
 4161 0204 C801      		.uleb128 .LVL14-.Ltext0
 4162 0206 C801      		.uleb128 .LVL14-.Ltext0
 4163 0208 01        		.uleb128 0x1
 4164 0209 5A        		.byte	0x5a
 4165 020a 04        		.byte	0x4
 4166 020b C801      		.uleb128 .LVL14-.Ltext0
 4167 020d D001      		.uleb128 .LVL16-.Ltext0
 4168 020f 03        		.uleb128 0x3
 4169 0210 7A        		.byte	0x7a
 4170 0211 7C        		.sleb128 -4


 4171 0212 9F        		.byte	0x9f
 4172 0213 04        		.byte	0x4
 4173 0214 D001      		.uleb128 .LVL16-.Ltext0
 4174 0216 D001      		.uleb128 .LVL16-.Ltext0
 4175 0218 03        		.uleb128 0x3
 4176 0219 7A        		.byte	0x7a
 4177 021a 7A        		.sleb128 -6
 4178 021b 9F        		.byte	0x9f
 4179 021c 04        		.byte	0x4
 4180 021d D001      		.uleb128 .LVL16-.Ltext0
 4181 021f D001      		.uleb128 .LVL16-.Ltext0
 4182 0221 04        		.uleb128 0x4
 4183 0222 7A        		.byte	0x7a
 4184 0223 BE7F      		.sleb128 -66
 4185 0225 9F        		.byte	0x9f
 4186 0226 04        		.byte	0x4
 4187 0227 D001      		.uleb128 .LVL16-.Ltext0
 4188 0229 DA01      		.uleb128 .LVL17-.Ltext0
 4189 022b 04        		.uleb128 0x4
 4190 022c 7A        		.byte	0x7a
 4191 022d BA7F      		.sleb128 -70
 4192 022f 9F        		.byte	0x9f
 4193 0230 00        		.byte	0
 4194               	.LVUS6:
 4195 0231 01        		.uleb128 .LVU78
 4196 0232 02        		.uleb128 .LVU79
 4197 0233 02        		.uleb128 .LVU79
 4198 0234 00        		.uleb128 .LVU86
 4199 0235 00        		.uleb128 .LVU86
 4200 0236 00        		.uleb128 .LVU95
 4201 0237 00        		.uleb128 .LVU95
 4202 0238 00        		.uleb128 .LVU96
 4203 0239 00        		.uleb128 .LVU96
 4204 023a 00        		.uleb128 .LVU115
 4205 023b 00        		.uleb128 .LVU115
 4206 023c 00        		.uleb128 .LVU116
 4207               	.LLST6:
 4208 023d 04        		.byte	0x4
 4209 023e CC01      		.uleb128 .LVL15-.Ltext0
 4210 0240 CC01      		.uleb128 .LVL15-.Ltext0
 4211 0242 03        		.uleb128 0x3
 4212 0243 7A        		.byte	0x7a
 4213 0244 7C        		.sleb128 -4
 4214 0245 9F        		.byte	0x9f
 4215 0246 04        		.byte	0x4
 4216 0247 CC01      		.uleb128 .LVL15-.Ltext0
 4217 0249 DE01      		.uleb128 .LVL18-.Ltext0
 4218 024b 03        		.uleb128 0x3
 4219 024c 7A        		.byte	0x7a
 4220 024d 7A        		.sleb128 -6
 4221 024e 9F        		.byte	0x9f
 4222 024f 04        		.byte	0x4
 4223 0250 DE01      		.uleb128 .LVL18-.Ltext0
 4224 0252 F801      		.uleb128 .LVL20-.Ltext0
 4225 0254 04        		.uleb128 0x4
 4226 0255 7A        		.byte	0x7a
 4227 0256 C000      		.sleb128 64


 4228 0258 9F        		.byte	0x9f
 4229 0259 04        		.byte	0x4
 4230 025a F801      		.uleb128 .LVL20-.Ltext0
 4231 025c FA01      		.uleb128 .LVL21-.Ltext0
 4232 025e 15        		.uleb128 0x15
 4233 025f 71        		.byte	0x71
 4234 0260 00        		.sleb128 0
 4235 0261 71        		.byte	0x71
 4236 0262 00        		.sleb128 0
 4237 0263 22        		.byte	0x22
 4238 0264 31        		.byte	0x31
 4239 0265 24        		.byte	0x24
 4240 0266 71        		.byte	0x71
 4241 0267 00        		.sleb128 0
 4242 0268 22        		.byte	0x22
 4243 0269 32        		.byte	0x32
 4244 026a 24        		.byte	0x24
 4245 026b 79        		.byte	0x79
 4246 026c 00        		.sleb128 0
 4247 026d 22        		.byte	0x22
 4248 026e 23        		.byte	0x23
 4249 026f 04        		.uleb128 0x4
 4250 0270 06        		.byte	0x6
 4251 0271 23        		.byte	0x23
 4252 0272 40        		.uleb128 0x40
 4253 0273 9F        		.byte	0x9f
 4254 0274 04        		.byte	0x4
 4255 0275 FA01      		.uleb128 .LVL21-.Ltext0
 4256 0277 BE02      		.uleb128 .LVL26-.Ltext0
 4257 0279 04        		.uleb128 0x4
 4258 027a 7A        		.byte	0x7a
 4259 027b C000      		.sleb128 64
 4260 027d 9F        		.byte	0x9f
 4261 027e 04        		.byte	0x4
 4262 027f BE02      		.uleb128 .LVL26-.Ltext0
 4263 0281 C002      		.uleb128 .LVL27-.Ltext0
 4264 0283 15        		.uleb128 0x15
 4265 0284 71        		.byte	0x71
 4266 0285 00        		.sleb128 0
 4267 0286 71        		.byte	0x71
 4268 0287 00        		.sleb128 0
 4269 0288 22        		.byte	0x22
 4270 0289 31        		.byte	0x31
 4271 028a 24        		.byte	0x24
 4272 028b 71        		.byte	0x71
 4273 028c 00        		.sleb128 0
 4274 028d 22        		.byte	0x22
 4275 028e 32        		.byte	0x32
 4276 028f 24        		.byte	0x24
 4277 0290 79        		.byte	0x79
 4278 0291 00        		.sleb128 0
 4279 0292 22        		.byte	0x22
 4280 0293 23        		.byte	0x23
 4281 0294 04        		.uleb128 0x4
 4282 0295 06        		.byte	0x6
 4283 0296 23        		.byte	0x23
 4284 0297 40        		.uleb128 0x40


 4285 0298 9F        		.byte	0x9f
 4286 0299 00        		.byte	0
 4287               	.LVUS8:
 4288 029a 01        		.uleb128 .LVU88
 4289 029b 00        		.uleb128 .LVU116
 4290               	.LLST8:
 4291 029c 04        		.byte	0x4
 4292 029d E201      		.uleb128 .LVL19-.Ltext0
 4293 029f C002      		.uleb128 .LVL27-.Ltext0
 4294 02a1 05        		.uleb128 0x5
 4295 02a2 03        		.byte	0x3
 4296 02a3 0000 0000 		.long	new_task
 4297 02a7 00        		.byte	0
 4298               	.LVUS9:
 4299 02a8 01        		.uleb128 .LVU88
 4300 02a9 00        		.uleb128 .LVU116
 4301               	.LLST9:
 4302 02aa 04        		.byte	0x4
 4303 02ab E201      		.uleb128 .LVL19-.Ltext0
 4304 02ad C002      		.uleb128 .LVL27-.Ltext0
 4305 02af 06        		.uleb128 0x6
 4306 02b0 03        		.byte	0x3
 4307 02b1 0000 0000 		.long	ready
 4308 02b5 9F        		.byte	0x9f
 4309 02b6 00        		.byte	0
 4310               	.LVUS10:
 4311 02b7 01        		.uleb128 .LVU97
 4312 02b8 00        		.uleb128 .LVU100
 4313 02b9 00        		.uleb128 .LVU100
 4314 02ba 01        		.uleb128 .LVU103
 4315 02bb 01        		.uleb128 .LVU103
 4316 02bc 00        		.uleb128 .LVU107
 4317 02bd 00        		.uleb128 .LVU107
 4318 02be 00        		.uleb128 .LVU110
 4319               	.LLST10:
 4320 02bf 04        		.byte	0x4
 4321 02c0 FA01      		.uleb128 .LVL21-.Ltext0
 4322 02c2 8A02      		.uleb128 .LVL22-.Ltext0
 4323 02c4 0B        		.uleb128 0xb
 4324 02c5 78        		.byte	0x78
 4325 02c6 00        		.sleb128 0
 4326 02c7 44        		.byte	0x44
 4327 02c8 1E        		.byte	0x1e
 4328 02c9 03        		.byte	0x3
 4329 02ca 0000 0000 		.long	task_tab
 4330 02ce 22        		.byte	0x22
 4331 02cf 9F        		.byte	0x9f
 4332 02d0 04        		.byte	0x4
 4333 02d1 8A02      		.uleb128 .LVL22-.Ltext0
 4334 02d3 9002      		.uleb128 .LVL23-.Ltext0
 4335 02d5 0F        		.uleb128 0xf
 4336 02d6 03        		.byte	0x3
 4337 02d7 0000 0000 		.long	ready
 4338 02db 06        		.byte	0x6
 4339 02dc 44        		.byte	0x44
 4340 02dd 1E        		.byte	0x1e
 4341 02de 03        		.byte	0x3


 4342 02df 0000 0000 		.long	task_tab
 4343 02e3 22        		.byte	0x22
 4344 02e4 9F        		.byte	0x9f
 4345 02e5 04        		.byte	0x4
 4346 02e6 9002      		.uleb128 .LVL23-.Ltext0
 4347 02e8 9402      		.uleb128 .LVL24-.Ltext0
 4348 02ea 0B        		.uleb128 0xb
 4349 02eb 70        		.byte	0x70
 4350 02ec 00        		.sleb128 0
 4351 02ed 44        		.byte	0x44
 4352 02ee 1E        		.byte	0x1e
 4353 02ef 03        		.byte	0x3
 4354 02f0 0000 0000 		.long	task_tab
 4355 02f4 22        		.byte	0x22
 4356 02f5 9F        		.byte	0x9f
 4357 02f6 04        		.byte	0x4
 4358 02f7 9402      		.uleb128 .LVL24-.Ltext0
 4359 02f9 B002      		.uleb128 .LVL25-.Ltext0
 4360 02fb 0B        		.uleb128 0xb
 4361 02fc 78        		.byte	0x78
 4362 02fd 00        		.sleb128 0
 4363 02fe 44        		.byte	0x44
 4364 02ff 1E        		.byte	0x1e
 4365 0300 03        		.byte	0x3
 4366 0301 0000 0000 		.long	task_tab
 4367 0305 22        		.byte	0x22
 4368 0306 9F        		.byte	0x9f
 4369 0307 00        		.byte	0
 4370               	.LVUS0:
 4371 0308 03        		.uleb128 .LVU3
 4372 0309 00        		.uleb128 .LVU4
 4373               	.LLST0:
 4374 030a 04        		.byte	0x4
 4375 030b 00        		.uleb128 .LVL0-.Ltext0
 4376 030c 06        		.uleb128 .LVL1-.Ltext0
 4377 030d 02        		.uleb128 0x2
 4378 030e 30        		.byte	0x30
 4379 030f 9F        		.byte	0x9f
 4380 0310 00        		.byte	0
 4381               	.LVUS1:
 4382 0311 02        		.uleb128 .LVU22
 4383 0312 01        		.uleb128 .LVU28
 4384 0313 01        		.uleb128 .LVU28
 4385 0314 01        		.uleb128 .LVU34
 4386 0315 01        		.uleb128 .LVU34
 4387 0316 01        		.uleb128 .LVU40
 4388 0317 01        		.uleb128 .LVU40
 4389 0318 01        		.uleb128 .LVU46
 4390 0319 01        		.uleb128 .LVU46
 4391 031a 01        		.uleb128 .LVU52
 4392 031b 01        		.uleb128 .LVU52
 4393 031c 00        		.uleb128 0
 4394               	.LLST1:
 4395 031d 04        		.byte	0x4
 4396 031e 32        		.uleb128 .LVL2-.Ltext0
 4397 031f 40        		.uleb128 .LVL3-.Ltext0
 4398 0320 02        		.uleb128 0x2


 4399 0321 30        		.byte	0x30
 4400 0322 9F        		.byte	0x9f
 4401 0323 04        		.byte	0x4
 4402 0324 40        		.uleb128 .LVL3-.Ltext0
 4403 0325 4C        		.uleb128 .LVL4-.Ltext0
 4404 0326 02        		.uleb128 0x2
 4405 0327 31        		.byte	0x31
 4406 0328 9F        		.byte	0x9f
 4407 0329 04        		.byte	0x4
 4408 032a 4C        		.uleb128 .LVL4-.Ltext0
 4409 032b 58        		.uleb128 .LVL5-.Ltext0
 4410 032c 02        		.uleb128 0x2
 4411 032d 32        		.byte	0x32
 4412 032e 9F        		.byte	0x9f
 4413 032f 04        		.byte	0x4
 4414 0330 58        		.uleb128 .LVL5-.Ltext0
 4415 0331 64        		.uleb128 .LVL6-.Ltext0
 4416 0332 02        		.uleb128 0x2
 4417 0333 33        		.byte	0x33
 4418 0334 9F        		.byte	0x9f
 4419 0335 04        		.byte	0x4
 4420 0336 64        		.uleb128 .LVL6-.Ltext0
 4421 0337 70        		.uleb128 .LVL7-.Ltext0
 4422 0338 02        		.uleb128 0x2
 4423 0339 34        		.byte	0x34
 4424 033a 9F        		.byte	0x9f
 4425 033b 04        		.byte	0x4
 4426 033c 70        		.uleb128 .LVL7-.Ltext0
 4427 033d 72        		.uleb128 .LFE3-.Ltext0
 4428 033e 02        		.uleb128 0x2
 4429 033f 35        		.byte	0x35
 4430 0340 9F        		.byte	0x9f
 4431 0341 00        		.byte	0
 4432               	.LVUS11:
 4433 0342 00        		.uleb128 .LVU124
 4434 0343 01        		.uleb128 .LVU125
 4435 0344 01        		.uleb128 .LVU125
 4436 0345 01        		.uleb128 .LVU131
 4437 0346 01        		.uleb128 .LVU131
 4438 0347 02        		.uleb128 .LVU132
 4439 0348 02        		.uleb128 .LVU132
 4440 0349 03        		.uleb128 .LVU133
 4441 034a 03        		.uleb128 .LVU133
 4442 034b 00        		.uleb128 .LVU136
 4443 034c 00        		.uleb128 .LVU136
 4444 034d 00        		.uleb128 0
 4445               	.LLST11:
 4446 034e 04        		.byte	0x4
 4447 034f DE02      		.uleb128 .LVL29-.Ltext0
 4448 0351 DE02      		.uleb128 .LVL29-.Ltext0
 4449 0353 01        		.uleb128 0x1
 4450 0354 58        		.byte	0x58
 4451 0355 04        		.byte	0x4
 4452 0356 DE02      		.uleb128 .LVL29-.Ltext0
 4453 0358 FA02      		.uleb128 .LVL31-.Ltext0
 4454 035a 03        		.uleb128 0x3
 4455 035b 78        		.byte	0x78


 4456 035c 7C        		.sleb128 -4
 4457 035d 9F        		.byte	0x9f
 4458 035e 04        		.byte	0x4
 4459 035f FA02      		.uleb128 .LVL31-.Ltext0
 4460 0361 FA02      		.uleb128 .LVL31-.Ltext0
 4461 0363 03        		.uleb128 0x3
 4462 0364 78        		.byte	0x78
 4463 0365 7A        		.sleb128 -6
 4464 0366 9F        		.byte	0x9f
 4465 0367 04        		.byte	0x4
 4466 0368 FA02      		.uleb128 .LVL31-.Ltext0
 4467 036a FA02      		.uleb128 .LVL31-.Ltext0
 4468 036c 04        		.uleb128 0x4
 4469 036d 78        		.byte	0x78
 4470 036e BE7F      		.sleb128 -66
 4471 0370 9F        		.byte	0x9f
 4472 0371 04        		.byte	0x4
 4473 0372 FA02      		.uleb128 .LVL31-.Ltext0
 4474 0374 8803      		.uleb128 .LVL32-.Ltext0
 4475 0376 04        		.uleb128 0x4
 4476 0377 78        		.byte	0x78
 4477 0378 BA7F      		.sleb128 -70
 4478 037a 9F        		.byte	0x9f
 4479 037b 04        		.byte	0x4
 4480 037c 8803      		.uleb128 .LVL32-.Ltext0
 4481 037e 8C03      		.uleb128 .LFE5-.Ltext0
 4482 0380 01        		.uleb128 0x1
 4483 0381 50        		.byte	0x50
 4484 0382 00        		.byte	0
 4485               	.LVUS12:
 4486 0383 01        		.uleb128 .LVU128
 4487 0384 02        		.uleb128 .LVU129
 4488 0385 02        		.uleb128 .LVU129
 4489 0386 00        		.uleb128 0
 4490               	.LLST12:
 4491 0387 04        		.byte	0x4
 4492 0388 F602      		.uleb128 .LVL30-.Ltext0
 4493 038a F602      		.uleb128 .LVL30-.Ltext0
 4494 038c 03        		.uleb128 0x3
 4495 038d 78        		.byte	0x78
 4496 038e 7C        		.sleb128 -4
 4497 038f 9F        		.byte	0x9f
 4498 0390 04        		.byte	0x4
 4499 0391 F602      		.uleb128 .LVL30-.Ltext0
 4500 0393 8C03      		.uleb128 .LFE5-.Ltext0
 4501 0395 03        		.uleb128 0x3
 4502 0396 78        		.byte	0x78
 4503 0397 7A        		.sleb128 -6
 4504 0398 9F        		.byte	0x9f
 4505 0399 00        		.byte	0
 4506               	.LVUS16:
 4507 039a 01        		.uleb128 .LVU167
 4508 039b 00        		.uleb128 .LVU171
 4509 039c 00        		.uleb128 .LVU171
 4510 039d 01        		.uleb128 .LVU172
 4511 039e 01        		.uleb128 .LVU172
 4512 039f 00        		.uleb128 .LVU176


 4513 03a0 00        		.uleb128 .LVU176
 4514 03a1 00        		.uleb128 .LVU179
 4515               	.LLST16:
 4516 03a2 04        		.byte	0x4
 4517 03a3 CE03      		.uleb128 .LVL40-.Ltext0
 4518 03a5 EA03      		.uleb128 .LVL41-.Ltext0
 4519 03a7 0B        		.uleb128 0xb
 4520 03a8 71        		.byte	0x71
 4521 03a9 00        		.sleb128 0
 4522 03aa 44        		.byte	0x44
 4523 03ab 1E        		.byte	0x1e
 4524 03ac 03        		.byte	0x3
 4525 03ad 0000 0000 		.long	task_tab
 4526 03b1 22        		.byte	0x22
 4527 03b2 9F        		.byte	0x9f
 4528 03b3 04        		.byte	0x4
 4529 03b4 EA03      		.uleb128 .LVL41-.Ltext0
 4530 03b6 EA03      		.uleb128 .LVL41-.Ltext0
 4531 03b8 0D        		.uleb128 0xd
 4532 03b9 91        		.byte	0x91
 4533 03ba 70        		.sleb128 -16
 4534 03bb 06        		.byte	0x6
 4535 03bc 06        		.byte	0x6
 4536 03bd 44        		.byte	0x44
 4537 03be 1E        		.byte	0x1e
 4538 03bf 03        		.byte	0x3
 4539 03c0 0000 0000 		.long	task_tab
 4540 03c4 22        		.byte	0x22
 4541 03c5 9F        		.byte	0x9f
 4542 03c6 04        		.byte	0x4
 4543 03c7 EA03      		.uleb128 .LVL41-.Ltext0
 4544 03c9 EE03      		.uleb128 .LVL42-.Ltext0
 4545 03cb 0B        		.uleb128 0xb
 4546 03cc 70        		.byte	0x70
 4547 03cd 00        		.sleb128 0
 4548 03ce 44        		.byte	0x44
 4549 03cf 1E        		.byte	0x1e
 4550 03d0 03        		.byte	0x3
 4551 03d1 0000 0000 		.long	task_tab
 4552 03d5 22        		.byte	0x22
 4553 03d6 9F        		.byte	0x9f
 4554 03d7 04        		.byte	0x4
 4555 03d8 EE03      		.uleb128 .LVL42-.Ltext0
 4556 03da 9004      		.uleb128 .LVL43-.Ltext0
 4557 03dc 0B        		.uleb128 0xb
 4558 03dd 71        		.byte	0x71
 4559 03de 00        		.sleb128 0
 4560 03df 44        		.byte	0x44
 4561 03e0 1E        		.byte	0x1e
 4562 03e1 03        		.byte	0x3
 4563 03e2 0000 0000 		.long	task_tab
 4564 03e6 22        		.byte	0x22
 4565 03e7 9F        		.byte	0x9f
 4566 03e8 00        		.byte	0
 4567               	.LVUS17:
 4568 03e9 00        		.uleb128 .LVU187
 4569 03ea 00        		.uleb128 0


 4570               	.LLST17:
 4571 03eb 04        		.byte	0x4
 4572 03ec 9E04      		.uleb128 .LVL45-.Ltext0
 4573 03ee B804      		.uleb128 .LFE8-.Ltext0
 4574 03f0 01        		.uleb128 0x1
 4575 03f1 50        		.byte	0x50
 4576 03f2 00        		.byte	0
 4577               	.LVUS18:
 4578 03f3 01        		.uleb128 .LVU190
 4579 03f4 01        		.uleb128 .LVU196
 4580               	.LLST18:
 4581 03f5 04        		.byte	0x4
 4582 03f6 A004      		.uleb128 .LVL46-.Ltext0
 4583 03f8 B604      		.uleb128 .LVL47-.Ltext0
 4584 03fa 0B        		.uleb128 0xb
 4585 03fb 70        		.byte	0x70
 4586 03fc 00        		.sleb128 0
 4587 03fd 44        		.byte	0x44
 4588 03fe 1E        		.byte	0x1e
 4589 03ff 03        		.byte	0x3
 4590 0400 0000 0000 		.long	task_tab
 4591 0404 22        		.byte	0x22
 4592 0405 9F        		.byte	0x9f
 4593 0406 00        		.byte	0
 4594               	.LVUS19:
 4595 0407 02        		.uleb128 .LVU199
 4596 0408 02        		.uleb128 .LVU212
 4597               	.LLST19:
 4598 0409 04        		.byte	0x4
 4599 040a B804      		.uleb128 .LVL48-.Ltext0
 4600 040c DA04      		.uleb128 .LVL51-.Ltext0
 4601 040e 06        		.uleb128 0x6
 4602 040f 03        		.byte	0x3
 4603 0410 0000 0000 		.long	ready
 4604 0414 9F        		.byte	0x9f
 4605 0415 00        		.byte	0
 4606               	.LVUS20:
 4607 0416 00        		.uleb128 .LVU202
 4608 0417 02        		.uleb128 .LVU212
 4609               	.LLST20:
 4610 0418 04        		.byte	0x4
 4611 0419 BE04      		.uleb128 .LVL49-.Ltext0
 4612 041b DA04      		.uleb128 .LVL51-.Ltext0
 4613 041d 01        		.uleb128 0x1
 4614 041e 50        		.byte	0x50
 4615 041f 00        		.byte	0
 4616               	.LVUS21:
 4617 0420 01        		.uleb128 .LVU205
 4618 0421 00        		.uleb128 .LVU210
 4619               	.LLST21:
 4620 0422 04        		.byte	0x4
 4621 0423 C004      		.uleb128 .LVL50-.Ltext0
 4622 0425 DA04      		.uleb128 .LVL51-.Ltext0
 4623 0427 0B        		.uleb128 0xb
 4624 0428 70        		.byte	0x70
 4625 0429 00        		.sleb128 0
 4626 042a 44        		.byte	0x44


 4627 042b 1E        		.byte	0x1e
 4628 042c 03        		.byte	0x3
 4629 042d 0000 0000 		.long	task_tab
 4630 0431 22        		.byte	0x22
 4631 0432 9F        		.byte	0x9f
 4632 0433 00        		.byte	0
 4633               	.Ldebug_loc3:
 4634               		.section	.debug_aranges,"",@progbits
 4635 0000 0000 001C 		.long	0x1c
 4636 0004 0002      		.word	0x2
 4637 0006 0000 0000 		.long	.Ldebug_info0
 4638 000a 04        		.byte	0x4
 4639 000b 00        		.byte	0
 4640 000c 0000      		.word	0
 4641 000e 0000      		.word	0
 4642 0010 0000 0000 		.long	.Ltext0
 4643 0014 0000 03EE 		.long	.Letext0-.Ltext0
 4644 0018 0000 0000 		.long	0
 4645 001c 0000 0000 		.long	0
 4646               		.section	.debug_rnglists,"",@progbits
 4647               	.Ldebug_ranges0:
 4648 0000 0000 0033 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 4649               	.Ldebug_ranges2:
 4650 0004 0005      		.word	0x5
 4651 0006 04        		.byte	0x4
 4652 0007 00        		.byte	0
 4653 0008 0000 0000 		.long	0
 4654               	.LLRL2:
 4655 000c 04        		.byte	0x4
 4656 000d 7A        		.uleb128 .LBB25-.Ltext0
 4657 000e 9401      		.uleb128 .LBE25-.Ltext0
 4658 0010 04        		.byte	0x4
 4659 0011 C002      		.uleb128 .LBB33-.Ltext0
 4660 0013 CA02      		.uleb128 .LBE33-.Ltext0
 4661 0015 00        		.byte	0
 4662               	.LLRL7:
 4663 0016 04        		.byte	0x4
 4664 0017 E201      		.uleb128 .LBB28-.Ltext0
 4665 0019 F401      		.uleb128 .LBE28-.Ltext0
 4666 001b 04        		.byte	0x4
 4667 001c FA01      		.uleb128 .LBB32-.Ltext0
 4668 001e BA02      		.uleb128 .LBE32-.Ltext0
 4669 0020 00        		.byte	0
 4670               	.LLRL22:
 4671 0021 04        		.byte	0x4
 4672 0022 F204      		.uleb128 .LBB53-.Ltext0
 4673 0024 8A05      		.uleb128 .LBE53-.Ltext0
 4674 0026 04        		.byte	0x4
 4675 0027 C005      		.uleb128 .LBB62-.Ltext0
 4676 0029 8806      		.uleb128 .LBE62-.Ltext0
 4677 002b 00        		.byte	0
 4678               	.LLRL33:
 4679 002c 04        		.byte	0x4
 4680 002d E806      		.uleb128 .LBB66-.Ltext0
 4681 002f F606      		.uleb128 .LBE66-.Ltext0
 4682 0031 04        		.byte	0x4
 4683 0032 FA06      		.uleb128 .LBB70-.Ltext0


 4684 0034 C007      		.uleb128 .LBE70-.Ltext0
 4685 0036 00        		.byte	0
 4686               	.Ldebug_ranges3:
 4687               		.section	.debug_line,"",@progbits
 4688               	.Ldebug_line0:
 4689 0000 0000 05ED 		.section	.debug_str,"MS",@progbits,1
 4689      0003 0000 
 4689      00C8 0201 
 4689      FB0E 0D00 
 4689      0101 0101 
 4690               	.LASF100:
 4691 0000 636F 756E 		.string	"count"
 4691      7400 
 4692               	.LASF39:
 4693 0006 5F73 697A 		.string	"_size"
 4693      6500 
 4694               	.LASF76:
 4695 000c 5F72 616E 		.string	"_rand48"
 4695      6434 3800 
 4696               	.LASF63:
 4697 0014 5F65 6D65 		.string	"_emergency"
 4697      7267 656E 
 4697      6379 00
 4698               	.LASF126:
 4699 001f 7076 5F68 		.string	"pv_handler"
 4699      616E 646C 
 4699      6572 00
 4700               	.LASF118:
 4701 002a 7374 6163 		.string	"stacks"
 4701      6B73 00
 4702               	.LASF135:
 4703 0031 7265 6D6F 		.string	"removeq"
 4703      7665 7100 
 4704               	.LASF53:
 4705 0039 5F64 6174 		.string	"_data"
 4705      6100 
 4706               	.LASF95:
 4707 003f 5F77 6372 		.string	"_wcrtomb_state"
 4707      746F 6D62 
 4707      5F73 7461 
 4707      7465 00
 4708               	.LASF139:
 4709 004e 7365 745F 		.string	"set_task"
 4709      7461 736B 
 4709      00
 4710               	.LASF96:
 4711 0057 5F77 6373 		.string	"_wcsrtombs_state"
 4711      7274 6F6D 
 4711      6273 5F73 
 4711      7461 7465 
 4711      00
 4712               	.LASF7:
 4713 0068 6C6F 6E67 		.string	"long long unsigned int"
 4713      206C 6F6E 
 4713      6720 756E 
 4713      7369 676E 
 4713      6564 2069 


 4714               	.LASF141:
 4715 007f 696E 6974 		.string	"init_kernel"
 4715      5F6B 6572 
 4715      6E65 6C00 
 4716               	.LASF43:
 4717 008b 5F6C 6266 		.string	"_lbfsize"
 4717      7369 7A65 
 4717      00
 4718               	.LASF145:
 4719 0094 5F5F 6C6F 		.string	"__locale_t"
 4719      6361 6C65 
 4719      5F74 00
 4720               	.LASF125:
 4721 009f 696E 6974 		.string	"init_timer"
 4721      5F74 696D 
 4721      6572 00
 4722               	.LASF114:
 4723 00aa 6E65 7874 		.string	"next_task"
 4723      5F74 6173 
 4723      6B00 
 4724               	.LASF93:
 4725 00b4 5F6D 6272 		.string	"_mbrtowc_state"
 4725      746F 7763 
 4725      5F73 7461 
 4725      7465 00
 4726               	.LASF107:
 4727 00c3 6E65 7874 		.string	"next"
 4727      00
 4728               	.LASF88:
 4729 00c8 5F77 6374 		.string	"_wctomb_state"
 4729      6F6D 625F 
 4729      7374 6174 
 4729      6500 
 4730               	.LASF28:
 4731 00d6 5F5F 746D 		.string	"__tm_sec"
 4731      5F73 6563 
 4731      00
 4732               	.LASF6:
 4733 00df 6C6F 6E67 		.string	"long long int"
 4733      206C 6F6E 
 4733      6720 696E 
 4733      7400 
 4734               	.LASF0:
 4735 00ed 7369 676E 		.string	"signed char"
 4735      6564 2063 
 4735      6861 7200 
 4736               	.LASF49:
 4737 00f9 5F75 6275 		.string	"_ubuf"
 4737      6600 
 4738               	.LASF38:
 4739 00ff 5F62 6173 		.string	"_base"
 4739      6500 
 4740               	.LASF30:
 4741 0105 5F5F 746D 		.string	"__tm_hour"
 4741      5F68 6F75 
 4741      7200 
 4742               	.LASF128:


 4743 010f 7761 6B65 		.string	"wakeup"
 4743      7570 00
 4744               	.LASF127:
 4745 0116 7461 736B 		.string	"task_id"
 4745      5F69 6400 
 4746               	.LASF44:
 4747 011e 5F63 6F6F 		.string	"_cookie"
 4747      6B69 6500 
 4748               	.LASF4:
 4749 0126 6C6F 6E67 		.string	"long int"
 4749      2069 6E74 
 4749      00
 4750               	.LASF143:
 4751 012f 6D74 6B5F 		.string	"mtk_c.c"
 4751      632E 6300 
 4752               	.LASF41:
 4753 0137 5F66 6C61 		.string	"_flags"
 4753      6773 00
 4754               	.LASF98:
 4755 013e 4649 4C45 		.string	"FILE"
 4755      00
 4756               	.LASF59:
 4757 0143 5F73 7464 		.string	"_stdin"
 4757      696E 00
 4758               	.LASF109:
 4759 014a 7573 7461 		.string	"ustack"
 4759      636B 00
 4760               	.LASF51:
 4761 0151 5F62 6C6B 		.string	"_blksize"
 4761      7369 7A65 
 4761      00
 4762               	.LASF120:
 4763 015a 636F 6D30 		.string	"com0out"
 4763      6F75 7400 
 4764               	.LASF71:
 4765 0162 5F63 7674 		.string	"_cvtbuf"
 4765      6275 6600 
 4766               	.LASF52:
 4767 016a 5F6F 6666 		.string	"_offset"
 4767      7365 7400 
 4768               	.LASF110:
 4769 0172 7373 7461 		.string	"sstack"
 4769      636B 00
 4770               	.LASF94:
 4771 0179 5F6D 6273 		.string	"_mbsrtowcs_state"
 4771      7274 6F77 
 4771      6373 5F73 
 4771      7461 7465 
 4771      00
 4772               	.LASF92:
 4773 018a 5F6D 6272 		.string	"_mbrlen_state"
 4773      6C65 6E5F 
 4773      7374 6174 
 4773      6500 
 4774               	.LASF101:
 4775 0198 7461 736B 		.string	"task_list"
 4775      5F6C 6973 


 4775      7400 
 4776               	.LASF24:
 4777 01a2 5F73 6967 		.string	"_sign"
 4777      6E00 
 4778               	.LASF21:
 4779 01a8 5F66 6C6F 		.string	"_flock_t"
 4779      636B 5F74 
 4779      00
 4780               	.LASF61:
 4781 01b1 5F73 7464 		.string	"_stderr"
 4781      6572 7200 
 4782               	.LASF26:
 4783 01b9 5F42 6967 		.string	"_Bigint"
 4783      696E 7400 
 4784               	.LASF83:
 4785 01c1 5F67 616D 		.string	"_gamma_signgam"
 4785      6D61 5F73 
 4785      6967 6E67 
 4785      616D 00
 4786               	.LASF45:
 4787 01d0 5F72 6561 		.string	"_read"
 4787      6400 
 4788               	.LASF67:
 4789 01d6 5F72 6573 		.string	"_result_k"
 4789      756C 745F 
 4789      6B00 
 4790               	.LASF27:
 4791 01e0 5F5F 746D 		.string	"__tm"
 4791      00
 4792               	.LASF9:
 4793 01e5 756E 7369 		.string	"unsigned int"
 4793      676E 6564 
 4793      2069 6E74 
 4793      00
 4794               	.LASF117:
 4795 01f2 7461 736B 		.string	"task_tab"
 4795      5F74 6162 
 4795      00
 4796               	.LASF15:
 4797 01fb 5F5F 7763 		.string	"__wchb"
 4797      6862 00
 4798               	.LASF60:
 4799 0202 5F73 7464 		.string	"_stdout"
 4799      6F75 7400 
 4800               	.LASF70:
 4801 020a 5F63 7674 		.string	"_cvtlen"
 4801      6C65 6E00 
 4802               	.LASF112:
 4803 0212 6375 7272 		.string	"curr_task"
 4803      5F74 6173 
 4803      6B00 
 4804               	.LASF5:
 4805 021c 6C6F 6E67 		.string	"long unsigned int"
 4805      2075 6E73 
 4805      6967 6E65 
 4805      6420 696E 
 4805      7400 


 4806               	.LASF42:
 4807 022e 5F66 696C 		.string	"_file"
 4807      6500 
 4808               	.LASF102:
 4809 0234 5345 4D41 		.string	"SEMAPHORE_TYPE"
 4809      5048 4F52 
 4809      455F 5459 
 4809      5045 00
 4810               	.LASF122:
 4811 0243 636F 6D31 		.string	"com1out"
 4811      6F75 7400 
 4812               	.LASF3:
 4813 024b 7368 6F72 		.string	"short unsigned int"
 4813      7420 756E 
 4813      7369 676E 
 4813      6564 2069 
 4813      6E74 00
 4814               	.LASF129:
 4815 025e 736C 6565 		.string	"sleep"
 4815      7000 
 4816               	.LASF99:
 4817 0264 5441 534B 		.string	"TASK_ID_TYPE"
 4817      5F49 445F 
 4817      5459 5045 
 4817      00
 4818               	.LASF90:
 4819 0271 5F73 6967 		.string	"_signal_buf"
 4819      6E61 6C5F 
 4819      6275 6600 
 4820               	.LASF81:
 4821 027d 5F61 7363 		.string	"_asctime_buf"
 4821      7469 6D65 
 4821      5F62 7566 
 4821      00
 4822               	.LASF66:
 4823 028a 5F72 6573 		.string	"_result"
 4823      756C 7400 
 4824               	.LASF14:
 4825 0292 5F5F 7763 		.string	"__wch"
 4825      6800 
 4826               	.LASF105:
 4827 0298 7072 696F 		.string	"priority"
 4827      7269 7479 
 4827      00
 4828               	.LASF10:
 4829 02a1 7769 6E74 		.string	"wint_t"
 4829      5F74 00
 4830               	.LASF54:
 4831 02a8 5F6C 6F63 		.string	"_lock"
 4831      6B00 
 4832               	.LASF136:
 4833 02ae 696E 6974 		.string	"init_stack"
 4833      5F73 7461 
 4833      636B 00
 4834               	.LASF56:
 4835 02b9 5F66 6C61 		.string	"_flags2"
 4835      6773 3200 


 4836               	.LASF104:
 4837 02c1 7374 6163 		.string	"stack_ptr"
 4837      6B5F 7074 
 4837      7200 
 4838               	.LASF103:
 4839 02cb 7461 736B 		.string	"task_addr"
 4839      5F61 6464 
 4839      7200 
 4840               	.LASF46:
 4841 02d5 5F77 7269 		.string	"_write"
 4841      7465 00
 4842               	.LASF33:
 4843 02dc 5F5F 746D 		.string	"__tm_year"
 4843      5F79 6561 
 4843      7200 
 4844               	.LASF108:
 4845 02e6 5443 425F 		.string	"TCB_TYPE"
 4845      5459 5045 
 4845      00
 4846               	.LASF20:
 4847 02ef 5F4C 4F43 		.string	"_LOCK_RECURSIVE_T"
 4847      4B5F 5245 
 4847      4355 5253 
 4847      4956 455F 
 4847      5400 
 4848               	.LASF32:
 4849 0301 5F5F 746D 		.string	"__tm_mon"
 4849      5F6D 6F6E 
 4849      00
 4850               	.LASF11:
 4851 030a 5F6F 6666 		.string	"_off_t"
 4851      5F74 00
 4852               	.LASF121:
 4853 0311 636F 6D31 		.string	"com1in"
 4853      696E 00
 4854               	.LASF138:
 4855 0318 7368 6F72 		.string	"short_ssp"
 4855      745F 7373 
 4855      7000 
 4856               	.LASF133:
 4857 0322 7461 736B 		.string	"task_ptr"
 4857      5F70 7472 
 4857      00
 4858               	.LASF69:
 4859 032b 5F66 7265 		.string	"_freelist"
 4859      656C 6973 
 4859      7400 
 4860               	.LASF142:
 4861 0335 474E 5520 		.string	"GNU C17 11.4.0 -mcpu=68000 -msoft-float -g -O2 -fomit-frame-pointer"
 4861      4331 3720 
 4861      3131 2E34 
 4861      2E30 202D 
 4861      6D63 7075 
 4862               	.LASF140:
 4863 0379 6265 6769 		.string	"begin_sch"
 4863      6E5F 7363 
 4863      6800 


 4864               	.LASF147:
 4865 0383 6164 6471 		.string	"addq"
 4865      00
 4866               	.LASF116:
 4867 0388 7365 6D61 		.string	"semaphore"
 4867      7068 6F72 
 4867      6500 
 4868               	.LASF1:
 4869 0392 756E 7369 		.string	"unsigned char"
 4869      676E 6564 
 4869      2063 6861 
 4869      7200 
 4870               	.LASF72:
 4871 03a0 5F6E 6577 		.string	"_new"
 4871      00
 4872               	.LASF119:
 4873 03a5 636F 6D30 		.string	"com0in"
 4873      696E 00
 4874               	.LASF97:
 4875 03ac 5F68 5F65 		.string	"_h_errno"
 4875      7272 6E6F 
 4875      00
 4876               	.LASF2:
 4877 03b5 7368 6F72 		.string	"short int"
 4877      7420 696E 
 4877      7400 
 4878               	.LASF35:
 4879 03bf 5F5F 746D 		.string	"__tm_yday"
 4879      5F79 6461 
 4879      7900 
 4880               	.LASF37:
 4881 03c9 5F5F 7362 		.string	"__sbuf"
 4881      7566 00
 4882               	.LASF131:
 4883 03d0 705F 626F 		.string	"p_body"
 4883      6479 00
 4884               	.LASF137:
 4885 03d7 696E 745F 		.string	"int_ssp"
 4885      7373 7000 
 4886               	.LASF75:
 4887 03df 5F5F 4649 		.string	"__FILE"
 4887      4C45 00
 4888               	.LASF18:
 4889 03e6 5F6D 6273 		.string	"_mbstate_t"
 4889      7461 7465 
 4889      5F74 00
 4890               	.LASF40:
 4891 03f1 5F5F 7346 		.string	"__sFILE"
 4891      494C 4500 
 4892               	.LASF55:
 4893 03f9 5F6D 6273 		.string	"_mbstate"
 4893      7461 7465 
 4893      00
 4894               	.LASF84:
 4895 0402 5F72 616E 		.string	"_rand_next"
 4895      645F 6E65 
 4895      7874 00


 4896               	.LASF86:
 4897 040d 5F6D 626C 		.string	"_mblen_state"
 4897      656E 5F73 
 4897      7461 7465 
 4897      00
 4898               	.LASF62:
 4899 041a 5F69 6E63 		.string	"_inc"
 4899      00
 4900               	.LASF115:
 4901 041f 7265 6164 		.string	"ready"
 4901      7900 
 4902               	.LASF64:
 4903 0425 5F6C 6F63 		.string	"_locale"
 4903      616C 6500 
 4904               	.LASF65:
 4905 042d 5F5F 636C 		.string	"__cleanup"
 4905      6561 6E75 
 4905      7000 
 4906               	.LASF23:
 4907 0437 5F6D 6178 		.string	"_maxwds"
 4907      7764 7300 
 4908               	.LASF57:
 4909 043f 5F72 6565 		.string	"_reent"
 4909      6E74 00
 4910               	.LASF77:
 4911 0446 5F73 6565 		.string	"_seed"
 4911      6400 
 4912               	.LASF16:
 4913 044c 5F5F 636F 		.string	"__count"
 4913      756E 7400 
 4914               	.LASF17:
 4915 0454 5F5F 7661 		.string	"__value"
 4915      6C75 6500 
 4916               	.LASF47:
 4917 045c 5F73 6565 		.string	"_seek"
 4917      6B00 
 4918               	.LASF12:
 4919 0462 5F66 706F 		.string	"_fpos_t"
 4919      735F 7400 
 4920               	.LASF8:
 4921 046a 6C6F 6E67 		.string	"long double"
 4921      2064 6F75 
 4921      626C 6500 
 4922               	.LASF58:
 4923 0476 5F65 7272 		.string	"_errno"
 4923      6E6F 00
 4924               	.LASF74:
 4925 047d 6368 6172 		.string	"char"
 4925      00
 4926               	.LASF29:
 4927 0482 5F5F 746D 		.string	"__tm_min"
 4927      5F6D 696E 
 4927      00
 4928               	.LASF78:
 4929 048b 5F6D 756C 		.string	"_mult"
 4929      7400 
 4930               	.LASF111:


 4931 0491 5354 4143 		.string	"STACK_TYPE"
 4931      4B5F 5459 
 4931      5045 00
 4932               	.LASF134:
 4933 049c 7175 655F 		.string	"que_ptr"
 4933      7074 7200 
 4934               	.LASF22:
 4935 04a4 5F6E 6578 		.string	"_next"
 4935      7400 
 4936               	.LASF80:
 4937 04aa 5F73 7472 		.string	"_strtok_last"
 4937      746F 6B5F 
 4937      6C61 7374 
 4937      00
 4938               	.LASF123:
 4939 04b7 7377 7463 		.string	"swtch"
 4939      6800 
 4940               	.LASF144:
 4941 04bd 2F68 6F6D 		.string	"/home/students/4494672686/sw2-3/theme3/mtk_new"
 4941      652F 7374 
 4941      7564 656E 
 4941      7473 2F34 
 4941      3439 3436 
 4942               	.LASF146:
 4943 04ec 7363 6865 		.string	"sched"
 4943      6400 
 4944               	.LASF132:
 4945 04f2 725F 6964 		.string	"r_id"
 4945      00
 4946               	.LASF79:
 4947 04f7 5F61 6464 		.string	"_add"
 4947      00
 4948               	.LASF19:
 4949 04fc 5F5F 554C 		.string	"__ULong"
 4949      6F6E 6700 
 4950               	.LASF91:
 4951 0504 5F67 6574 		.string	"_getdate_err"
 4951      6461 7465 
 4951      5F65 7272 
 4951      00
 4952               	.LASF106:
 4953 0511 7374 6174 		.string	"status"
 4953      7573 00
 4954               	.LASF25:
 4955 0518 5F77 6473 		.string	"_wds"
 4955      00
 4956               	.LASF34:
 4957 051d 5F5F 746D 		.string	"__tm_wday"
 4957      5F77 6461 
 4957      7900 
 4958               	.LASF13:
 4959 0527 5F73 7369 		.string	"_ssize_t"
 4959      7A65 5F74 
 4959      00
 4960               	.LASF89:
 4961 0530 5F6C 3634 		.string	"_l64a_buf"
 4961      615F 6275 


 4961      6600 
 4962               	.LASF73:
 4963 053a 5F73 6967 		.string	"_sig_func"
 4963      5F66 756E 
 4963      6300 
 4964               	.LASF130:
 4965 0544 765F 626F 		.string	"v_body"
 4965      6479 00
 4966               	.LASF50:
 4967 054b 5F6E 6275 		.string	"_nbuf"
 4967      6600 
 4968               	.LASF36:
 4969 0551 5F5F 746D 		.string	"__tm_isdst"
 4969      5F69 7364 
 4969      7374 00
 4970               	.LASF82:
 4971 055c 5F6C 6F63 		.string	"_localtime_buf"
 4971      616C 7469 
 4971      6D65 5F62 
 4971      7566 00
 4972               	.LASF48:
 4973 056b 5F63 6C6F 		.string	"_close"
 4973      7365 00
 4974               	.LASF85:
 4975 0572 5F72 3438 		.string	"_r48"
 4975      00
 4976               	.LASF124:
 4977 0577 6669 7273 		.string	"first_task"
 4977      745F 7461 
 4977      736B 00
 4978               	.LASF113:
 4979 0582 6E65 775F 		.string	"new_task"
 4979      7461 736B 
 4979      00
 4980               	.LASF87:
 4981 058b 5F6D 6274 		.string	"_mbtowc_state"
 4981      6F77 635F 
 4981      7374 6174 
 4981      6500 
 4982               	.LASF68:
 4983 0599 5F70 3573 		.string	"_p5s"
 4983      00
 4984               	.LASF31:
 4985 059e 5F5F 746D 		.string	"__tm_mday"
 4985      5F6D 6461 
 4985      7900 
 4986               		.ident	"GCC: (GNU) 11.4.0"




   1               	.global outbyte
   2               	.include "equdefs.inc"
   1               	***********************************************
   2               	** 変数の定義
   3               	***********************************************
   4               	
   5               	***************************************************************
   6               	** 各種レジスタ定義
   7               	***************************************************************
   8               	***************
   9               	** レジスタ群の先頭
  10               	***************
  11               	.equ REGBASE, 	0xFFF000 	| DMAP を使用．
  12               	.equ IOBASE, 	0x00d00000
  13               		
  14               	***************
  15               	** 割り込み関係のレジスタ
  16               	***************
  17               	.equ IVR, REGBASE+0x300 	| 割り込みベクタレジスタ
  18               	.equ IMR, REGBASE+0x304 	| 割り込みマスクレジスタ
  19               	.equ ISR, REGBASE+0x30c 	| 割り込みステータスレジスタ
  20               	.equ IPR, REGBASE+0x310 	| 割り込みペンディングレジスタ
  21               		
  22               	***************
  23               	** タイマ関係のレジスタ
  24               	***************
  25               	.equ TCTL1, 	REGBASE+0x600 	| タイマ１コントロールレジスタ
  26               	.equ TPRER1, 	REGBASE+0x602 	| タイマ１プリスケーラレジスタ
  27               	.equ TCMP1, 	REGBASE+0x604 	| タイマ１コンペアレジスタ
  28               	.equ TCN1, 	REGBASE+0x608 	| タイマ１カウンタレジスタ
  29               	.equ TSTAT1, 	REGBASE+0x60a 	| タイマ１ステータスレジスタ
  30               		
  31               	***************
  32               	** UART1（送受信）関係のレジスタ
  33               	***************
  34               	.equ USTCNT1, 	REGBASE+0x900 	| UART1 ステータス/コントロールレジスタ
  35               	.equ UBAUD1, 	REGBASE+0x902 	| UART1 ボーコントロールレジスタ
  36               	.equ URX1, 	REGBASE+0x904 	| UART1 受信レジスタ
  37               	.equ UTX1, 	REGBASE+0x906 	| UART1 送信レジスタ
  38               		
  39               	***************
  40               	** LED
  41               	***************
  42               	.equ LED7, IOBASE+0x000002f
  43               	.equ LED6, IOBASE+0x000002d
  44               	.equ LED5, IOBASE+0x000002b
  45               	.equ LED4, IOBASE+0x0000029
  46               	.equ LED3, IOBASE+0x000003f
  47               	.equ LED2, IOBASE+0x000003d
  48               	.equ LED1, IOBASE+0x000003b
  49               	.equ LED0, IOBASE+0x0000039
  50               	
  51               	***************
  52               	** システムコール番号
  53               	***************
  54               	.equ SYSCALL_NUM_GETSTRING, 	1
  55               	.equ SYSCALL_NUM_PUTSTRING, 	2


  56               	.equ SYSCALL_NUM_RESET_TIMER, 	3
  57               	.equ SYSCALL_NUM_SET_TIMER, 	4
  58               	
  59               	****************************************************************
  60               	*** 初期値のあるデータ領域
  61               	****************************************************************
  62               	.section .data
  63               	
  64               	.even 				| \n: 次の行へ (ラインフィード)
  65 0000 0000      	TTC:	.dc.w 0
  66               	.even
  67               		
  68               	****************************************************************
  69               	*** 初期値の無いデータ領域
  70               	****************************************************************
  71               	.section .bss
  72 0000 0000 0000 	BUF: .ds.b 256 			| BUF[256]
  72      0000 0000 
  72      0000 0000 
  72      0000 0000 
  72      0000 0000 
  73               	
  74               	.even
  75 0100 0000 0000 	USR_STK: .ds.b 0x4000 		| ユーザスタック領域
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  76               	.even
  77               	USR_STK_TOP: 			| ユーザスタック領域の最後尾
  78               		
  79               	*******************************
  80               	.section .bss
  81 4100 0000 0000 	Queue0:		.ds.b	274	/* 受信用キュー */
  81      0000 0000 
  81      0000 0000 
  81      0000 0000 
  81      0000 0000 
  82 4212 0000 0000 	Queue1:		.ds.b	274	/* 送信用キュー */
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  83               	
  84               	.section .text
  85               	.equ	BF_START, 	0		/* キューのデータ領域の先頭 */
  86               	.equ	BF_END, 	255		/* キューのデータ領域の最後尾 */
  87               	.equ	top, 		256		/* キューの先頭アドレスを保持へのオフセット */
  88               	.equ	out, 		260		/* 次にpopするデータアドレスを保持へのオフセット */
  89               	.equ	in, 		264		/* 次にinするデータアドレスを保持へのオフセット */
  90               	.equ	bottom, 	268		/* キューの最終アドレスを保持へのオフセット */
  91               	.equ	s, 		272		/* キュー内の要素数を保持する変数へのオフセット */
  92               	
  93               	
  94               	
   3               	
   4               	.text


   5               	.even
   6               	
   7               	outbyte:
   8 0000 48E7 7080 		movem.l	%d1-%d3/%a0, -(%sp)
   9               		
  10               	outbyte_loop:
  11 0004 7002      		move.l  #SYSCALL_NUM_PUTSTRING, %d0
  12               		
  13 0006 204F      		movea.l	%sp, %a0
  14 0008 D1FC 0000 		adda.l	#20, %a0
  14      0014 
  15 000e 2210      		move.l (%a0), %d1
  16               		
  17 0010 240F      	   	move.l  %sp, %d2                 
  18 0012 0682 0000 	   	addi.l  #27, %d2
  18      001B 
  19               	   	
  20 0018 7601      	    	move.l  #1, %d3                  
  21 001a 4E40      	    	trap    #0    
  22               	
  23 001c 0C80 0000 		cmpi.l   #0, %d0
  23      0000 
  24 0022 6700 FFE0 		beq	outbyte_loop
  25               	
  26 0026 4CDF 010E 		movem.l  (%sp)+, %d1-%d3/%a0
  27 002a 4E75      		rts
  28               	




   1               	#NO_APP
   2               		.file	"test3.c"
   3               		.text
   4               	.Ltext0:
   5               		.cfi_sections	.debug_frame
   6               		.globl	__mulsi3
   7               		.align	2
   8               		.globl	random_generator
   9               		.type	random_generator, @function
  10               	random_generator:
  11               	.LFB3:
  12               		.file 1 "test3.c"
   1:test3.c       **** #include <stdio.h>
   2:test3.c       **** #include "mtk_c.h"
   3:test3.c       **** #include "test3.h"
   4:test3.c       **** 
   5:test3.c       **** CARD cards[TOTAL_CARDS];
   6:test3.c       **** 
   7:test3.c       **** // -------------------- グローバル変数 --------------------
   8:test3.c       **** int round_count;
   9:test3.c       **** int top_index;
  10:test3.c       **** 
  11:test3.c       **** //int score[2];
  12:test3.c       **** int score1;
  13:test3.c       **** int score2;
  14:test3.c       **** //char guess[2];
  15:test3.c       **** int guess1;
  16:test3.c       **** int guess2;
  17:test3.c       **** 
  18:test3.c       **** int is_finish;
  19:test3.c       **** int winner;
  20:test3.c       **** volatile int flg0 = 0; 
  21:test3.c       **** volatile int flg1 = 0; // プレイヤー入力完了フラグ
  22:test3.c       **** 
  23:test3.c       **** // -------------------- 乱数生成 --------------------
  24:test3.c       **** volatile unsigned int rand_counter = 2;
  25:test3.c       **** 
  26:test3.c       **** void random_generator()
  27:test3.c       **** {
  13               		.loc 1 27 1 view -0
  14               		.cfi_startproc
  15 0000 2F0A      		move.l %a2,-(%sp)
  16               		.cfi_def_cfa_offset 8
  17               		.cfi_offset 10, -8
  18 0002 45F9 0000 		lea __mulsi3,%a2
  18      0000 
  19               	.L2:
  28:test3.c       ****     while (1)
  20               		.loc 1 28 5 discriminator 1 view .LVU1
  29:test3.c       ****     {
  30:test3.c       ****         rand_counter = (rand_counter * 1103515245 + 12345) & 0x7FFFFFFF;
  21               		.loc 1 30 9 discriminator 1 view .LVU2
  22               		.loc 1 30 38 is_stmt 0 discriminator 1 view .LVU3
  23 0008 2039 0000 		move.l rand_counter,%d0
  23      0000 
  24 000e 2F3C 41C6 		move.l #1103515245,-(%sp)
  24      4E6D 


  25               		.cfi_def_cfa_offset 12
  26 0014 2F00      		move.l %d0,-(%sp)
  27               		.cfi_def_cfa_offset 16
  28 0016 4E92      		jsr (%a2)
  29               	.LVL0:
  30 0018 508F      		addq.l #8,%sp
  31               		.cfi_def_cfa_offset 8
  32               		.loc 1 30 51 discriminator 1 view .LVU4
  33 001a 0680 0000 		add.l #12345,%d0
  33      3039 
  34               		.loc 1 30 60 discriminator 1 view .LVU5
  35 0020 0880 001F 		bclr #31,%d0
  36               		.loc 1 30 22 discriminator 1 view .LVU6
  37 0024 23C0 0000 		move.l %d0,rand_counter
  37      0000 
  28:test3.c       ****     while (1)
  38               		.loc 1 28 11 is_stmt 1 discriminator 1 view .LVU7
  28:test3.c       ****     while (1)
  39               		.loc 1 28 5 discriminator 1 view .LVU8
  40               		.loc 1 30 9 discriminator 1 view .LVU9
  41               		.loc 1 30 38 is_stmt 0 discriminator 1 view .LVU10
  42 002a 2039 0000 		move.l rand_counter,%d0
  42      0000 
  43 0030 2F3C 41C6 		move.l #1103515245,-(%sp)
  43      4E6D 
  44               		.cfi_def_cfa_offset 12
  45 0036 2F00      		move.l %d0,-(%sp)
  46               		.cfi_def_cfa_offset 16
  47 0038 4E92      		jsr (%a2)
  48               	.LVL1:
  49 003a 508F      		addq.l #8,%sp
  50               		.cfi_def_cfa_offset 8
  51               		.loc 1 30 51 discriminator 1 view .LVU11
  52 003c 0680 0000 		add.l #12345,%d0
  52      3039 
  53               		.loc 1 30 60 discriminator 1 view .LVU12
  54 0042 0880 001F 		bclr #31,%d0
  55               		.loc 1 30 22 discriminator 1 view .LVU13
  56 0046 23C0 0000 		move.l %d0,rand_counter
  56      0000 
  28:test3.c       ****     while (1)
  57               		.loc 1 28 11 is_stmt 1 discriminator 1 view .LVU14
  58 004c 60BA      		jra .L2
  59               		.cfi_endproc
  60               	.LFE3:
  61               		.size	random_generator, .-random_generator
  62               		.section	.rodata.str1.1,"aMS",@progbits,1
  63               	.LC0:
  64 0000 506C 6179 		.string	"Player 0: \346\254\241\343\201\256\343\202\253\343\203\274\343\203\211\343\201\257 High(1
  64      6572 2030 
  64      3A20 E6AC 
  64      A1E3 81AE 
  64      E382 ABE3 
  65               	.LC1:
  66 0042 2564 00   		.string	"%d"
  67               		.text
  68               		.align	2


  69               		.globl	player0
  70               		.type	player0, @function
  71               	player0:
  72               	.LFB8:
  31:test3.c       ****     }
  32:test3.c       **** }
  33:test3.c       **** 
  34:test3.c       **** unsigned int get_random()
  35:test3.c       **** {
  36:test3.c       ****     return rand_counter;
  37:test3.c       **** }
  38:test3.c       **** 
  39:test3.c       **** // -------------------- カード初期化 --------------------
  40:test3.c       **** void init_card()
  41:test3.c       **** {
  42:test3.c       ****     for (int i = 0; i < TOTAL_CARDS; i++)
  43:test3.c       ****     {
  44:test3.c       ****         cards[i].number = i + 1;
  45:test3.c       ****     }
  46:test3.c       **** }
  47:test3.c       **** 
  48:test3.c       **** void shuffle_card()
  49:test3.c       **** {
  50:test3.c       ****     for (int i = TOTAL_CARDS - 1; i > 0; i--)
  51:test3.c       ****     {
  52:test3.c       ****         unsigned int r = get_random() % (i + 1);
  53:test3.c       ****         int temp = cards[i].number;
  54:test3.c       ****         cards[i].number = cards[r].number;
  55:test3.c       ****         cards[r].number = temp;
  56:test3.c       ****     }
  57:test3.c       **** }
  58:test3.c       **** 
  59:test3.c       **** // -------------------- ラウンド表示 --------------------
  60:test3.c       **** void first_display_round()
  61:test3.c       **** {
  62:test3.c       ****         fprintf(com0out, "----------------------\n");
  63:test3.c       ****         fprintf(com0out, "Round %d\n", round_count);
  64:test3.c       ****         fprintf(com0out, "Current Number: %d\n", cards[top_index].number);
  65:test3.c       ****         fprintf(com0out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
  66:test3.c       **** 
  67:test3.c       ****         fprintf(com1out, "----------------------\n");
  68:test3.c       ****         fprintf(com1out, "Round %d\n", round_count);
  69:test3.c       ****         fprintf(com1out, "Current Number: %d\n", cards[top_index].number);
  70:test3.c       ****         fprintf(com1out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
  71:test3.c       **** }
  72:test3.c       **** 
  73:test3.c       **** // -------------------- Player 0 --------------------
  74:test3.c       **** void player0(){
  73               		.loc 1 74 15 view -0
  74               		.cfi_startproc
  75 004e 598F      		subq.l #4,%sp
  76               		.cfi_def_cfa_offset 8
  77 0050 48E7 203C 		movem.l #8252,-(%sp)
  78               		.cfi_def_cfa_offset 28
  79               		.cfi_offset 2, -28
  80               		.cfi_offset 10, -24
  81               		.cfi_offset 11, -20


  82               		.cfi_offset 12, -16
  83               		.cfi_offset 13, -12
  75:test3.c       ****     P(0);
  84               		.loc 1 75 5 view .LVU16
  85 0054 42A7      		clr.l -(%sp)
  86               		.cfi_def_cfa_offset 32
  87 0056 47F9 0000 		lea P,%a3
  87      0000 
  88 005c 4E93      		jsr (%a3)
  89               	.LVL2:
  90 005e 588F      		addq.l #4,%sp
  91               		.cfi_def_cfa_offset 28
  92 0060 4BF9 0000 		lea fprintf,%a5
  92      0000 
  93 0066 7414      		moveq #20,%d2
  94 0068 D48F      		add.l %sp,%d2
  95 006a 49F9 0000 		lea fscanf,%a4
  95      0000 
  96 0070 45F9 0000 		lea V,%a2
  96      0000 
  97               	.L7:
  76:test3.c       ****     while (1)
  98               		.loc 1 76 5 view .LVU17
  99               	.LBB9:
  77:test3.c       ****     {
  78:test3.c       ****         fprintf(com0out, "Player 0: 次のカードは High(1) か Low(0) か? (Score=%d): ", score
 100               		.loc 1 78 9 view .LVU18
 101 0076 2F39 0000 		move.l score1,-(%sp)
 101      0000 
 102               		.cfi_def_cfa_offset 32
 103 007c 4879 0000 		pea .LC0
 103      0000 
 104               		.cfi_def_cfa_offset 36
 105 0082 2F39 0000 		move.l com0out,-(%sp)
 105      0000 
 106               		.cfi_def_cfa_offset 40
 107 0088 4E95      		jsr (%a5)
 108               	.LVL3:
  79:test3.c       **** 
  80:test3.c       ****         int buf1;
 109               		.loc 1 80 9 view .LVU19
  81:test3.c       ****         fscanf(com0in, "%d", &buf1);
 110               		.loc 1 81 9 view .LVU20
 111 008a 2F02      		move.l %d2,-(%sp)
 112               		.cfi_def_cfa_offset 44
 113 008c 4879 0000 		pea .LC1
 113      0000 
 114               		.cfi_def_cfa_offset 48
 115 0092 2F39 0000 		move.l com0in,-(%sp)
 115      0000 
 116               		.cfi_def_cfa_offset 52
 117 0098 4E94      		jsr (%a4)
 118               	.LVL4:
  82:test3.c       ****         
  83:test3.c       ****     if (buf1 == 1){	//High
 119               		.loc 1 83 5 view .LVU21
 120               		.loc 1 83 14 is_stmt 0 view .LVU22


 121 009a 202F 002C 		move.l 44(%sp),%d0
 122               		.loc 1 83 8 view .LVU23
 123 009e 4FEF 0018 		lea (24,%sp),%sp
 124               		.cfi_def_cfa_offset 28
 125 00a2 7201      		moveq #1,%d1
 126 00a4 B280      		cmp.l %d0,%d1
 127 00a6 6706      		jeq .L6
  84:test3.c       ****         guess1 = 1;}
  85:test3.c       ****     else if (buf1 == 0){	//Low
 128               		.loc 1 85 10 is_stmt 1 view .LVU24
 129               		.loc 1 85 13 is_stmt 0 view .LVU25
 130 00a8 4A80      		tst.l %d0
 131 00aa 661E      		jne .L8
 132 00ac 70FF      		moveq #-1,%d0
 133               	.L6:
  84:test3.c       ****         guess1 = 1;}
 134               		.loc 1 84 16 view .LVU26
 135 00ae 23C0 0000 		move.l %d0,guess1
 135      0000 
  86:test3.c       ****         guess1= -1;}
  87:test3.c       ****     else{
  88:test3.c       ****         guess1 = 1;		//default High
  89:test3.c       ****         }
  90:test3.c       ****         
  91:test3.c       ****         V(0);
 136               		.loc 1 91 9 is_stmt 1 view .LVU27
 137 00b4 42A7      		clr.l -(%sp)
 138               		.cfi_def_cfa_offset 32
 139 00b6 4E92      		jsr (%a2)
 140               	.LVL5:
  92:test3.c       ****         V(2);
 141               		.loc 1 92 9 view .LVU28
 142 00b8 4878 0002 		pea 2.w
 143               		.cfi_def_cfa_offset 36
 144 00bc 4E92      		jsr (%a2)
 145               	.LVL6:
  93:test3.c       ****         P(3);
 146               		.loc 1 93 9 view .LVU29
 147 00be 4878 0003 		pea 3.w
 148               		.cfi_def_cfa_offset 40
 149 00c2 4E93      		jsr (%a3)
 150               	.LVL7:
 151               	.LBE9:
  76:test3.c       ****     {
 152               		.loc 1 76 11 view .LVU30
  77:test3.c       ****         fprintf(com0out, "Player 0: 次のカードは High(1) か Low(0) か? (Score=%d): ", score
 153               		.loc 1 77 5 is_stmt 0 view .LVU31
 154 00c4 4FEF 000C 		lea (12,%sp),%sp
 155               		.cfi_def_cfa_offset 28
 156 00c8 60AC      		jra .L7
 157               	.L8:
 158               	.LBB10:
 159 00ca 7001      		moveq #1,%d0
  84:test3.c       ****     else if (buf1 == 0){	//Low
 160               		.loc 1 84 16 view .LVU32
 161 00cc 23C0 0000 		move.l %d0,guess1
 161      0000 


  91:test3.c       ****         V(2);
 162               		.loc 1 91 9 is_stmt 1 view .LVU33
 163 00d2 42A7      		clr.l -(%sp)
 164               		.cfi_def_cfa_offset 32
 165 00d4 4E92      		jsr (%a2)
 166               	.LVL8:
  92:test3.c       ****         P(3);
 167               		.loc 1 92 9 view .LVU34
 168 00d6 4878 0002 		pea 2.w
 169               		.cfi_def_cfa_offset 36
 170 00da 4E92      		jsr (%a2)
 171               	.LVL9:
 172               		.loc 1 93 9 view .LVU35
 173 00dc 4878 0003 		pea 3.w
 174               		.cfi_def_cfa_offset 40
 175 00e0 4E93      		jsr (%a3)
 176               	.LVL10:
 177               	.LBE10:
  76:test3.c       ****     {
 178               		.loc 1 76 11 view .LVU36
  77:test3.c       ****         fprintf(com0out, "Player 0: 次のカードは High(1) か Low(0) か? (Score=%d): ", score
 179               		.loc 1 77 5 is_stmt 0 view .LVU37
 180 00e2 4FEF 000C 		lea (12,%sp),%sp
 181               		.cfi_def_cfa_offset 28
 182 00e6 608E      		jra .L7
 183               		.cfi_endproc
 184               	.LFE8:
 185               		.size	player0, .-player0
 186               		.align	2
 187               		.globl	player1
 188               		.type	player1, @function
 189               	player1:
 190               	.LFB9:
  94:test3.c       ****     }
  95:test3.c       **** }
  96:test3.c       **** 
  97:test3.c       **** // -------------------- Player 1 --------------------
  98:test3.c       **** void player1(){
 191               		.loc 1 98 15 is_stmt 1 view -0
 192               		.cfi_startproc
 193 00e8 598F      		subq.l #4,%sp
 194               		.cfi_def_cfa_offset 8
 195 00ea 48E7 203C 		movem.l #8252,-(%sp)
 196               		.cfi_def_cfa_offset 28
 197               		.cfi_offset 2, -28
 198               		.cfi_offset 10, -24
 199               		.cfi_offset 11, -20
 200               		.cfi_offset 12, -16
 201               		.cfi_offset 13, -12
  99:test3.c       ****     P(1);
 202               		.loc 1 99 5 view .LVU39
 203 00ee 4878 0001 		pea 1.w
 204               		.cfi_def_cfa_offset 32
 205 00f2 47F9 0000 		lea P,%a3
 205      0000 
 206 00f8 4E93      		jsr (%a3)
 207               	.LVL11:


 208 00fa 588F      		addq.l #4,%sp
 209               		.cfi_def_cfa_offset 28
 210 00fc 4BF9 0000 		lea fprintf,%a5
 210      0000 
 211 0102 7414      		moveq #20,%d2
 212 0104 D48F      		add.l %sp,%d2
 213 0106 49F9 0000 		lea fscanf,%a4
 213      0000 
 214 010c 45F9 0000 		lea V,%a2
 214      0000 
 215               	.L16:
 100:test3.c       ****     while (1)
 216               		.loc 1 100 5 view .LVU40
 217               	.LBB11:
 101:test3.c       ****     {
 102:test3.c       ****         fprintf(com1out, "Player 0: 次のカードは High(1) か Low(0) か? (Score=%d): ", score
 218               		.loc 1 102 9 view .LVU41
 219 0112 2F39 0000 		move.l score2,-(%sp)
 219      0000 
 220               		.cfi_def_cfa_offset 32
 221 0118 4879 0000 		pea .LC0
 221      0000 
 222               		.cfi_def_cfa_offset 36
 223 011e 2F39 0000 		move.l com1out,-(%sp)
 223      0000 
 224               		.cfi_def_cfa_offset 40
 225 0124 4E95      		jsr (%a5)
 226               	.LVL12:
 103:test3.c       **** 
 104:test3.c       ****         int buf2;
 227               		.loc 1 104 9 view .LVU42
 105:test3.c       ****         fscanf(com1in, "%d", &buf2);
 228               		.loc 1 105 9 view .LVU43
 229 0126 2F02      		move.l %d2,-(%sp)
 230               		.cfi_def_cfa_offset 44
 231 0128 4879 0000 		pea .LC1
 231      0000 
 232               		.cfi_def_cfa_offset 48
 233 012e 2F39 0000 		move.l com1in,-(%sp)
 233      0000 
 234               		.cfi_def_cfa_offset 52
 235 0134 4E94      		jsr (%a4)
 236               	.LVL13:
 106:test3.c       ****         
 107:test3.c       ****     if (buf2 == 1){	//High
 237               		.loc 1 107 5 view .LVU44
 238               		.loc 1 107 14 is_stmt 0 view .LVU45
 239 0136 202F 002C 		move.l 44(%sp),%d0
 240               		.loc 1 107 8 view .LVU46
 241 013a 4FEF 0018 		lea (24,%sp),%sp
 242               		.cfi_def_cfa_offset 28
 243 013e 7201      		moveq #1,%d1
 244 0140 B280      		cmp.l %d0,%d1
 245 0142 6706      		jeq .L15
 108:test3.c       ****         guess2 = 1;}
 109:test3.c       ****     else if (buf2 == 0){	//Low
 246               		.loc 1 109 10 is_stmt 1 view .LVU47


 247               		.loc 1 109 13 is_stmt 0 view .LVU48
 248 0144 4A80      		tst.l %d0
 249 0146 6620      		jne .L17
 250 0148 70FF      		moveq #-1,%d0
 251               	.L15:
 108:test3.c       ****         guess2 = 1;}
 252               		.loc 1 108 16 view .LVU49
 253 014a 23C0 0000 		move.l %d0,guess2
 253      0000 
 110:test3.c       ****         guess2= -1;}
 111:test3.c       ****     else{
 112:test3.c       ****         guess2 = 1;		//default High
 113:test3.c       ****         }
 114:test3.c       ****         
 115:test3.c       ****         V(1);
 254               		.loc 1 115 9 is_stmt 1 view .LVU50
 255 0150 4878 0001 		pea 1.w
 256               		.cfi_def_cfa_offset 32
 257 0154 4E92      		jsr (%a2)
 258               	.LVL14:
 116:test3.c       ****         V(2);
 259               		.loc 1 116 9 view .LVU51
 260 0156 4878 0002 		pea 2.w
 261               		.cfi_def_cfa_offset 36
 262 015a 4E92      		jsr (%a2)
 263               	.LVL15:
 117:test3.c       ****         P(3);
 264               		.loc 1 117 9 view .LVU52
 265 015c 4878 0003 		pea 3.w
 266               		.cfi_def_cfa_offset 40
 267 0160 4E93      		jsr (%a3)
 268               	.LVL16:
 269               	.LBE11:
 100:test3.c       ****     {
 270               		.loc 1 100 11 view .LVU53
 101:test3.c       ****         fprintf(com1out, "Player 0: 次のカードは High(1) か Low(0) か? (Score=%d): ", score
 271               		.loc 1 101 5 is_stmt 0 view .LVU54
 272 0162 4FEF 000C 		lea (12,%sp),%sp
 273               		.cfi_def_cfa_offset 28
 274 0166 60AA      		jra .L16
 275               	.L17:
 276               	.LBB12:
 277 0168 7001      		moveq #1,%d0
 108:test3.c       ****     else if (buf2 == 0){	//Low
 278               		.loc 1 108 16 view .LVU55
 279 016a 23C0 0000 		move.l %d0,guess2
 279      0000 
 115:test3.c       ****         V(2);
 280               		.loc 1 115 9 is_stmt 1 view .LVU56
 281 0170 4878 0001 		pea 1.w
 282               		.cfi_def_cfa_offset 32
 283 0174 4E92      		jsr (%a2)
 284               	.LVL17:
 116:test3.c       ****         P(3);
 285               		.loc 1 116 9 view .LVU57
 286 0176 4878 0002 		pea 2.w
 287               		.cfi_def_cfa_offset 36


 288 017a 4E92      		jsr (%a2)
 289               	.LVL18:
 290               		.loc 1 117 9 view .LVU58
 291 017c 4878 0003 		pea 3.w
 292               		.cfi_def_cfa_offset 40
 293 0180 4E93      		jsr (%a3)
 294               	.LVL19:
 295               	.LBE12:
 100:test3.c       ****     {
 296               		.loc 1 100 11 view .LVU59
 101:test3.c       ****         fprintf(com1out, "Player 0: 次のカードは High(1) か Low(0) か? (Score=%d): ", score
 297               		.loc 1 101 5 is_stmt 0 view .LVU60
 298 0182 4FEF 000C 		lea (12,%sp),%sp
 299               		.cfi_def_cfa_offset 28
 300 0186 608A      		jra .L16
 301               		.cfi_endproc
 302               	.LFE9:
 303               		.size	player1, .-player1
 304               		.section	.rodata.str1.1
 305               	.LC2:
 306 0045 506C 6179 		.string	"Player 1"
 306      6572 2031 
 306      00
 307               	.LC3:
 308 004e 4472 6177 		.string	"Draw"
 308      00
 309               	.LC4:
 310 0053 506C 6179 		.string	"Player 0"
 310      6572 2030 
 310      00
 311               	.LC5:
 312 005c 2D2D 2D2D 		.string	"----------------------\n"
 312      2D2D 2D2D 
 312      2D2D 2D2D 
 312      2D2D 2D2D 
 312      2D2D 2D2D 
 313               	.LC6:
 314 0074 526F 756E 		.string	"Round %d\n"
 314      6420 2564 
 314      0A00 
 315               	.LC7:
 316 007e 4375 7272 		.string	"Current Number: %d\n"
 316      656E 7420 
 316      4E75 6D62 
 316      6572 3A20 
 316      2564 0A00 
 317               	.LC8:
 318 0092 506C 6179 		.string	"Player0 Score=%d, Player1 Score=%d\n"
 318      6572 3020 
 318      5363 6F72 
 318      653D 2564 
 318      2C20 506C 
 319               	.LC9:
 320 00b6 2A2A 2A20 		.string	"*** Game Over! ***\nWinner: %s\n"
 320      4761 6D65 
 320      204F 7665 
 320      7221 202A 


 320      2A2A 0A57 
 321               		.text
 322               		.align	2
 323               		.globl	judgment
 324               		.type	judgment, @function
 325               	judgment:
 326               	.LFB10:
 118:test3.c       ****     }
 119:test3.c       **** }
 120:test3.c       **** 
 121:test3.c       **** // -------------------- 結果判定 --------------------
 122:test3.c       **** void judgment()
 123:test3.c       **** {
 327               		.loc 1 123 1 is_stmt 1 view -0
 328               		.cfi_startproc
 329 0188 48E7 003E 		movem.l #62,-(%sp)
 330               		.cfi_def_cfa_offset 24
 331               		.cfi_offset 10, -24
 332               		.cfi_offset 11, -20
 333               		.cfi_offset 12, -16
 334               		.cfi_offset 13, -12
 335               		.cfi_offset 14, -8
 336 018c 49F9 0000 		lea P,%a4
 336      0000 
 337 0192 47F9 0000 		lea cards,%a3
 337      0000 
 338 0198 4DF9 0000 		lea fwrite,%a6
 338      0000 
 339 019e 45F9 0000 		lea fprintf,%a2
 339      0000 
 340 01a4 4BF9 0000 		lea V,%a5
 340      0000 
 124:test3.c       ****     while (1)
 341               		.loc 1 124 5 view .LVU62
 342               	.LBB13:
 125:test3.c       ****     {
 126:test3.c       ****         P(0);
 343               		.loc 1 126 9 view .LVU63
 344 01aa 42A7      		clr.l -(%sp)
 345               		.cfi_def_cfa_offset 28
 346 01ac 4E94      		jsr (%a4)
 347               	.LVL20:
 127:test3.c       ****         P(1);
 348               		.loc 1 127 9 view .LVU64
 349 01ae 4878 0001 		pea 1.w
 350               		.cfi_def_cfa_offset 32
 351 01b2 4E94      		jsr (%a4)
 352               	.LVL21:
 128:test3.c       ****         P(2);
 353               		.loc 1 128 9 view .LVU65
 354 01b4 4878 0002 		pea 2.w
 355               		.cfi_def_cfa_offset 36
 356 01b8 4E94      		jsr (%a4)
 357               	.LVL22:
 129:test3.c       ****         P(2);
 358               		.loc 1 129 9 view .LVU66
 359 01ba 4878 0002 		pea 2.w


 360               		.cfi_def_cfa_offset 40
 361 01be 4E94      		jsr (%a4)
 362               	.LVL23:
 130:test3.c       ****         int next_number = cards[++top_index].number;
 363               		.loc 1 130 9 view .LVU67
 364               		.loc 1 130 33 is_stmt 0 view .LVU68
 365 01c0 2039 0000 		move.l top_index,%d0
 365      0000 
 366 01c6 2200      		move.l %d0,%d1
 367 01c8 5281      		addq.l #1,%d1
 368               		.loc 1 130 13 view .LVU69
 369 01ca 23C1 0000 		move.l %d1,top_index
 369      0000 
 370 01d0 D281      		add.l %d1,%d1
 371 01d2 D281      		add.l %d1,%d1
 372 01d4 2233 1800 		move.l (%a3,%d1.l),%d1
 373               	.LVL24:
 131:test3.c       ****         if (next_number > cards[top_index - 1].number)
 374               		.loc 1 131 9 is_stmt 1 view .LVU70
 375               		.loc 1 131 47 is_stmt 0 view .LVU71
 376 01d8 D080      		add.l %d0,%d0
 377 01da D080      		add.l %d0,%d0
 378 01dc 2033 0800 		move.l (%a3,%d0.l),%d0
 379               		.loc 1 131 12 view .LVU72
 380 01e0 4FEF 0010 		lea (16,%sp),%sp
 381               		.cfi_def_cfa_offset 24
 382 01e4 B280      		cmp.l %d0,%d1
 383 01e6 6F00 015E 		jle .L24
 384               	.L45:
 132:test3.c       ****         {
 133:test3.c       ****             if (guess1== 1)
 385               		.loc 1 133 13 is_stmt 1 view .LVU73
 386               		.loc 1 133 16 is_stmt 0 view .LVU74
 387 01ea 7001      		moveq #1,%d0
 388 01ec B0B9 0000 		cmp.l guess1.l,%d0
 388      0000 
 389 01f2 6700 02C0 		jeq .L44
 134:test3.c       ****                 score1++;
 135:test3.c       ****             if (guess2 == 1)
 390               		.loc 1 135 13 is_stmt 1 view .LVU75
 391               		.loc 1 135 16 is_stmt 0 view .LVU76
 392 01f6 7201      		moveq #1,%d1
 393               	.LVL25:
 394               		.loc 1 135 16 view .LVU77
 395 01f8 B2B9 0000 		cmp.l guess2.l,%d1
 395      0000 
 396 01fe 6700 0164 		jeq .L41
 397               	.L27:
 136:test3.c       ****                 score2++;
 137:test3.c       ****         }
 138:test3.c       ****         else if (next_number < cards[top_index - 1].number)
 139:test3.c       ****         {
 140:test3.c       ****             if (guess1 == -1)
 141:test3.c       ****                 score1++;
 142:test3.c       ****             if (guess2 == -1)
 143:test3.c       ****                 score2++;
 144:test3.c       ****         }


 145:test3.c       **** 
 146:test3.c       ****         round_count++;
 398               		.loc 1 146 9 is_stmt 1 view .LVU78
 399               		.loc 1 146 20 is_stmt 0 view .LVU79
 400 0202 52B9 0000 		addq.l #1,round_count
 400      0000 
 147:test3.c       **** 
 148:test3.c       ****         fprintf(com0out, "----------------------\n");
 401               		.loc 1 148 9 is_stmt 1 view .LVU80
 402 0208 2F39 0000 		move.l com0out,-(%sp)
 402      0000 
 403               		.cfi_def_cfa_offset 28
 404 020e 4878 0017 		pea 23.w
 405               		.cfi_def_cfa_offset 32
 406 0212 4878 0001 		pea 1.w
 407               		.cfi_def_cfa_offset 36
 408 0216 4879 0000 		pea .LC5
 408      0000 
 409               		.cfi_def_cfa_offset 40
 410 021c 4E96      		jsr (%a6)
 411               	.LVL26:
 149:test3.c       ****         fprintf(com0out, "Round %d\n", round_count);
 412               		.loc 1 149 9 view .LVU81
 413 021e 2F39 0000 		move.l round_count,-(%sp)
 413      0000 
 414               		.cfi_def_cfa_offset 44
 415 0224 4879 0000 		pea .LC6
 415      0000 
 416               		.cfi_def_cfa_offset 48
 417 022a 2F39 0000 		move.l com0out,-(%sp)
 417      0000 
 418               		.cfi_def_cfa_offset 52
 419 0230 4E92      		jsr (%a2)
 420               	.LVL27:
 150:test3.c       ****         fprintf(com0out, "Current Number: %d\n", cards[top_index].number);
 421               		.loc 1 150 9 view .LVU82
 422 0232 2039 0000 		move.l top_index,%d0
 422      0000 
 423 0238 D080      		add.l %d0,%d0
 424 023a D080      		add.l %d0,%d0
 425 023c 2F33 0800 		move.l (%a3,%d0.l),-(%sp)
 426               		.cfi_def_cfa_offset 56
 427 0240 4879 0000 		pea .LC7
 427      0000 
 428               		.cfi_def_cfa_offset 60
 429 0246 2F39 0000 		move.l com0out,-(%sp)
 429      0000 
 430               		.cfi_def_cfa_offset 64
 431 024c 4E92      		jsr (%a2)
 432               	.LVL28:
 151:test3.c       ****         fprintf(com0out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
 433               		.loc 1 151 9 view .LVU83
 434 024e 4FEF 0024 		lea (36,%sp),%sp
 435               		.cfi_def_cfa_offset 28
 436 0252 2EB9 0000 		move.l score2,(%sp)
 436      0000 
 437 0258 2F39 0000 		move.l score1,-(%sp)


 437      0000 
 438               		.cfi_def_cfa_offset 32
 439 025e 4879 0000 		pea .LC8
 439      0000 
 440               		.cfi_def_cfa_offset 36
 441 0264 2F39 0000 		move.l com0out,-(%sp)
 441      0000 
 442               		.cfi_def_cfa_offset 40
 443 026a 4E92      		jsr (%a2)
 444               	.LVL29:
 152:test3.c       **** 
 153:test3.c       ****         fprintf(com1out, "----------------------\n");
 445               		.loc 1 153 9 view .LVU84
 446 026c 2F39 0000 		move.l com1out,-(%sp)
 446      0000 
 447               		.cfi_def_cfa_offset 44
 448 0272 4878 0017 		pea 23.w
 449               		.cfi_def_cfa_offset 48
 450 0276 4878 0001 		pea 1.w
 451               		.cfi_def_cfa_offset 52
 452 027a 4879 0000 		pea .LC5
 452      0000 
 453               		.cfi_def_cfa_offset 56
 454 0280 4E96      		jsr (%a6)
 455               	.LVL30:
 154:test3.c       ****         fprintf(com1out, "Round %d\n", round_count);
 456               		.loc 1 154 9 view .LVU85
 457 0282 4FEF 001C 		lea (28,%sp),%sp
 458               		.cfi_def_cfa_offset 28
 459 0286 2EB9 0000 		move.l round_count,(%sp)
 459      0000 
 460 028c 4879 0000 		pea .LC6
 460      0000 
 461               		.cfi_def_cfa_offset 32
 462 0292 2F39 0000 		move.l com1out,-(%sp)
 462      0000 
 463               		.cfi_def_cfa_offset 36
 464 0298 4E92      		jsr (%a2)
 465               	.LVL31:
 155:test3.c       ****         fprintf(com1out, "Current Number: %d\n", cards[top_index].number);
 466               		.loc 1 155 9 view .LVU86
 467 029a 2039 0000 		move.l top_index,%d0
 467      0000 
 468 02a0 D080      		add.l %d0,%d0
 469 02a2 D080      		add.l %d0,%d0
 470 02a4 2F33 0800 		move.l (%a3,%d0.l),-(%sp)
 471               		.cfi_def_cfa_offset 40
 472 02a8 4879 0000 		pea .LC7
 472      0000 
 473               		.cfi_def_cfa_offset 44
 474 02ae 2F39 0000 		move.l com1out,-(%sp)
 474      0000 
 475               		.cfi_def_cfa_offset 48
 476 02b4 4E92      		jsr (%a2)
 477               	.LVL32:
 156:test3.c       ****         fprintf(com1out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
 478               		.loc 1 156 9 view .LVU87


 479 02b6 2F39 0000 		move.l score2,-(%sp)
 479      0000 
 480               		.cfi_def_cfa_offset 52
 481 02bc 2F39 0000 		move.l score1,-(%sp)
 481      0000 
 482               		.cfi_def_cfa_offset 56
 483 02c2 4879 0000 		pea .LC8
 483      0000 
 484               		.cfi_def_cfa_offset 60
 485 02c8 2F39 0000 		move.l com1out,-(%sp)
 485      0000 
 486               		.cfi_def_cfa_offset 64
 487 02ce 4E92      		jsr (%a2)
 488               	.LVL33:
 157:test3.c       **** 
 158:test3.c       ****         if (round_count >= 5 || top_index >= TOTAL_CARDS)
 489               		.loc 1 158 9 view .LVU88
 490               		.loc 1 158 12 is_stmt 0 view .LVU89
 491 02d0 4FEF 0028 		lea (40,%sp),%sp
 492               		.cfi_def_cfa_offset 24
 493 02d4 7004      		moveq #4,%d0
 494 02d6 B0B9 0000 		cmp.l round_count.l,%d0
 494      0000 
 495 02dc 6D00 016A 		jlt .L30
 496               	.L47:
 497               		.loc 1 158 30 discriminator 1 view .LVU90
 498 02e0 720C      		moveq #12,%d1
 499 02e2 B2B9 0000 		cmp.l top_index.l,%d1
 499      0000 
 500 02e8 6D00 015E 		jlt .L30
 159:test3.c       ****         {
 160:test3.c       ****             is_finish = 1;
 161:test3.c       ****             winner = (score1 > score2)   ? 0
 162:test3.c       ****                      : (score1 < score2) ? 1
 163:test3.c       ****                                              : -1;
 164:test3.c       **** 
 165:test3.c       ****             fprintf(com0out, "*** Game Over! ***\nWinner: %s\n",
 166:test3.c       ****                     (winner == -1)  ? "Draw"
 167:test3.c       ****                     : (winner == 0) ? "Player 0"
 168:test3.c       ****                                     : "Player 1");
 169:test3.c       **** 
 170:test3.c       ****             fprintf(com1out, "*** Game Over! ***\nWinner: %s\n",
 171:test3.c       ****                     (winner == -1)  ? "Draw"
 172:test3.c       ****                     : (winner == 0) ? "Player 0"
 173:test3.c       ****                                     : "Player 1");
 174:test3.c       ****             while(1){
 175:test3.c       ****             }
 176:test3.c       ****                                     
 177:test3.c       ****             
 178:test3.c       ****         }
 179:test3.c       ****         V(3);
 501               		.loc 1 179 9 is_stmt 1 view .LVU91
 502 02ec 4878 0003 		pea 3.w
 503               		.cfi_def_cfa_offset 28
 504 02f0 4E95      		jsr (%a5)
 505               	.LVL34:
 180:test3.c       ****         V(3);


 506               		.loc 1 180 9 view .LVU92
 507 02f2 4878 0003 		pea 3.w
 508               		.cfi_def_cfa_offset 32
 509 02f6 4E95      		jsr (%a5)
 510               	.LVL35:
 181:test3.c       ****         V(0);
 511               		.loc 1 181 9 view .LVU93
 512 02f8 42A7      		clr.l -(%sp)
 513               		.cfi_def_cfa_offset 36
 514 02fa 4E95      		jsr (%a5)
 515               	.LVL36:
 182:test3.c       ****         V(1);
 516               		.loc 1 182 9 view .LVU94
 517 02fc 4878 0001 		pea 1.w
 518               		.cfi_def_cfa_offset 40
 519 0300 4E95      		jsr (%a5)
 520               	.LVL37:
 521               	.LBE13:
 124:test3.c       ****     {
 522               		.loc 1 124 11 view .LVU95
 125:test3.c       ****         P(0);
 523               		.loc 1 125 5 is_stmt 0 view .LVU96
 524 0302 4FEF 0010 		lea (16,%sp),%sp
 525               		.cfi_def_cfa_offset 24
 124:test3.c       ****     {
 526               		.loc 1 124 5 is_stmt 1 view .LVU97
 527               	.LBB14:
 126:test3.c       ****         P(1);
 528               		.loc 1 126 9 view .LVU98
 529 0306 42A7      		clr.l -(%sp)
 530               		.cfi_def_cfa_offset 28
 531 0308 4E94      		jsr (%a4)
 532               	.LVL38:
 127:test3.c       ****         P(2);
 533               		.loc 1 127 9 view .LVU99
 534 030a 4878 0001 		pea 1.w
 535               		.cfi_def_cfa_offset 32
 536 030e 4E94      		jsr (%a4)
 537               	.LVL39:
 128:test3.c       ****         P(2);
 538               		.loc 1 128 9 view .LVU100
 539 0310 4878 0002 		pea 2.w
 540               		.cfi_def_cfa_offset 36
 541 0314 4E94      		jsr (%a4)
 542               	.LVL40:
 129:test3.c       ****         int next_number = cards[++top_index].number;
 543               		.loc 1 129 9 view .LVU101
 544 0316 4878 0002 		pea 2.w
 545               		.cfi_def_cfa_offset 40
 546 031a 4E94      		jsr (%a4)
 547               	.LVL41:
 130:test3.c       ****         if (next_number > cards[top_index - 1].number)
 548               		.loc 1 130 9 view .LVU102
 130:test3.c       ****         if (next_number > cards[top_index - 1].number)
 549               		.loc 1 130 33 is_stmt 0 view .LVU103
 550 031c 2039 0000 		move.l top_index,%d0
 550      0000 


 551 0322 2200      		move.l %d0,%d1
 552 0324 5281      		addq.l #1,%d1
 130:test3.c       ****         if (next_number > cards[top_index - 1].number)
 553               		.loc 1 130 13 view .LVU104
 554 0326 23C1 0000 		move.l %d1,top_index
 554      0000 
 555 032c D281      		add.l %d1,%d1
 556 032e D281      		add.l %d1,%d1
 557 0330 2233 1800 		move.l (%a3,%d1.l),%d1
 558               	.LVL42:
 131:test3.c       ****         {
 559               		.loc 1 131 9 is_stmt 1 view .LVU105
 131:test3.c       ****         {
 560               		.loc 1 131 47 is_stmt 0 view .LVU106
 561 0334 D080      		add.l %d0,%d0
 562 0336 D080      		add.l %d0,%d0
 563 0338 2033 0800 		move.l (%a3,%d0.l),%d0
 131:test3.c       ****         {
 564               		.loc 1 131 12 view .LVU107
 565 033c 4FEF 0010 		lea (16,%sp),%sp
 566               		.cfi_def_cfa_offset 24
 567 0340 B280      		cmp.l %d0,%d1
 568 0342 6E00 FEA6 		jgt .L45
 569               	.L24:
 138:test3.c       ****         {
 570               		.loc 1 138 14 is_stmt 1 view .LVU108
 138:test3.c       ****         {
 571               		.loc 1 138 17 is_stmt 0 view .LVU109
 572 0346 B280      		cmp.l %d0,%d1
 573 0348 6C00 FEB8 		jge .L27
 140:test3.c       ****                 score1++;
 574               		.loc 1 140 13 is_stmt 1 view .LVU110
 140:test3.c       ****                 score1++;
 575               		.loc 1 140 16 is_stmt 0 view .LVU111
 576 034c 70FF      		moveq #-1,%d0
 577 034e B0B9 0000 		cmp.l guess1.l,%d0
 577      0000 
 578 0354 6700 0174 		jeq .L46
 142:test3.c       ****                 score2++;
 579               		.loc 1 142 13 is_stmt 1 view .LVU112
 142:test3.c       ****                 score2++;
 580               		.loc 1 142 16 is_stmt 0 view .LVU113
 581 0358 72FF      		moveq #-1,%d1
 582               	.LVL43:
 142:test3.c       ****                 score2++;
 583               		.loc 1 142 16 view .LVU114
 584 035a B2B9 0000 		cmp.l guess2.l,%d1
 584      0000 
 585 0360 6600 FEA0 		jne .L27
 586               	.L41:
 143:test3.c       ****         }
 587               		.loc 1 143 17 is_stmt 1 view .LVU115
 143:test3.c       ****         }
 588               		.loc 1 143 23 is_stmt 0 view .LVU116
 589 0364 52B9 0000 		addq.l #1,score2
 589      0000 
 146:test3.c       **** 


 590               		.loc 1 146 9 is_stmt 1 view .LVU117
 146:test3.c       **** 
 591               		.loc 1 146 20 is_stmt 0 view .LVU118
 592 036a 52B9 0000 		addq.l #1,round_count
 592      0000 
 148:test3.c       ****         fprintf(com0out, "Round %d\n", round_count);
 593               		.loc 1 148 9 is_stmt 1 view .LVU119
 594 0370 2F39 0000 		move.l com0out,-(%sp)
 594      0000 
 595               		.cfi_def_cfa_offset 28
 596 0376 4878 0017 		pea 23.w
 597               		.cfi_def_cfa_offset 32
 598 037a 4878 0001 		pea 1.w
 599               		.cfi_def_cfa_offset 36
 600 037e 4879 0000 		pea .LC5
 600      0000 
 601               		.cfi_def_cfa_offset 40
 602 0384 4E96      		jsr (%a6)
 603               	.LVL44:
 149:test3.c       ****         fprintf(com0out, "Current Number: %d\n", cards[top_index].number);
 604               		.loc 1 149 9 view .LVU120
 605 0386 2F39 0000 		move.l round_count,-(%sp)
 605      0000 
 606               		.cfi_def_cfa_offset 44
 607 038c 4879 0000 		pea .LC6
 607      0000 
 608               		.cfi_def_cfa_offset 48
 609 0392 2F39 0000 		move.l com0out,-(%sp)
 609      0000 
 610               		.cfi_def_cfa_offset 52
 611 0398 4E92      		jsr (%a2)
 612               	.LVL45:
 150:test3.c       ****         fprintf(com0out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
 613               		.loc 1 150 9 view .LVU121
 614 039a 2039 0000 		move.l top_index,%d0
 614      0000 
 615 03a0 D080      		add.l %d0,%d0
 616 03a2 D080      		add.l %d0,%d0
 617 03a4 2F33 0800 		move.l (%a3,%d0.l),-(%sp)
 618               		.cfi_def_cfa_offset 56
 619 03a8 4879 0000 		pea .LC7
 619      0000 
 620               		.cfi_def_cfa_offset 60
 621 03ae 2F39 0000 		move.l com0out,-(%sp)
 621      0000 
 622               		.cfi_def_cfa_offset 64
 623 03b4 4E92      		jsr (%a2)
 624               	.LVL46:
 151:test3.c       **** 
 625               		.loc 1 151 9 view .LVU122
 626 03b6 4FEF 0024 		lea (36,%sp),%sp
 627               		.cfi_def_cfa_offset 28
 628 03ba 2EB9 0000 		move.l score2,(%sp)
 628      0000 
 629 03c0 2F39 0000 		move.l score1,-(%sp)
 629      0000 
 630               		.cfi_def_cfa_offset 32


 631 03c6 4879 0000 		pea .LC8
 631      0000 
 632               		.cfi_def_cfa_offset 36
 633 03cc 2F39 0000 		move.l com0out,-(%sp)
 633      0000 
 634               		.cfi_def_cfa_offset 40
 635 03d2 4E92      		jsr (%a2)
 636               	.LVL47:
 153:test3.c       ****         fprintf(com1out, "Round %d\n", round_count);
 637               		.loc 1 153 9 view .LVU123
 638 03d4 2F39 0000 		move.l com1out,-(%sp)
 638      0000 
 639               		.cfi_def_cfa_offset 44
 640 03da 4878 0017 		pea 23.w
 641               		.cfi_def_cfa_offset 48
 642 03de 4878 0001 		pea 1.w
 643               		.cfi_def_cfa_offset 52
 644 03e2 4879 0000 		pea .LC5
 644      0000 
 645               		.cfi_def_cfa_offset 56
 646 03e8 4E96      		jsr (%a6)
 647               	.LVL48:
 154:test3.c       ****         fprintf(com1out, "Current Number: %d\n", cards[top_index].number);
 648               		.loc 1 154 9 view .LVU124
 649 03ea 4FEF 001C 		lea (28,%sp),%sp
 650               		.cfi_def_cfa_offset 28
 651 03ee 2EB9 0000 		move.l round_count,(%sp)
 651      0000 
 652 03f4 4879 0000 		pea .LC6
 652      0000 
 653               		.cfi_def_cfa_offset 32
 654 03fa 2F39 0000 		move.l com1out,-(%sp)
 654      0000 
 655               		.cfi_def_cfa_offset 36
 656 0400 4E92      		jsr (%a2)
 657               	.LVL49:
 155:test3.c       ****         fprintf(com1out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
 658               		.loc 1 155 9 view .LVU125
 659 0402 2039 0000 		move.l top_index,%d0
 659      0000 
 660 0408 D080      		add.l %d0,%d0
 661 040a D080      		add.l %d0,%d0
 662 040c 2F33 0800 		move.l (%a3,%d0.l),-(%sp)
 663               		.cfi_def_cfa_offset 40
 664 0410 4879 0000 		pea .LC7
 664      0000 
 665               		.cfi_def_cfa_offset 44
 666 0416 2F39 0000 		move.l com1out,-(%sp)
 666      0000 
 667               		.cfi_def_cfa_offset 48
 668 041c 4E92      		jsr (%a2)
 669               	.LVL50:
 156:test3.c       **** 
 670               		.loc 1 156 9 view .LVU126
 671 041e 2F39 0000 		move.l score2,-(%sp)
 671      0000 
 672               		.cfi_def_cfa_offset 52


 673 0424 2F39 0000 		move.l score1,-(%sp)
 673      0000 
 674               		.cfi_def_cfa_offset 56
 675 042a 4879 0000 		pea .LC8
 675      0000 
 676               		.cfi_def_cfa_offset 60
 677 0430 2F39 0000 		move.l com1out,-(%sp)
 677      0000 
 678               		.cfi_def_cfa_offset 64
 679 0436 4E92      		jsr (%a2)
 680               	.LVL51:
 158:test3.c       ****         {
 681               		.loc 1 158 9 view .LVU127
 158:test3.c       ****         {
 682               		.loc 1 158 12 is_stmt 0 view .LVU128
 683 0438 4FEF 0028 		lea (40,%sp),%sp
 684               		.cfi_def_cfa_offset 24
 685 043c 7004      		moveq #4,%d0
 686 043e B0B9 0000 		cmp.l round_count.l,%d0
 686      0000 
 687 0444 6C00 FE9A 		jge .L47
 688               	.L30:
 160:test3.c       ****             winner = (score1 > score2)   ? 0
 689               		.loc 1 160 13 is_stmt 1 view .LVU129
 160:test3.c       ****             winner = (score1 > score2)   ? 0
 690               		.loc 1 160 23 is_stmt 0 view .LVU130
 691 0448 7001      		moveq #1,%d0
 692 044a 23C0 0000 		move.l %d0,is_finish
 692      0000 
 161:test3.c       ****                      : (score1 < score2) ? 1
 693               		.loc 1 161 13 is_stmt 1 view .LVU131
 161:test3.c       ****                      : (score1 < score2) ? 1
 694               		.loc 1 161 30 is_stmt 0 view .LVU132
 695 0450 2239 0000 		move.l score1,%d1
 695      0000 
 696 0456 2039 0000 		move.l score2,%d0
 696      0000 
 162:test3.c       ****                                              : -1;
 697               		.loc 1 162 22 view .LVU133
 698 045c B081      		cmp.l %d1,%d0
 699 045e 6D00 00CA 		jlt .L48
 163:test3.c       **** 
 700               		.loc 1 163 46 discriminator 1 view .LVU134
 701 0462 6F7C      		jle .L49
 702 0464 7201      		moveq #1,%d1
 168:test3.c       **** 
 703               		.loc 1 168 37 view .LVU135
 704 0466 203C 0000 		move.l #.LC2,%d0
 704      0000 
 705               	.L32:
 161:test3.c       ****                      : (score1 < score2) ? 1
 706               		.loc 1 161 20 discriminator 3 view .LVU136
 707 046c 23C1 0000 		move.l %d1,winner
 707      0000 
 165:test3.c       ****                     (winner == -1)  ? "Draw"
 708               		.loc 1 165 13 discriminator 3 view .LVU137
 709 0472 2F00      		move.l %d0,-(%sp)


 710               		.cfi_def_cfa_offset 28
 711 0474 4879 0000 		pea .LC9
 711      0000 
 712               		.cfi_def_cfa_offset 32
 713 047a 2F39 0000 		move.l com0out,-(%sp)
 713      0000 
 714               		.cfi_def_cfa_offset 36
 715 0480 4E92      		jsr (%a2)
 716               	.LVL52:
 170:test3.c       ****                     (winner == -1)  ? "Draw"
 717               		.loc 1 170 13 is_stmt 1 discriminator 3 view .LVU138
 171:test3.c       ****                     : (winner == 0) ? "Player 0"
 718               		.loc 1 171 29 is_stmt 0 discriminator 3 view .LVU139
 719 0482 2039 0000 		move.l winner,%d0
 719      0000 
 170:test3.c       ****                     (winner == -1)  ? "Draw"
 720               		.loc 1 170 13 discriminator 3 view .LVU140
 721 0488 4FEF 000C 		lea (12,%sp),%sp
 722               		.cfi_def_cfa_offset 24
 723 048c 72FF      		moveq #-1,%d1
 724 048e B280      		cmp.l %d0,%d1
 725 0490 677C      		jeq .L38
 726               	.L50:
 173:test3.c       ****             while(1){
 727               		.loc 1 173 37 view .LVU141
 728 0492 4A80      		tst.l %d0
 729 0494 6700 00A0 		jeq .L39
 730 0498 203C 0000 		move.l #.LC2,%d0
 730      0000 
 170:test3.c       ****                     (winner == -1)  ? "Draw"
 731               		.loc 1 170 13 view .LVU142
 732 049e 2F00      		move.l %d0,-(%sp)
 733               		.cfi_def_cfa_offset 28
 734 04a0 4879 0000 		pea .LC9
 734      0000 
 735               		.cfi_def_cfa_offset 32
 736 04a6 2F39 0000 		move.l com1out,-(%sp)
 736      0000 
 737               		.cfi_def_cfa_offset 36
 738 04ac 4E92      		jsr (%a2)
 739               	.LVL53:
 740 04ae 4FEF 000C 		lea (12,%sp),%sp
 741               		.cfi_def_cfa_offset 24
 742               	.L34:
 174:test3.c       ****             }
 743               		.loc 1 174 13 is_stmt 1 discriminator 1 view .LVU143
 175:test3.c       ****                                     
 744               		.loc 1 175 13 discriminator 1 view .LVU144
 174:test3.c       ****             }
 745               		.loc 1 174 18 discriminator 1 view .LVU145
 174:test3.c       ****             }
 746               		.loc 1 174 13 discriminator 1 view .LVU146
 175:test3.c       ****                                     
 747               		.loc 1 175 13 discriminator 1 view .LVU147
 174:test3.c       ****             }
 748               		.loc 1 174 18 discriminator 1 view .LVU148
 749 04b2 60FE      		jra .L34


 750               	.LVL54:
 751               	.L44:
 134:test3.c       ****             if (guess2 == 1)
 752               		.loc 1 134 17 view .LVU149
 134:test3.c       ****             if (guess2 == 1)
 753               		.loc 1 134 23 is_stmt 0 view .LVU150
 754 04b4 52B9 0000 		addq.l #1,score1
 754      0000 
 135:test3.c       ****                 score2++;
 755               		.loc 1 135 13 is_stmt 1 view .LVU151
 135:test3.c       ****                 score2++;
 756               		.loc 1 135 16 is_stmt 0 view .LVU152
 757 04ba 7201      		moveq #1,%d1
 758               	.LVL55:
 135:test3.c       ****                 score2++;
 759               		.loc 1 135 16 view .LVU153
 760 04bc B2B9 0000 		cmp.l guess2.l,%d1
 760      0000 
 761 04c2 6600 FD3E 		jne .L27
 762 04c6 6000 FE9C 		jra .L41
 763               	.LVL56:
 764               	.L46:
 141:test3.c       ****             if (guess2 == -1)
 765               		.loc 1 141 17 is_stmt 1 view .LVU154
 141:test3.c       ****             if (guess2 == -1)
 766               		.loc 1 141 23 is_stmt 0 view .LVU155
 767 04ca 52B9 0000 		addq.l #1,score1
 767      0000 
 142:test3.c       ****                 score2++;
 768               		.loc 1 142 13 is_stmt 1 view .LVU156
 142:test3.c       ****                 score2++;
 769               		.loc 1 142 16 is_stmt 0 view .LVU157
 770 04d0 72FF      		moveq #-1,%d1
 771               	.LVL57:
 142:test3.c       ****                 score2++;
 772               		.loc 1 142 16 view .LVU158
 773 04d2 B2B9 0000 		cmp.l guess2.l,%d1
 773      0000 
 774 04d8 6600 FD28 		jne .L27
 775 04dc 6000 FE86 		jra .L41
 776               	.L49:
 163:test3.c       **** 
 777               		.loc 1 163 46 view .LVU159
 778 04e0 72FF      		moveq #-1,%d1
 165:test3.c       ****                     (winner == -1)  ? "Draw"
 779               		.loc 1 165 13 view .LVU160
 780 04e2 203C 0000 		move.l #.LC3,%d0
 780      0000 
 161:test3.c       ****                      : (score1 < score2) ? 1
 781               		.loc 1 161 20 view .LVU161
 782 04e8 23C1 0000 		move.l %d1,winner
 782      0000 
 165:test3.c       ****                     (winner == -1)  ? "Draw"
 783               		.loc 1 165 13 view .LVU162
 784 04ee 2F00      		move.l %d0,-(%sp)
 785               		.cfi_def_cfa_offset 28
 786 04f0 4879 0000 		pea .LC9


 786      0000 
 787               		.cfi_def_cfa_offset 32
 788 04f6 2F39 0000 		move.l com0out,-(%sp)
 788      0000 
 789               		.cfi_def_cfa_offset 36
 790 04fc 4E92      		jsr (%a2)
 791               	.LVL58:
 170:test3.c       ****                     (winner == -1)  ? "Draw"
 792               		.loc 1 170 13 is_stmt 1 view .LVU163
 171:test3.c       ****                     : (winner == 0) ? "Player 0"
 793               		.loc 1 171 29 is_stmt 0 view .LVU164
 794 04fe 2039 0000 		move.l winner,%d0
 794      0000 
 170:test3.c       ****                     (winner == -1)  ? "Draw"
 795               		.loc 1 170 13 view .LVU165
 796 0504 4FEF 000C 		lea (12,%sp),%sp
 797               		.cfi_def_cfa_offset 24
 798 0508 72FF      		moveq #-1,%d1
 799 050a B280      		cmp.l %d0,%d1
 800 050c 6684      		jne .L50
 801               	.L38:
 802 050e 203C 0000 		move.l #.LC3,%d0
 802      0000 
 803 0514 2F00      		move.l %d0,-(%sp)
 804               		.cfi_def_cfa_offset 28
 805 0516 4879 0000 		pea .LC9
 805      0000 
 806               		.cfi_def_cfa_offset 32
 807 051c 2F39 0000 		move.l com1out,-(%sp)
 807      0000 
 808               		.cfi_def_cfa_offset 36
 809 0522 4E92      		jsr (%a2)
 810               	.LVL59:
 811 0524 4FEF 000C 		lea (12,%sp),%sp
 812               		.cfi_def_cfa_offset 24
 813 0528 6088      		jra .L34
 814               	.L48:
 162:test3.c       ****                                              : -1;
 815               		.loc 1 162 22 view .LVU166
 816 052a 7200      		moveq #0,%d1
 168:test3.c       **** 
 817               		.loc 1 168 37 view .LVU167
 818 052c 203C 0000 		move.l #.LC4,%d0
 818      0000 
 819 0532 6000 FF38 		jra .L32
 820               	.L39:
 173:test3.c       ****             while(1){
 821               		.loc 1 173 37 view .LVU168
 822 0536 203C 0000 		move.l #.LC4,%d0
 822      0000 
 170:test3.c       ****                     (winner == -1)  ? "Draw"
 823               		.loc 1 170 13 view .LVU169
 824 053c 2F00      		move.l %d0,-(%sp)
 825               		.cfi_def_cfa_offset 28
 826 053e 4879 0000 		pea .LC9
 826      0000 
 827               		.cfi_def_cfa_offset 32


 828 0544 2F39 0000 		move.l com1out,-(%sp)
 828      0000 
 829               		.cfi_def_cfa_offset 36
 830 054a 4E92      		jsr (%a2)
 831               	.LVL60:
 832 054c 4FEF 000C 		lea (12,%sp),%sp
 833               		.cfi_def_cfa_offset 24
 834 0550 6000 FF60 		jra .L34
 835               	.LBE14:
 836               		.cfi_endproc
 837               	.LFE10:
 838               		.size	judgment, .-judgment
 839               		.align	2
 840               		.globl	get_random
 841               		.type	get_random, @function
 842               	get_random:
 843               	.LFB4:
  35:test3.c       ****     return rand_counter;
 844               		.loc 1 35 1 is_stmt 1 view -0
 845               		.cfi_startproc
  36:test3.c       **** }
 846               		.loc 1 36 5 view .LVU171
  36:test3.c       **** }
 847               		.loc 1 36 12 is_stmt 0 view .LVU172
 848 0554 2039 0000 		move.l rand_counter,%d0
 848      0000 
  37:test3.c       **** 
 849               		.loc 1 37 1 view .LVU173
 850 055a 4E75      		rts
 851               		.cfi_endproc
 852               	.LFE4:
 853               		.size	get_random, .-get_random
 854               		.align	2
 855               		.globl	init_card
 856               		.type	init_card, @function
 857               	init_card:
 858               	.LFB5:
  41:test3.c       ****     for (int i = 0; i < TOTAL_CARDS; i++)
 859               		.loc 1 41 1 is_stmt 1 view -0
 860               		.cfi_startproc
  42:test3.c       ****     {
 861               		.loc 1 42 5 view .LVU175
 862               	.LBB15:
  42:test3.c       ****     {
 863               		.loc 1 42 10 view .LVU176
 864               	.LVL61:
  42:test3.c       ****     {
 865               		.loc 1 42 23 view .LVU177
 866 055c 41F9 0000 		lea cards,%a0
 866      0000 
  42:test3.c       ****     {
 867               		.loc 1 42 14 is_stmt 0 view .LVU178
 868 0562 7000      		moveq #0,%d0
 869               	.LVL62:
 870               	.L54:
  44:test3.c       ****     }
 871               		.loc 1 44 9 is_stmt 1 discriminator 3 view .LVU179


  44:test3.c       ****     }
 872               		.loc 1 44 29 is_stmt 0 discriminator 3 view .LVU180
 873 0564 5280      		addq.l #1,%d0
 874               	.LVL63:
  44:test3.c       ****     }
 875               		.loc 1 44 25 discriminator 3 view .LVU181
 876 0566 20C0      		move.l %d0,(%a0)+
  42:test3.c       ****     {
 877               		.loc 1 42 39 is_stmt 1 discriminator 3 view .LVU182
 878               	.LVL64:
  42:test3.c       ****     {
 879               		.loc 1 42 23 discriminator 3 view .LVU183
 880 0568 720D      		moveq #13,%d1
 881 056a B280      		cmp.l %d0,%d1
 882 056c 66F6      		jne .L54
 883               	.LBE15:
  46:test3.c       **** 
 884               		.loc 1 46 1 is_stmt 0 view .LVU184
 885 056e 4E75      		rts
 886               		.cfi_endproc
 887               	.LFE5:
 888               		.size	init_card, .-init_card
 889               		.globl	__umodsi3
 890               		.align	2
 891               		.globl	shuffle_card
 892               		.type	shuffle_card, @function
 893               	shuffle_card:
 894               	.LFB6:
  49:test3.c       ****     for (int i = TOTAL_CARDS - 1; i > 0; i--)
 895               		.loc 1 49 1 is_stmt 1 view -0
 896               		.cfi_startproc
 897 0570 48E7 2038 		movem.l #8248,-(%sp)
 898               		.cfi_def_cfa_offset 20
 899               		.cfi_offset 2, -20
 900               		.cfi_offset 10, -16
 901               		.cfi_offset 11, -12
 902               		.cfi_offset 12, -8
  50:test3.c       ****     {
 903               		.loc 1 50 5 view .LVU186
 904               	.LBB16:
  50:test3.c       ****     {
 905               		.loc 1 50 10 view .LVU187
 906               	.LVL65:
  50:test3.c       ****     {
 907               		.loc 1 50 37 view .LVU188
 908 0574 45F9 0000 		lea cards+48,%a2
 908      0000 
 909 057a 47F9 0000 		lea cards,%a3
 909      0000 
 910               	.LBE16:
  49:test3.c       ****     for (int i = TOTAL_CARDS - 1; i > 0; i--)
 911               		.loc 1 49 1 is_stmt 0 view .LVU189
 912 0580 740D      		moveq #13,%d2
 913 0582 49F9 0000 		lea __umodsi3,%a4
 913      0000 
 914               	.LVL66:
 915               	.L59:


 916               	.LBB20:
 917               	.LBB17:
  52:test3.c       ****         int temp = cards[i].number;
 918               		.loc 1 52 9 is_stmt 1 view .LVU190
 919               	.LBB18:
 920               	.LBI18:
  34:test3.c       **** {
 921               		.loc 1 34 14 view .LVU191
 922               	.LBB19:
  36:test3.c       **** }
 923               		.loc 1 36 5 view .LVU192
  36:test3.c       **** }
 924               		.loc 1 36 12 is_stmt 0 view .LVU193
 925 0588 2039 0000 		move.l rand_counter,%d0
 925      0000 
 926               	.LBE19:
 927               	.LBE18:
  52:test3.c       ****         int temp = cards[i].number;
 928               		.loc 1 52 22 view .LVU194
 929 058e 2F02      		move.l %d2,-(%sp)
 930               		.cfi_def_cfa_offset 24
 931 0590 2F00      		move.l %d0,-(%sp)
 932               		.cfi_def_cfa_offset 28
 933 0592 4E94      		jsr (%a4)
 934               	.LVL67:
 935 0594 508F      		addq.l #8,%sp
 936               		.cfi_def_cfa_offset 20
 937               	.LVL68:
  53:test3.c       ****         cards[i].number = cards[r].number;
 938               		.loc 1 53 9 is_stmt 1 view .LVU195
  53:test3.c       ****         cards[i].number = cards[r].number;
 939               		.loc 1 53 13 is_stmt 0 view .LVU196
 940 0596 2212      		move.l (%a2),%d1
 941               	.LVL69:
  54:test3.c       ****         cards[r].number = temp;
 942               		.loc 1 54 9 is_stmt 1 view .LVU197
  54:test3.c       ****         cards[r].number = temp;
 943               		.loc 1 54 35 is_stmt 0 view .LVU198
 944 0598 E588      		lsl.l #2,%d0
 945               	.LVL70:
  54:test3.c       ****         cards[r].number = temp;
 946               		.loc 1 54 25 view .LVU199
 947 059a 24B3 0800 		move.l (%a3,%d0.l),(%a2)
  55:test3.c       ****     }
 948               		.loc 1 55 9 is_stmt 1 view .LVU200
  55:test3.c       ****     }
 949               		.loc 1 55 25 is_stmt 0 view .LVU201
 950 059e 2781 0800 		move.l %d1,(%a3,%d0.l)
 951               	.LBE17:
  50:test3.c       ****     {
 952               		.loc 1 50 43 is_stmt 1 view .LVU202
 953               	.LVL71:
  50:test3.c       ****     {
 954               		.loc 1 50 37 view .LVU203
 955 05a2 5382      		subq.l #1,%d2
 956               	.LVL72:
  50:test3.c       ****     {


 957               		.loc 1 50 37 is_stmt 0 view .LVU204
 958 05a4 598A      		subq.l #4,%a2
 959 05a6 B5FC 0000 		cmp.l #cards,%a2
 959      0000 
 960 05ac 66DA      		jne .L59
 961               	.LBE20:
  57:test3.c       **** 
 962               		.loc 1 57 1 view .LVU205
 963 05ae 4CDF 1C04 		movem.l (%sp)+,#7172
 964               	.LVL73:
  57:test3.c       **** 
 965               		.loc 1 57 1 view .LVU206
 966 05b2 4E75      		rts
 967               		.cfi_endproc
 968               	.LFE6:
 969               		.size	shuffle_card, .-shuffle_card
 970               		.align	2
 971               		.globl	first_display_round
 972               		.type	first_display_round, @function
 973               	first_display_round:
 974               	.LFB7:
  61:test3.c       ****         fprintf(com0out, "----------------------\n");
 975               		.loc 1 61 1 is_stmt 1 view -0
 976               		.cfi_startproc
 977 05b4 48E7 0038 		movem.l #56,-(%sp)
 978               		.cfi_def_cfa_offset 16
 979               		.cfi_offset 10, -16
 980               		.cfi_offset 11, -12
 981               		.cfi_offset 12, -8
  62:test3.c       ****         fprintf(com0out, "Round %d\n", round_count);
 982               		.loc 1 62 9 view .LVU208
 983 05b8 2F39 0000 		move.l com0out,-(%sp)
 983      0000 
 984               		.cfi_def_cfa_offset 20
 985 05be 4878 0017 		pea 23.w
 986               		.cfi_def_cfa_offset 24
 987 05c2 4878 0001 		pea 1.w
 988               		.cfi_def_cfa_offset 28
 989 05c6 4879 0000 		pea .LC5
 989      0000 
 990               		.cfi_def_cfa_offset 32
 991 05cc 49F9 0000 		lea fwrite,%a4
 991      0000 
 992 05d2 4E94      		jsr (%a4)
 993               	.LVL74:
  63:test3.c       ****         fprintf(com0out, "Current Number: %d\n", cards[top_index].number);
 994               		.loc 1 63 9 view .LVU209
 995 05d4 2F39 0000 		move.l round_count,-(%sp)
 995      0000 
 996               		.cfi_def_cfa_offset 36
 997 05da 4879 0000 		pea .LC6
 997      0000 
 998               		.cfi_def_cfa_offset 40
 999 05e0 2F39 0000 		move.l com0out,-(%sp)
 999      0000 
 1000               		.cfi_def_cfa_offset 44
 1001 05e6 45F9 0000 		lea fprintf,%a2


 1001      0000 
 1002 05ec 4E92      		jsr (%a2)
 1003               	.LVL75:
  64:test3.c       ****         fprintf(com0out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
 1004               		.loc 1 64 9 view .LVU210
 1005 05ee 47F9 0000 		lea cards,%a3
 1005      0000 
 1006 05f4 2039 0000 		move.l top_index,%d0
 1006      0000 
 1007 05fa D080      		add.l %d0,%d0
 1008 05fc D080      		add.l %d0,%d0
 1009 05fe 2F33 0800 		move.l (%a3,%d0.l),-(%sp)
 1010               		.cfi_def_cfa_offset 48
 1011 0602 4879 0000 		pea .LC7
 1011      0000 
 1012               		.cfi_def_cfa_offset 52
 1013 0608 2F39 0000 		move.l com0out,-(%sp)
 1013      0000 
 1014               		.cfi_def_cfa_offset 56
 1015 060e 4E92      		jsr (%a2)
 1016               	.LVL76:
  65:test3.c       **** 
 1017               		.loc 1 65 9 view .LVU211
 1018 0610 4FEF 0024 		lea (36,%sp),%sp
 1019               		.cfi_def_cfa_offset 20
 1020 0614 2EB9 0000 		move.l score2,(%sp)
 1020      0000 
 1021 061a 2F39 0000 		move.l score1,-(%sp)
 1021      0000 
 1022               		.cfi_def_cfa_offset 24
 1023 0620 4879 0000 		pea .LC8
 1023      0000 
 1024               		.cfi_def_cfa_offset 28
 1025 0626 2F39 0000 		move.l com0out,-(%sp)
 1025      0000 
 1026               		.cfi_def_cfa_offset 32
 1027 062c 4E92      		jsr (%a2)
 1028               	.LVL77:
  67:test3.c       ****         fprintf(com1out, "Round %d\n", round_count);
 1029               		.loc 1 67 9 view .LVU212
 1030 062e 2F39 0000 		move.l com1out,-(%sp)
 1030      0000 
 1031               		.cfi_def_cfa_offset 36
 1032 0634 4878 0017 		pea 23.w
 1033               		.cfi_def_cfa_offset 40
 1034 0638 4878 0001 		pea 1.w
 1035               		.cfi_def_cfa_offset 44
 1036 063c 4879 0000 		pea .LC5
 1036      0000 
 1037               		.cfi_def_cfa_offset 48
 1038 0642 4E94      		jsr (%a4)
 1039               	.LVL78:
  68:test3.c       ****         fprintf(com1out, "Current Number: %d\n", cards[top_index].number);
 1040               		.loc 1 68 9 view .LVU213
 1041 0644 4FEF 001C 		lea (28,%sp),%sp
 1042               		.cfi_def_cfa_offset 20
 1043 0648 2EB9 0000 		move.l round_count,(%sp)


 1043      0000 
 1044 064e 4879 0000 		pea .LC6
 1044      0000 
 1045               		.cfi_def_cfa_offset 24
 1046 0654 2F39 0000 		move.l com1out,-(%sp)
 1046      0000 
 1047               		.cfi_def_cfa_offset 28
 1048 065a 4E92      		jsr (%a2)
 1049               	.LVL79:
  69:test3.c       ****         fprintf(com1out, "Player0 Score=%d, Player1 Score=%d\n", score1, score2);
 1050               		.loc 1 69 9 view .LVU214
 1051 065c 2039 0000 		move.l top_index,%d0
 1051      0000 
 1052 0662 D080      		add.l %d0,%d0
 1053 0664 D080      		add.l %d0,%d0
 1054 0666 2F33 0800 		move.l (%a3,%d0.l),-(%sp)
 1055               		.cfi_def_cfa_offset 32
 1056 066a 4879 0000 		pea .LC7
 1056      0000 
 1057               		.cfi_def_cfa_offset 36
 1058 0670 2F39 0000 		move.l com1out,-(%sp)
 1058      0000 
 1059               		.cfi_def_cfa_offset 40
 1060 0676 4E92      		jsr (%a2)
 1061               	.LVL80:
  70:test3.c       **** }
 1062               		.loc 1 70 9 view .LVU215
 1063 0678 2F39 0000 		move.l score2,-(%sp)
 1063      0000 
 1064               		.cfi_def_cfa_offset 44
 1065 067e 2F39 0000 		move.l score1,-(%sp)
 1065      0000 
 1066               		.cfi_def_cfa_offset 48
 1067 0684 4879 0000 		pea .LC8
 1067      0000 
 1068               		.cfi_def_cfa_offset 52
 1069 068a 2F39 0000 		move.l com1out,-(%sp)
 1069      0000 
 1070               		.cfi_def_cfa_offset 56
 1071 0690 4E92      		jsr (%a2)
 1072               	.LVL81:
  71:test3.c       **** 
 1073               		.loc 1 71 1 is_stmt 0 view .LVU216
 1074 0692 4FEF 0028 		lea (40,%sp),%sp
 1075               		.cfi_def_cfa_offset 16
 1076 0696 4CDF 1C00 		movem.l (%sp)+,#7168
 1077 069a 4E75      		rts
 1078               		.cfi_endproc
 1079               	.LFE7:
 1080               		.size	first_display_round, .-first_display_round
 1081               		.section	.rodata.str1.1
 1082               	.LC10:
 1083 00d5 7200      		.string	"r"
 1084               	.LC11:
 1085 00d7 7700      		.string	"w"
 1086               		.text
 1087               		.align	2


 1088               		.globl	mapping
 1089               		.type	mapping, @function
 1090               	mapping:
 1091               	.LFB11:
 183:test3.c       ****     }
 184:test3.c       **** }
 185:test3.c       **** 
 186:test3.c       **** //-------------------------------------------
 187:test3.c       **** // mapping()
 188:test3.c       **** //-------------------------------------------
 189:test3.c       **** void mapping()
 190:test3.c       **** {
 1092               		.loc 1 190 1 is_stmt 1 view -0
 1093               		.cfi_startproc
 1094 069c 2F0A      		move.l %a2,-(%sp)
 1095               		.cfi_def_cfa_offset 8
 1096               		.cfi_offset 10, -8
 191:test3.c       ****     com0in  = fdopen(3, "r");
 1097               		.loc 1 191 5 view .LVU218
 1098               		.loc 1 191 15 is_stmt 0 view .LVU219
 1099 069e 4879 0000 		pea .LC10
 1099      0000 
 1100               		.cfi_def_cfa_offset 12
 1101 06a4 4878 0003 		pea 3.w
 1102               		.cfi_def_cfa_offset 16
 1103 06a8 45F9 0000 		lea fdopen,%a2
 1103      0000 
 1104 06ae 4E92      		jsr (%a2)
 1105               	.LVL82:
 1106               		.loc 1 191 13 view .LVU220
 1107 06b0 23C0 0000 		move.l %d0,com0in
 1107      0000 
 192:test3.c       ****     com0out = fdopen(3, "w");
 1108               		.loc 1 192 5 is_stmt 1 view .LVU221
 1109               		.loc 1 192 15 is_stmt 0 view .LVU222
 1110 06b6 4879 0000 		pea .LC11
 1110      0000 
 1111               		.cfi_def_cfa_offset 20
 1112 06bc 4878 0003 		pea 3.w
 1113               		.cfi_def_cfa_offset 24
 1114 06c0 4E92      		jsr (%a2)
 1115               	.LVL83:
 1116               		.loc 1 192 13 view .LVU223
 1117 06c2 23C0 0000 		move.l %d0,com0out
 1117      0000 
 193:test3.c       ****     com1in  = fdopen(4, "r");
 1118               		.loc 1 193 5 is_stmt 1 view .LVU224
 1119               		.loc 1 193 15 is_stmt 0 view .LVU225
 1120 06c8 4879 0000 		pea .LC10
 1120      0000 
 1121               		.cfi_def_cfa_offset 28
 1122 06ce 4878 0004 		pea 4.w
 1123               		.cfi_def_cfa_offset 32
 1124 06d2 4E92      		jsr (%a2)
 1125               	.LVL84:
 1126               		.loc 1 193 13 view .LVU226
 1127 06d4 23C0 0000 		move.l %d0,com1in


 1127      0000 
 194:test3.c       ****     com1out = fdopen(4, "w");
 1128               		.loc 1 194 5 is_stmt 1 view .LVU227
 1129               		.loc 1 194 15 is_stmt 0 view .LVU228
 1130 06da 4879 0000 		pea .LC11
 1130      0000 
 1131               		.cfi_def_cfa_offset 36
 1132 06e0 4878 0004 		pea 4.w
 1133               		.cfi_def_cfa_offset 40
 1134 06e4 4E92      		jsr (%a2)
 1135               	.LVL85:
 1136               		.loc 1 194 13 view .LVU229
 1137 06e6 23C0 0000 		move.l %d0,com1out
 1137      0000 
 195:test3.c       **** }
 1138               		.loc 1 195 1 view .LVU230
 1139 06ec 4FEF 0020 		lea (32,%sp),%sp
 1140               		.cfi_def_cfa_offset 8
 1141 06f0 245F      		move.l (%sp)+,%a2
 1142 06f2 4E75      		rts
 1143               		.cfi_endproc
 1144               	.LFE11:
 1145               		.size	mapping, .-mapping
 1146               		.section	.text.startup,"ax",@progbits
 1147               		.align	2
 1148               		.globl	main
 1149               		.type	main, @function
 1150               	main:
 1151               	.LFB12:
 196:test3.c       **** 
 197:test3.c       **** // -------------------- main関数 --------------------
 198:test3.c       **** int main()
 199:test3.c       **** {
 1152               		.loc 1 199 1 is_stmt 1 view -0
 1153               		.cfi_startproc
 1154 0000 2F0A      		move.l %a2,-(%sp)
 1155               		.cfi_def_cfa_offset 8
 1156               		.cfi_offset 10, -8
 200:test3.c       ****     mapping();
 1157               		.loc 1 200 5 view .LVU232
 1158 0002 4EB9 0000 		jsr mapping
 1158      0000 
 1159               	.LVL86:
 201:test3.c       ****     init_kernel();
 1160               		.loc 1 201 5 view .LVU233
 1161 0008 4EB9 0000 		jsr init_kernel
 1161      0000 
 1162               	.LVL87:
 202:test3.c       ****     init_card();
 1163               		.loc 1 202 5 view .LVU234
 1164               	.LBB21:
 1165               	.LBI21:
  40:test3.c       **** {
 1166               		.loc 1 40 6 view .LVU235
  42:test3.c       ****     {
 1167               		.loc 1 42 5 view .LVU236
 1168               	.LBB22:


  42:test3.c       ****     {
 1169               		.loc 1 42 10 view .LVU237
  42:test3.c       ****     {
 1170               		.loc 1 42 23 view .LVU238
 1171 000e 41F9 0000 		lea cards,%a0
 1171      0000 
  42:test3.c       ****     {
 1172               		.loc 1 42 14 is_stmt 0 view .LVU239
 1173 0014 7000      		moveq #0,%d0
 1174               	.LVL88:
 1175               	.L68:
  44:test3.c       ****     }
 1176               		.loc 1 44 9 is_stmt 1 view .LVU240
  44:test3.c       ****     }
 1177               		.loc 1 44 29 is_stmt 0 view .LVU241
 1178 0016 5280      		addq.l #1,%d0
 1179               	.LVL89:
  44:test3.c       ****     }
 1180               		.loc 1 44 25 view .LVU242
 1181 0018 20C0      		move.l %d0,(%a0)+
  42:test3.c       ****     {
 1182               		.loc 1 42 39 is_stmt 1 view .LVU243
 1183               	.LVL90:
  42:test3.c       ****     {
 1184               		.loc 1 42 23 view .LVU244
 1185 001a 720D      		moveq #13,%d1
 1186 001c B280      		cmp.l %d0,%d1
 1187 001e 66F6      		jne .L68
 1188               	.LVL91:
  42:test3.c       ****     {
 1189               		.loc 1 42 23 is_stmt 0 view .LVU245
 1190               	.LBE22:
 1191               	.LBE21:
 203:test3.c       ****     shuffle_card();
 1192               		.loc 1 203 5 is_stmt 1 view .LVU246
 1193 0020 4EB9 0000 		jsr shuffle_card
 1193      0000 
 1194               	.LVL92:
 204:test3.c       ****     first_display_round();
 1195               		.loc 1 204 5 view .LVU247
 1196 0026 4EB9 0000 		jsr first_display_round
 1196      0000 
 1197               	.LVL93:
 205:test3.c       **** 	
 206:test3.c       ****     semaphore[0].count = 1;
 1198               		.loc 1 206 5 view .LVU248
 1199               		.loc 1 206 24 is_stmt 0 view .LVU249
 1200 002c 7001      		moveq #1,%d0
 1201 002e 23C0 0000 		move.l %d0,semaphore
 1201      0000 
 207:test3.c       ****     semaphore[1].count = 1;
 1202               		.loc 1 207 5 is_stmt 1 view .LVU250
 1203               		.loc 1 207 24 is_stmt 0 view .LVU251
 1204 0034 23C0 0000 		move.l %d0,semaphore+12
 1204      0000 
 208:test3.c       ****     semaphore[2].count = 0;
 1205               		.loc 1 208 5 is_stmt 1 view .LVU252


 1206               		.loc 1 208 24 is_stmt 0 view .LVU253
 1207 003a 42B9 0000 		clr.l semaphore+24
 1207      0000 
 209:test3.c       ****     semaphore[3].count = 0;
 1208               		.loc 1 209 5 is_stmt 1 view .LVU254
 1209               		.loc 1 209 24 is_stmt 0 view .LVU255
 1210 0040 42B9 0000 		clr.l semaphore+36
 1210      0000 
 210:test3.c       **** 
 211:test3.c       ****     set_task((char*)random_generator);
 1211               		.loc 1 211 5 is_stmt 1 view .LVU256
 1212 0046 4879 0000 		pea random_generator
 1212      0000 
 1213               		.cfi_def_cfa_offset 12
 1214 004c 45F9 0000 		lea set_task,%a2
 1214      0000 
 1215 0052 4E92      		jsr (%a2)
 1216               	.LVL94:
 212:test3.c       ****     set_task((char*)player0);
 1217               		.loc 1 212 5 view .LVU257
 1218 0054 4879 0000 		pea player0
 1218      0000 
 1219               		.cfi_def_cfa_offset 16
 1220 005a 4E92      		jsr (%a2)
 1221               	.LVL95:
 213:test3.c       ****     set_task((char*)player1);
 1222               		.loc 1 213 5 view .LVU258
 1223 005c 4879 0000 		pea player1
 1223      0000 
 1224               		.cfi_def_cfa_offset 20
 1225 0062 4E92      		jsr (%a2)
 1226               	.LVL96:
 214:test3.c       ****  //   set_task((char*)first_display_round);
 215:test3.c       ****     set_task((char*)judgment);
 1227               		.loc 1 215 5 view .LVU259
 1228 0064 4879 0000 		pea judgment
 1228      0000 
 1229               		.cfi_def_cfa_offset 24
 1230 006a 4E92      		jsr (%a2)
 1231               	.LVL97:
 216:test3.c       **** 
 217:test3.c       ****     begin_sch();
 1232               		.loc 1 217 5 view .LVU260
 1233 006c 4EB9 0000 		jsr begin_sch
 1233      0000 
 1234               	.LVL98:
 218:test3.c       ****     return 0;
 1235               		.loc 1 218 5 view .LVU261
 219:test3.c       **** }
 1236               		.loc 1 219 1 is_stmt 0 view .LVU262
 1237 0072 4FEF 0010 		lea (16,%sp),%sp
 1238               		.cfi_def_cfa_offset 8
 1239 0076 7000      		moveq #0,%d0
 1240 0078 245F      		move.l (%sp)+,%a2
 1241 007a 4E75      		rts
 1242               		.cfi_endproc
 1243               	.LFE12:


 1244               		.size	main, .-main
 1245               		.globl	rand_counter
 1246               		.data
 1247               		.align	2
 1248               		.type	rand_counter, @object
 1249               		.size	rand_counter, 4
 1250               	rand_counter:
 1251 0000 0000 0002 		.long	2
 1252               		.globl	flg1
 1253               		.section	.bss
 1254               		.align	2
 1255               		.type	flg1, @object
 1256               		.size	flg1, 4
 1257               	flg1:
 1258 0000 0000 0000 		.zero	4
 1259               		.globl	flg0
 1260               		.align	2
 1261               		.type	flg0, @object
 1262               		.size	flg0, 4
 1263               	flg0:
 1264 0004 0000 0000 		.zero	4
 1265               		.globl	winner
 1266               		.align	2
 1267               		.type	winner, @object
 1268               		.size	winner, 4
 1269               	winner:
 1270 0008 0000 0000 		.zero	4
 1271               		.globl	is_finish
 1272               		.align	2
 1273               		.type	is_finish, @object
 1274               		.size	is_finish, 4
 1275               	is_finish:
 1276 000c 0000 0000 		.zero	4
 1277               		.globl	guess2
 1278               		.align	2
 1279               		.type	guess2, @object
 1280               		.size	guess2, 4
 1281               	guess2:
 1282 0010 0000 0000 		.zero	4
 1283               		.globl	guess1
 1284               		.align	2
 1285               		.type	guess1, @object
 1286               		.size	guess1, 4
 1287               	guess1:
 1288 0014 0000 0000 		.zero	4
 1289               		.globl	score2
 1290               		.align	2
 1291               		.type	score2, @object
 1292               		.size	score2, 4
 1293               	score2:
 1294 0018 0000 0000 		.zero	4
 1295               		.globl	score1
 1296               		.align	2
 1297               		.type	score1, @object
 1298               		.size	score1, 4
 1299               	score1:
 1300 001c 0000 0000 		.zero	4


 1301               		.globl	top_index
 1302               		.align	2
 1303               		.type	top_index, @object
 1304               		.size	top_index, 4
 1305               	top_index:
 1306 0020 0000 0000 		.zero	4
 1307               		.globl	round_count
 1308               		.align	2
 1309               		.type	round_count, @object
 1310               		.size	round_count, 4
 1311               	round_count:
 1312 0024 0000 0000 		.zero	4
 1313               		.globl	cards
 1314               		.align	2
 1315               		.type	cards, @object
 1316               		.size	cards, 52
 1317               	cards:
 1318 0028 0000 0000 		.zero	52
 1318      0000 0000 
 1318      0000 0000 
 1318      0000 0000 
 1318      0000 0000 
 1319               		.text
 1320               	.Letext0:
 1321               		.file 2 "/usr/local/lib/gcc/m68k-elf/11.4.0/include/stddef.h"
 1322               		.file 3 "/usr/local/m68k-elf/include/sys/_types.h"
 1323               		.file 4 "/usr/local/m68k-elf/include/sys/reent.h"
 1324               		.file 5 "/usr/local/m68k-elf/include/sys/lock.h"
 1325               		.file 6 "/usr/local/m68k-elf/include/stdio.h"
 1326               		.file 7 "mtk_c.h"
 1327               		.file 8 "test3.h"
 1328               		.file 9 "<built-in>"
 1329               		.section	.debug_info,"",@progbits
 1330               	.Ldebug_info0:
 1331 0000 0000 0DD7 		.long	0xdd7
 1332 0004 0005      		.word	0x5
 1333 0006 01        		.byte	0x1
 1334 0007 04        		.byte	0x4
 1335 0008 0000 0000 		.long	.Ldebug_abbrev0
 1336 000c 22        		.uleb128 0x22
 1337 000d 0000 0000 		.long	.LASF143
 1338 0011 1D        		.byte	0x1d
 1339 0012 0000 0000 		.long	.LASF144
 1340 0016 0000 0000 		.long	.LASF145
 1341 001a 0000 0000 		.long	.LLRL10
 1342 001e 0000 0000 		.long	0
 1343 0022 0000 0000 		.long	.Ldebug_line0
 1344 0026 06        		.uleb128 0x6
 1345 0027 01        		.byte	0x1
 1346 0028 06        		.byte	0x6
 1347 0029 0000 0000 		.long	.LASF0
 1348 002d 06        		.uleb128 0x6
 1349 002e 01        		.byte	0x1
 1350 002f 08        		.byte	0x8
 1351 0030 0000 0000 		.long	.LASF1
 1352 0034 06        		.uleb128 0x6
 1353 0035 02        		.byte	0x2


 1354 0036 05        		.byte	0x5
 1355 0037 0000 0000 		.long	.LASF2
 1356 003b 06        		.uleb128 0x6
 1357 003c 02        		.byte	0x2
 1358 003d 07        		.byte	0x7
 1359 003e 0000 0000 		.long	.LASF3
 1360 0042 06        		.uleb128 0x6
 1361 0043 04        		.byte	0x4
 1362 0044 05        		.byte	0x5
 1363 0045 0000 0000 		.long	.LASF4
 1364 0049 06        		.uleb128 0x6
 1365 004a 04        		.byte	0x4
 1366 004b 07        		.byte	0x7
 1367 004c 0000 0000 		.long	.LASF5
 1368 0050 06        		.uleb128 0x6
 1369 0051 08        		.byte	0x8
 1370 0052 05        		.byte	0x5
 1371 0053 0000 0000 		.long	.LASF6
 1372 0057 06        		.uleb128 0x6
 1373 0058 08        		.byte	0x8
 1374 0059 07        		.byte	0x7
 1375 005a 0000 0000 		.long	.LASF7
 1376 005e 06        		.uleb128 0x6
 1377 005f 0C        		.byte	0xc
 1378 0060 04        		.byte	0x4
 1379 0061 0000 0000 		.long	.LASF8
 1380 0065 13        		.uleb128 0x13
 1381 0066 0000 0000 		.long	.LASF10
 1382 006a 02        		.byte	0x2
 1383 006b 015E      		.word	0x15e
 1384 006d 17        		.byte	0x17
 1385 006e 0000 0072 		.long	0x72
 1386 0072 06        		.uleb128 0x6
 1387 0073 04        		.byte	0x4
 1388 0074 07        		.byte	0x7
 1389 0075 0000 0000 		.long	.LASF9
 1390 0079 14        		.uleb128 0x14
 1391 007a 0000 0072 		.long	0x72
 1392 007e 07        		.uleb128 0x7
 1393 007f 0000 0000 		.long	.LASF11
 1394 0083 03        		.byte	0x3
 1395 0084 2E        		.byte	0x2e
 1396 0085 0E        		.byte	0xe
 1397 0086 0000 0042 		.long	0x42
 1398 008a 23        		.uleb128 0x23
 1399 008b 04        		.byte	0x4
 1400 008c 05        		.byte	0x5
 1401 008d 696E 7400 		.string	"int"
 1402 0091 14        		.uleb128 0x14
 1403 0092 0000 008A 		.long	0x8a
 1404 0096 07        		.uleb128 0x7
 1405 0097 0000 0000 		.long	.LASF12
 1406 009b 03        		.byte	0x3
 1407 009c 74        		.byte	0x74
 1408 009d 0E        		.byte	0xe
 1409 009e 0000 0042 		.long	0x42
 1410 00a2 07        		.uleb128 0x7


 1411 00a3 0000 0000 		.long	.LASF13
 1412 00a7 03        		.byte	0x3
 1413 00a8 93        		.byte	0x93
 1414 00a9 17        		.byte	0x17
 1415 00aa 0000 0042 		.long	0x42
 1416 00ae 24        		.uleb128 0x24
 1417 00af 04        		.byte	0x4
 1418 00b0 03        		.byte	0x3
 1419 00b1 A5        		.byte	0xa5
 1420 00b2 03        		.byte	0x3
 1421 00b3 0000 00CE 		.long	0xce
 1422 00b7 15        		.uleb128 0x15
 1423 00b8 0000 0000 		.long	.LASF14
 1424 00bc A7        		.byte	0xa7
 1425 00bd 0C        		.byte	0xc
 1426 00be 0000 0065 		.long	0x65
 1427 00c2 15        		.uleb128 0x15
 1428 00c3 0000 0000 		.long	.LASF15
 1429 00c7 A8        		.byte	0xa8
 1430 00c8 13        		.byte	0x13
 1431 00c9 0000 00CE 		.long	0xce
 1432 00cd 00        		.byte	0
 1433 00ce 08        		.uleb128 0x8
 1434 00cf 0000 002D 		.long	0x2d
 1435 00d3 0000 00DE 		.long	0xde
 1436 00d7 09        		.uleb128 0x9
 1437 00d8 0000 0049 		.long	0x49
 1438 00dc 03        		.byte	0x3
 1439 00dd 00        		.byte	0
 1440 00de 11        		.uleb128 0x11
 1441 00df 08        		.byte	0x8
 1442 00e0 03        		.byte	0x3
 1443 00e1 A2        		.byte	0xa2
 1444 00e2 0000 0101 		.long	0x101
 1445 00e6 02        		.uleb128 0x2
 1446 00e7 0000 0000 		.long	.LASF16
 1447 00eb 03        		.byte	0x3
 1448 00ec A4        		.byte	0xa4
 1449 00ed 07        		.byte	0x7
 1450 00ee 0000 008A 		.long	0x8a
 1451 00f2 00        		.byte	0
 1452 00f3 02        		.uleb128 0x2
 1453 00f4 0000 0000 		.long	.LASF17
 1454 00f8 03        		.byte	0x3
 1455 00f9 A9        		.byte	0xa9
 1456 00fa 05        		.byte	0x5
 1457 00fb 0000 00AE 		.long	0xae
 1458 00ff 04        		.byte	0x4
 1459 0100 00        		.byte	0
 1460 0101 07        		.uleb128 0x7
 1461 0102 0000 0000 		.long	.LASF18
 1462 0106 03        		.byte	0x3
 1463 0107 AA        		.byte	0xaa
 1464 0108 03        		.byte	0x3
 1465 0109 0000 00DE 		.long	0xde
 1466 010d 25        		.uleb128 0x25
 1467 010e 04        		.byte	0x4


 1468 010f 07        		.uleb128 0x7
 1469 0110 0000 0000 		.long	.LASF19
 1470 0114 04        		.byte	0x4
 1471 0115 16        		.byte	0x16
 1472 0116 19        		.byte	0x19
 1473 0117 0000 0049 		.long	0x49
 1474 011b 07        		.uleb128 0x7
 1475 011c 0000 0000 		.long	.LASF20
 1476 0120 05        		.byte	0x5
 1477 0121 0C        		.byte	0xc
 1478 0122 0D        		.byte	0xd
 1479 0123 0000 008A 		.long	0x8a
 1480 0127 07        		.uleb128 0x7
 1481 0128 0000 0000 		.long	.LASF21
 1482 012c 04        		.byte	0x4
 1483 012d 23        		.byte	0x23
 1484 012e 1B        		.byte	0x1b
 1485 012f 0000 011B 		.long	0x11b
 1486 0133 0E        		.uleb128 0xe
 1487 0134 0000 0000 		.long	.LASF26
 1488 0138 18        		.byte	0x18
 1489 0139 34        		.byte	0x34
 1490 013a 0000 018B 		.long	0x18b
 1491 013e 02        		.uleb128 0x2
 1492 013f 0000 0000 		.long	.LASF22
 1493 0143 04        		.byte	0x4
 1494 0144 36        		.byte	0x36
 1495 0145 13        		.byte	0x13
 1496 0146 0000 018B 		.long	0x18b
 1497 014a 00        		.byte	0
 1498 014b 0A        		.uleb128 0xa
 1499 014c 5F6B 00   		.string	"_k"
 1500 014f 04        		.byte	0x4
 1501 0150 37        		.byte	0x37
 1502 0151 07        		.byte	0x7
 1503 0152 0000 008A 		.long	0x8a
 1504 0156 04        		.byte	0x4
 1505 0157 02        		.uleb128 0x2
 1506 0158 0000 0000 		.long	.LASF23
 1507 015c 04        		.byte	0x4
 1508 015d 37        		.byte	0x37
 1509 015e 0B        		.byte	0xb
 1510 015f 0000 008A 		.long	0x8a
 1511 0163 08        		.byte	0x8
 1512 0164 02        		.uleb128 0x2
 1513 0165 0000 0000 		.long	.LASF24
 1514 0169 04        		.byte	0x4
 1515 016a 37        		.byte	0x37
 1516 016b 14        		.byte	0x14
 1517 016c 0000 008A 		.long	0x8a
 1518 0170 0C        		.byte	0xc
 1519 0171 02        		.uleb128 0x2
 1520 0172 0000 0000 		.long	.LASF25
 1521 0176 04        		.byte	0x4
 1522 0177 37        		.byte	0x37
 1523 0178 1B        		.byte	0x1b
 1524 0179 0000 008A 		.long	0x8a


 1525 017d 10        		.byte	0x10
 1526 017e 0A        		.uleb128 0xa
 1527 017f 5F78 00   		.string	"_x"
 1528 0182 04        		.byte	0x4
 1529 0183 38        		.byte	0x38
 1530 0184 0B        		.byte	0xb
 1531 0185 0000 0190 		.long	0x190
 1532 0189 14        		.byte	0x14
 1533 018a 00        		.byte	0
 1534 018b 05        		.uleb128 0x5
 1535 018c 0000 0133 		.long	0x133
 1536 0190 08        		.uleb128 0x8
 1537 0191 0000 010F 		.long	0x10f
 1538 0195 0000 01A0 		.long	0x1a0
 1539 0199 09        		.uleb128 0x9
 1540 019a 0000 0049 		.long	0x49
 1541 019e 00        		.byte	0
 1542 019f 00        		.byte	0
 1543 01a0 0E        		.uleb128 0xe
 1544 01a1 0000 0000 		.long	.LASF27
 1545 01a5 24        		.byte	0x24
 1546 01a6 3C        		.byte	0x3c
 1547 01a7 0000 0221 		.long	0x221
 1548 01ab 02        		.uleb128 0x2
 1549 01ac 0000 0000 		.long	.LASF28
 1550 01b0 04        		.byte	0x4
 1551 01b1 3E        		.byte	0x3e
 1552 01b2 09        		.byte	0x9
 1553 01b3 0000 008A 		.long	0x8a
 1554 01b7 00        		.byte	0
 1555 01b8 02        		.uleb128 0x2
 1556 01b9 0000 0000 		.long	.LASF29
 1557 01bd 04        		.byte	0x4
 1558 01be 3F        		.byte	0x3f
 1559 01bf 09        		.byte	0x9
 1560 01c0 0000 008A 		.long	0x8a
 1561 01c4 04        		.byte	0x4
 1562 01c5 02        		.uleb128 0x2
 1563 01c6 0000 0000 		.long	.LASF30
 1564 01ca 04        		.byte	0x4
 1565 01cb 40        		.byte	0x40
 1566 01cc 09        		.byte	0x9
 1567 01cd 0000 008A 		.long	0x8a
 1568 01d1 08        		.byte	0x8
 1569 01d2 02        		.uleb128 0x2
 1570 01d3 0000 0000 		.long	.LASF31
 1571 01d7 04        		.byte	0x4
 1572 01d8 41        		.byte	0x41
 1573 01d9 09        		.byte	0x9
 1574 01da 0000 008A 		.long	0x8a
 1575 01de 0C        		.byte	0xc
 1576 01df 02        		.uleb128 0x2
 1577 01e0 0000 0000 		.long	.LASF32
 1578 01e4 04        		.byte	0x4
 1579 01e5 42        		.byte	0x42
 1580 01e6 09        		.byte	0x9
 1581 01e7 0000 008A 		.long	0x8a


 1582 01eb 10        		.byte	0x10
 1583 01ec 02        		.uleb128 0x2
 1584 01ed 0000 0000 		.long	.LASF33
 1585 01f1 04        		.byte	0x4
 1586 01f2 43        		.byte	0x43
 1587 01f3 09        		.byte	0x9
 1588 01f4 0000 008A 		.long	0x8a
 1589 01f8 14        		.byte	0x14
 1590 01f9 02        		.uleb128 0x2
 1591 01fa 0000 0000 		.long	.LASF34
 1592 01fe 04        		.byte	0x4
 1593 01ff 44        		.byte	0x44
 1594 0200 09        		.byte	0x9
 1595 0201 0000 008A 		.long	0x8a
 1596 0205 18        		.byte	0x18
 1597 0206 02        		.uleb128 0x2
 1598 0207 0000 0000 		.long	.LASF35
 1599 020b 04        		.byte	0x4
 1600 020c 45        		.byte	0x45
 1601 020d 09        		.byte	0x9
 1602 020e 0000 008A 		.long	0x8a
 1603 0212 1C        		.byte	0x1c
 1604 0213 02        		.uleb128 0x2
 1605 0214 0000 0000 		.long	.LASF36
 1606 0218 04        		.byte	0x4
 1607 0219 46        		.byte	0x46
 1608 021a 09        		.byte	0x9
 1609 021b 0000 008A 		.long	0x8a
 1610 021f 20        		.byte	0x20
 1611 0220 00        		.byte	0
 1612 0221 0E        		.uleb128 0xe
 1613 0222 0000 0000 		.long	.LASF37
 1614 0226 08        		.byte	0x8
 1615 0227 73        		.byte	0x73
 1616 0228 0000 0247 		.long	0x247
 1617 022c 02        		.uleb128 0x2
 1618 022d 0000 0000 		.long	.LASF38
 1619 0231 04        		.byte	0x4
 1620 0232 74        		.byte	0x74
 1621 0233 11        		.byte	0x11
 1622 0234 0000 0247 		.long	0x247
 1623 0238 00        		.byte	0
 1624 0239 02        		.uleb128 0x2
 1625 023a 0000 0000 		.long	.LASF39
 1626 023e 04        		.byte	0x4
 1627 023f 75        		.byte	0x75
 1628 0240 06        		.byte	0x6
 1629 0241 0000 008A 		.long	0x8a
 1630 0245 04        		.byte	0x4
 1631 0246 00        		.byte	0
 1632 0247 05        		.uleb128 0x5
 1633 0248 0000 002D 		.long	0x2d
 1634 024c 0E        		.uleb128 0xe
 1635 024d 0000 0000 		.long	.LASF40
 1636 0251 68        		.byte	0x68
 1637 0252 98        		.byte	0x98
 1638 0253 0000 038D 		.long	0x38d


 1639 0257 0A        		.uleb128 0xa
 1640 0258 5F70 00   		.string	"_p"
 1641 025b 04        		.byte	0x4
 1642 025c 99        		.byte	0x99
 1643 025d 12        		.byte	0x12
 1644 025e 0000 0247 		.long	0x247
 1645 0262 00        		.byte	0
 1646 0263 0A        		.uleb128 0xa
 1647 0264 5F72 00   		.string	"_r"
 1648 0267 04        		.byte	0x4
 1649 0268 9A        		.byte	0x9a
 1650 0269 07        		.byte	0x7
 1651 026a 0000 008A 		.long	0x8a
 1652 026e 04        		.byte	0x4
 1653 026f 0A        		.uleb128 0xa
 1654 0270 5F77 00   		.string	"_w"
 1655 0273 04        		.byte	0x4
 1656 0274 9B        		.byte	0x9b
 1657 0275 07        		.byte	0x7
 1658 0276 0000 008A 		.long	0x8a
 1659 027a 08        		.byte	0x8
 1660 027b 02        		.uleb128 0x2
 1661 027c 0000 0000 		.long	.LASF41
 1662 0280 04        		.byte	0x4
 1663 0281 9C        		.byte	0x9c
 1664 0282 09        		.byte	0x9
 1665 0283 0000 0034 		.long	0x34
 1666 0287 0C        		.byte	0xc
 1667 0288 02        		.uleb128 0x2
 1668 0289 0000 0000 		.long	.LASF42
 1669 028d 04        		.byte	0x4
 1670 028e 9D        		.byte	0x9d
 1671 028f 09        		.byte	0x9
 1672 0290 0000 0034 		.long	0x34
 1673 0294 0E        		.byte	0xe
 1674 0295 0A        		.uleb128 0xa
 1675 0296 5F62 6600 		.string	"_bf"
 1676 029a 04        		.byte	0x4
 1677 029b 9E        		.byte	0x9e
 1678 029c 11        		.byte	0x11
 1679 029d 0000 0221 		.long	0x221
 1680 02a1 10        		.byte	0x10
 1681 02a2 02        		.uleb128 0x2
 1682 02a3 0000 0000 		.long	.LASF43
 1683 02a7 04        		.byte	0x4
 1684 02a8 9F        		.byte	0x9f
 1685 02a9 07        		.byte	0x7
 1686 02aa 0000 008A 		.long	0x8a
 1687 02ae 18        		.byte	0x18
 1688 02af 02        		.uleb128 0x2
 1689 02b0 0000 0000 		.long	.LASF44
 1690 02b4 04        		.byte	0x4
 1691 02b5 A6        		.byte	0xa6
 1692 02b6 0A        		.byte	0xa
 1693 02b7 0000 010D 		.long	0x10d
 1694 02bb 1C        		.byte	0x1c
 1695 02bc 02        		.uleb128 0x2


 1696 02bd 0000 0000 		.long	.LASF45
 1697 02c1 04        		.byte	0x4
 1698 02c2 A8        		.byte	0xa8
 1699 02c3 1D        		.byte	0x1d
 1700 02c4 0000 04A3 		.long	0x4a3
 1701 02c8 20        		.byte	0x20
 1702 02c9 02        		.uleb128 0x2
 1703 02ca 0000 0000 		.long	.LASF46
 1704 02ce 04        		.byte	0x4
 1705 02cf AA        		.byte	0xaa
 1706 02d0 1D        		.byte	0x1d
 1707 02d1 0000 04D0 		.long	0x4d0
 1708 02d5 24        		.byte	0x24
 1709 02d6 02        		.uleb128 0x2
 1710 02d7 0000 0000 		.long	.LASF47
 1711 02db 04        		.byte	0x4
 1712 02dc AD        		.byte	0xad
 1713 02dd 0D        		.byte	0xd
 1714 02de 0000 04F3 		.long	0x4f3
 1715 02e2 28        		.byte	0x28
 1716 02e3 02        		.uleb128 0x2
 1717 02e4 0000 0000 		.long	.LASF48
 1718 02e8 04        		.byte	0x4
 1719 02e9 AE        		.byte	0xae
 1720 02ea 09        		.byte	0x9
 1721 02eb 0000 050C 		.long	0x50c
 1722 02ef 2C        		.byte	0x2c
 1723 02f0 0A        		.uleb128 0xa
 1724 02f1 5F75 6200 		.string	"_ub"
 1725 02f5 04        		.byte	0x4
 1726 02f6 B1        		.byte	0xb1
 1727 02f7 11        		.byte	0x11
 1728 02f8 0000 0221 		.long	0x221
 1729 02fc 30        		.byte	0x30
 1730 02fd 0A        		.uleb128 0xa
 1731 02fe 5F75 7000 		.string	"_up"
 1732 0302 04        		.byte	0x4
 1733 0303 B2        		.byte	0xb2
 1734 0304 12        		.byte	0x12
 1735 0305 0000 0247 		.long	0x247
 1736 0309 38        		.byte	0x38
 1737 030a 0A        		.uleb128 0xa
 1738 030b 5F75 7200 		.string	"_ur"
 1739 030f 04        		.byte	0x4
 1740 0310 B3        		.byte	0xb3
 1741 0311 07        		.byte	0x7
 1742 0312 0000 008A 		.long	0x8a
 1743 0316 3C        		.byte	0x3c
 1744 0317 02        		.uleb128 0x2
 1745 0318 0000 0000 		.long	.LASF49
 1746 031c 04        		.byte	0x4
 1747 031d B6        		.byte	0xb6
 1748 031e 11        		.byte	0x11
 1749 031f 0000 0511 		.long	0x511
 1750 0323 40        		.byte	0x40
 1751 0324 02        		.uleb128 0x2
 1752 0325 0000 0000 		.long	.LASF50


 1753 0329 04        		.byte	0x4
 1754 032a B7        		.byte	0xb7
 1755 032b 11        		.byte	0x11
 1756 032c 0000 0521 		.long	0x521
 1757 0330 43        		.byte	0x43
 1758 0331 0A        		.uleb128 0xa
 1759 0332 5F6C 6200 		.string	"_lb"
 1760 0336 04        		.byte	0x4
 1761 0337 BA        		.byte	0xba
 1762 0338 11        		.byte	0x11
 1763 0339 0000 0221 		.long	0x221
 1764 033d 44        		.byte	0x44
 1765 033e 02        		.uleb128 0x2
 1766 033f 0000 0000 		.long	.LASF51
 1767 0343 04        		.byte	0x4
 1768 0344 BD        		.byte	0xbd
 1769 0345 07        		.byte	0x7
 1770 0346 0000 008A 		.long	0x8a
 1771 034a 4C        		.byte	0x4c
 1772 034b 02        		.uleb128 0x2
 1773 034c 0000 0000 		.long	.LASF52
 1774 0350 04        		.byte	0x4
 1775 0351 BE        		.byte	0xbe
 1776 0352 0A        		.byte	0xa
 1777 0353 0000 007E 		.long	0x7e
 1778 0357 50        		.byte	0x50
 1779 0358 02        		.uleb128 0x2
 1780 0359 0000 0000 		.long	.LASF53
 1781 035d 04        		.byte	0x4
 1782 035e C1        		.byte	0xc1
 1783 035f 12        		.byte	0x12
 1784 0360 0000 03AB 		.long	0x3ab
 1785 0364 54        		.byte	0x54
 1786 0365 02        		.uleb128 0x2
 1787 0366 0000 0000 		.long	.LASF54
 1788 036a 04        		.byte	0x4
 1789 036b C5        		.byte	0xc5
 1790 036c 0C        		.byte	0xc
 1791 036d 0000 0127 		.long	0x127
 1792 0371 58        		.byte	0x58
 1793 0372 02        		.uleb128 0x2
 1794 0373 0000 0000 		.long	.LASF55
 1795 0377 04        		.byte	0x4
 1796 0378 C7        		.byte	0xc7
 1797 0379 0E        		.byte	0xe
 1798 037a 0000 0101 		.long	0x101
 1799 037e 5C        		.byte	0x5c
 1800 037f 02        		.uleb128 0x2
 1801 0380 0000 0000 		.long	.LASF56
 1802 0384 04        		.byte	0x4
 1803 0385 C8        		.byte	0xc8
 1804 0386 09        		.byte	0x9
 1805 0387 0000 008A 		.long	0x8a
 1806 038b 64        		.byte	0x64
 1807 038c 00        		.byte	0
 1808 038d 0F        		.uleb128 0xf
 1809 038e 0000 00A2 		.long	0xa2


 1810 0392 0000 03AB 		.long	0x3ab
 1811 0396 04        		.uleb128 0x4
 1812 0397 0000 03AB 		.long	0x3ab
 1813 039b 04        		.uleb128 0x4
 1814 039c 0000 010D 		.long	0x10d
 1815 03a0 04        		.uleb128 0x4
 1816 03a1 0000 0492 		.long	0x492
 1817 03a5 04        		.uleb128 0x4
 1818 03a6 0000 008A 		.long	0x8a
 1819 03aa 00        		.byte	0
 1820 03ab 05        		.uleb128 0x5
 1821 03ac 0000 03B0 		.long	0x3b0
 1822 03b0 26        		.uleb128 0x26
 1823 03b1 0000 0000 		.long	.LASF57
 1824 03b5 0116      		.word	0x116
 1825 03b7 04        		.byte	0x4
 1826 03b8 0237      		.word	0x237
 1827 03ba 08        		.byte	0x8
 1828 03bb 0000 0492 		.long	0x492
 1829 03bf 03        		.uleb128 0x3
 1830 03c0 0000 0000 		.long	.LASF58
 1831 03c4 0239      		.word	0x239
 1832 03c6 07        		.byte	0x7
 1833 03c7 0000 008A 		.long	0x8a
 1834 03cb 00        		.byte	0
 1835 03cc 03        		.uleb128 0x3
 1836 03cd 0000 0000 		.long	.LASF59
 1837 03d1 023E      		.word	0x23e
 1838 03d3 0B        		.byte	0xb
 1839 03d4 0000 053E 		.long	0x53e
 1840 03d8 04        		.byte	0x4
 1841 03d9 03        		.uleb128 0x3
 1842 03da 0000 0000 		.long	.LASF60
 1843 03de 023E      		.word	0x23e
 1844 03e0 14        		.byte	0x14
 1845 03e1 0000 053E 		.long	0x53e
 1846 03e5 08        		.byte	0x8
 1847 03e6 03        		.uleb128 0x3
 1848 03e7 0000 0000 		.long	.LASF61
 1849 03eb 023E      		.word	0x23e
 1850 03ed 1E        		.byte	0x1e
 1851 03ee 0000 053E 		.long	0x53e
 1852 03f2 0C        		.byte	0xc
 1853 03f3 03        		.uleb128 0x3
 1854 03f4 0000 0000 		.long	.LASF62
 1855 03f8 0240      		.word	0x240
 1856 03fa 08        		.byte	0x8
 1857 03fb 0000 008A 		.long	0x8a
 1858 03ff 10        		.byte	0x10
 1859 0400 03        		.uleb128 0x3
 1860 0401 0000 0000 		.long	.LASF63
 1861 0405 0241      		.word	0x241
 1862 0407 08        		.byte	0x8
 1863 0408 0000 06C6 		.long	0x6c6
 1864 040c 14        		.byte	0x14
 1865 040d 03        		.uleb128 0x3
 1866 040e 0000 0000 		.long	.LASF64


 1867 0412 0246      		.word	0x246
 1868 0414 16        		.byte	0x16
 1869 0415 0000 06DB 		.long	0x6db
 1870 0419 2E        		.byte	0x2e
 1871 041a 03        		.uleb128 0x3
 1872 041b 0000 0000 		.long	.LASF65
 1873 041f 024C      		.word	0x24c
 1874 0421 0A        		.byte	0xa
 1875 0422 0000 06EB 		.long	0x6eb
 1876 0426 32        		.byte	0x32
 1877 0427 03        		.uleb128 0x3
 1878 0428 0000 0000 		.long	.LASF66
 1879 042c 024F      		.word	0x24f
 1880 042e 13        		.byte	0x13
 1881 042f 0000 018B 		.long	0x18b
 1882 0433 36        		.byte	0x36
 1883 0434 03        		.uleb128 0x3
 1884 0435 0000 0000 		.long	.LASF67
 1885 0439 0250      		.word	0x250
 1886 043b 07        		.byte	0x7
 1887 043c 0000 008A 		.long	0x8a
 1888 0440 3A        		.byte	0x3a
 1889 0441 03        		.uleb128 0x3
 1890 0442 0000 0000 		.long	.LASF68
 1891 0446 0251      		.word	0x251
 1892 0448 13        		.byte	0x13
 1893 0449 0000 018B 		.long	0x18b
 1894 044d 3E        		.byte	0x3e
 1895 044e 03        		.uleb128 0x3
 1896 044f 0000 0000 		.long	.LASF69
 1897 0453 0252      		.word	0x252
 1898 0455 14        		.byte	0x14
 1899 0456 0000 06F0 		.long	0x6f0
 1900 045a 42        		.byte	0x42
 1901 045b 03        		.uleb128 0x3
 1902 045c 0000 0000 		.long	.LASF70
 1903 0460 0255      		.word	0x255
 1904 0462 07        		.byte	0x7
 1905 0463 0000 008A 		.long	0x8a
 1906 0467 46        		.byte	0x46
 1907 0468 03        		.uleb128 0x3
 1908 0469 0000 0000 		.long	.LASF71
 1909 046d 0256      		.word	0x256
 1910 046f 09        		.byte	0x9
 1911 0470 0000 0492 		.long	0x492
 1912 0474 4A        		.byte	0x4a
 1913 0475 03        		.uleb128 0x3
 1914 0476 0000 0000 		.long	.LASF72
 1915 047a 0279      		.word	0x279
 1916 047c 07        		.byte	0x7
 1917 047d 0000 06AE 		.long	0x6ae
 1918 0481 4E        		.byte	0x4e
 1919 0482 27        		.uleb128 0x27
 1920 0483 0000 0000 		.long	.LASF73
 1921 0487 04        		.byte	0x4
 1922 0488 0281      		.word	0x281
 1923 048a 0B        		.byte	0xb


 1924 048b 0000 0700 		.long	0x700
 1925 048f 0112      		.word	0x112
 1926 0491 00        		.byte	0
 1927 0492 05        		.uleb128 0x5
 1928 0493 0000 0497 		.long	0x497
 1929 0497 06        		.uleb128 0x6
 1930 0498 01        		.byte	0x1
 1931 0499 06        		.byte	0x6
 1932 049a 0000 0000 		.long	.LASF74
 1933 049e 28        		.uleb128 0x28
 1934 049f 0000 0497 		.long	0x497
 1935 04a3 05        		.uleb128 0x5
 1936 04a4 0000 038D 		.long	0x38d
 1937 04a8 0F        		.uleb128 0xf
 1938 04a9 0000 00A2 		.long	0xa2
 1939 04ad 0000 04C6 		.long	0x4c6
 1940 04b1 04        		.uleb128 0x4
 1941 04b2 0000 03AB 		.long	0x3ab
 1942 04b6 04        		.uleb128 0x4
 1943 04b7 0000 010D 		.long	0x10d
 1944 04bb 04        		.uleb128 0x4
 1945 04bc 0000 04C6 		.long	0x4c6
 1946 04c0 04        		.uleb128 0x4
 1947 04c1 0000 008A 		.long	0x8a
 1948 04c5 00        		.byte	0
 1949 04c6 05        		.uleb128 0x5
 1950 04c7 0000 049E 		.long	0x49e
 1951 04cb 16        		.uleb128 0x16
 1952 04cc 0000 04C6 		.long	0x4c6
 1953 04d0 05        		.uleb128 0x5
 1954 04d1 0000 04A8 		.long	0x4a8
 1955 04d5 0F        		.uleb128 0xf
 1956 04d6 0000 0096 		.long	0x96
 1957 04da 0000 04F3 		.long	0x4f3
 1958 04de 04        		.uleb128 0x4
 1959 04df 0000 03AB 		.long	0x3ab
 1960 04e3 04        		.uleb128 0x4
 1961 04e4 0000 010D 		.long	0x10d
 1962 04e8 04        		.uleb128 0x4
 1963 04e9 0000 0096 		.long	0x96
 1964 04ed 04        		.uleb128 0x4
 1965 04ee 0000 008A 		.long	0x8a
 1966 04f2 00        		.byte	0
 1967 04f3 05        		.uleb128 0x5
 1968 04f4 0000 04D5 		.long	0x4d5
 1969 04f8 0F        		.uleb128 0xf
 1970 04f9 0000 008A 		.long	0x8a
 1971 04fd 0000 050C 		.long	0x50c
 1972 0501 04        		.uleb128 0x4
 1973 0502 0000 03AB 		.long	0x3ab
 1974 0506 04        		.uleb128 0x4
 1975 0507 0000 010D 		.long	0x10d
 1976 050b 00        		.byte	0
 1977 050c 05        		.uleb128 0x5
 1978 050d 0000 04F8 		.long	0x4f8
 1979 0511 08        		.uleb128 0x8
 1980 0512 0000 002D 		.long	0x2d


 1981 0516 0000 0521 		.long	0x521
 1982 051a 09        		.uleb128 0x9
 1983 051b 0000 0049 		.long	0x49
 1984 051f 02        		.byte	0x2
 1985 0520 00        		.byte	0
 1986 0521 08        		.uleb128 0x8
 1987 0522 0000 002D 		.long	0x2d
 1988 0526 0000 0531 		.long	0x531
 1989 052a 09        		.uleb128 0x9
 1990 052b 0000 0049 		.long	0x49
 1991 052f 00        		.byte	0
 1992 0530 00        		.byte	0
 1993 0531 13        		.uleb128 0x13
 1994 0532 0000 0000 		.long	.LASF75
 1995 0536 04        		.byte	0x4
 1996 0537 010D      		.word	0x10d
 1997 0539 1A        		.byte	0x1a
 1998 053a 0000 024C 		.long	0x24c
 1999 053e 05        		.uleb128 0x5
 2000 053f 0000 0531 		.long	0x531
 2001 0543 29        		.uleb128 0x29
 2002 0544 0000 0000 		.long	.LASF76
 2003 0548 0E        		.byte	0xe
 2004 0549 04        		.byte	0x4
 2005 054a 0131      		.word	0x131
 2006 054c 08        		.byte	0x8
 2007 054d 0000 0579 		.long	0x579
 2008 0551 03        		.uleb128 0x3
 2009 0552 0000 0000 		.long	.LASF77
 2010 0556 0132      		.word	0x132
 2011 0558 12        		.byte	0x12
 2012 0559 0000 0579 		.long	0x579
 2013 055d 00        		.byte	0
 2014 055e 03        		.uleb128 0x3
 2015 055f 0000 0000 		.long	.LASF78
 2016 0563 0133      		.word	0x133
 2017 0565 12        		.byte	0x12
 2018 0566 0000 0579 		.long	0x579
 2019 056a 06        		.byte	0x6
 2020 056b 03        		.uleb128 0x3
 2021 056c 0000 0000 		.long	.LASF79
 2022 0570 0134      		.word	0x134
 2023 0572 12        		.byte	0x12
 2024 0573 0000 003B 		.long	0x3b
 2025 0577 0C        		.byte	0xc
 2026 0578 00        		.byte	0
 2027 0579 08        		.uleb128 0x8
 2028 057a 0000 003B 		.long	0x3b
 2029 057e 0000 0589 		.long	0x589
 2030 0582 09        		.uleb128 0x9
 2031 0583 0000 0049 		.long	0x49
 2032 0587 02        		.byte	0x2
 2033 0588 00        		.byte	0
 2034 0589 2A        		.uleb128 0x2a
 2035 058a C4        		.byte	0xc4
 2036 058b 04        		.byte	0x4
 2037 058c 025A      		.word	0x25a


 2038 058e 07        		.byte	0x7
 2039 058f 0000 067E 		.long	0x67e
 2040 0593 03        		.uleb128 0x3
 2041 0594 0000 0000 		.long	.LASF80
 2042 0598 025F      		.word	0x25f
 2043 059a 12        		.byte	0x12
 2044 059b 0000 0492 		.long	0x492
 2045 059f 00        		.byte	0
 2046 05a0 03        		.uleb128 0x3
 2047 05a1 0000 0000 		.long	.LASF81
 2048 05a5 0260      		.word	0x260
 2049 05a7 10        		.byte	0x10
 2050 05a8 0000 067E 		.long	0x67e
 2051 05ac 04        		.byte	0x4
 2052 05ad 03        		.uleb128 0x3
 2053 05ae 0000 0000 		.long	.LASF82
 2054 05b2 0261      		.word	0x261
 2055 05b4 17        		.byte	0x17
 2056 05b5 0000 01A0 		.long	0x1a0
 2057 05b9 1E        		.byte	0x1e
 2058 05ba 03        		.uleb128 0x3
 2059 05bb 0000 0000 		.long	.LASF83
 2060 05bf 0262      		.word	0x262
 2061 05c1 0F        		.byte	0xf
 2062 05c2 0000 008A 		.long	0x8a
 2063 05c6 42        		.byte	0x42
 2064 05c7 03        		.uleb128 0x3
 2065 05c8 0000 0000 		.long	.LASF84
 2066 05cc 0263      		.word	0x263
 2067 05ce 2C        		.byte	0x2c
 2068 05cf 0000 0057 		.long	0x57
 2069 05d3 46        		.byte	0x46
 2070 05d4 03        		.uleb128 0x3
 2071 05d5 0000 0000 		.long	.LASF85
 2072 05d9 0264      		.word	0x264
 2073 05db 1A        		.byte	0x1a
 2074 05dc 0000 0543 		.long	0x543
 2075 05e0 4E        		.byte	0x4e
 2076 05e1 03        		.uleb128 0x3
 2077 05e2 0000 0000 		.long	.LASF86
 2078 05e6 0265      		.word	0x265
 2079 05e8 16        		.byte	0x16
 2080 05e9 0000 0101 		.long	0x101
 2081 05ed 5C        		.byte	0x5c
 2082 05ee 03        		.uleb128 0x3
 2083 05ef 0000 0000 		.long	.LASF87
 2084 05f3 0266      		.word	0x266
 2085 05f5 16        		.byte	0x16
 2086 05f6 0000 0101 		.long	0x101
 2087 05fa 64        		.byte	0x64
 2088 05fb 03        		.uleb128 0x3
 2089 05fc 0000 0000 		.long	.LASF88
 2090 0600 0267      		.word	0x267
 2091 0602 16        		.byte	0x16
 2092 0603 0000 0101 		.long	0x101
 2093 0607 6C        		.byte	0x6c
 2094 0608 03        		.uleb128 0x3


 2095 0609 0000 0000 		.long	.LASF89
 2096 060d 0268      		.word	0x268
 2097 060f 10        		.byte	0x10
 2098 0610 0000 068E 		.long	0x68e
 2099 0614 74        		.byte	0x74
 2100 0615 03        		.uleb128 0x3
 2101 0616 0000 0000 		.long	.LASF90
 2102 061a 0269      		.word	0x269
 2103 061c 10        		.byte	0x10
 2104 061d 0000 069E 		.long	0x69e
 2105 0621 7C        		.byte	0x7c
 2106 0622 03        		.uleb128 0x3
 2107 0623 0000 0000 		.long	.LASF91
 2108 0627 026A      		.word	0x26a
 2109 0629 0F        		.byte	0xf
 2110 062a 0000 008A 		.long	0x8a
 2111 062e 94        		.byte	0x94
 2112 062f 03        		.uleb128 0x3
 2113 0630 0000 0000 		.long	.LASF92
 2114 0634 026B      		.word	0x26b
 2115 0636 16        		.byte	0x16
 2116 0637 0000 0101 		.long	0x101
 2117 063b 98        		.byte	0x98
 2118 063c 03        		.uleb128 0x3
 2119 063d 0000 0000 		.long	.LASF93
 2120 0641 026C      		.word	0x26c
 2121 0643 16        		.byte	0x16
 2122 0644 0000 0101 		.long	0x101
 2123 0648 A0        		.byte	0xa0
 2124 0649 03        		.uleb128 0x3
 2125 064a 0000 0000 		.long	.LASF94
 2126 064e 026D      		.word	0x26d
 2127 0650 16        		.byte	0x16
 2128 0651 0000 0101 		.long	0x101
 2129 0655 A8        		.byte	0xa8
 2130 0656 03        		.uleb128 0x3
 2131 0657 0000 0000 		.long	.LASF95
 2132 065b 026E      		.word	0x26e
 2133 065d 16        		.byte	0x16
 2134 065e 0000 0101 		.long	0x101
 2135 0662 B0        		.byte	0xb0
 2136 0663 03        		.uleb128 0x3
 2137 0664 0000 0000 		.long	.LASF96
 2138 0668 026F      		.word	0x26f
 2139 066a 16        		.byte	0x16
 2140 066b 0000 0101 		.long	0x101
 2141 066f B8        		.byte	0xb8
 2142 0670 03        		.uleb128 0x3
 2143 0671 0000 0000 		.long	.LASF97
 2144 0675 0270      		.word	0x270
 2145 0677 08        		.byte	0x8
 2146 0678 0000 008A 		.long	0x8a
 2147 067c C0        		.byte	0xc0
 2148 067d 00        		.byte	0
 2149 067e 08        		.uleb128 0x8
 2150 067f 0000 0497 		.long	0x497
 2151 0683 0000 068E 		.long	0x68e


 2152 0687 09        		.uleb128 0x9
 2153 0688 0000 0049 		.long	0x49
 2154 068c 19        		.byte	0x19
 2155 068d 00        		.byte	0
 2156 068e 08        		.uleb128 0x8
 2157 068f 0000 0497 		.long	0x497
 2158 0693 0000 069E 		.long	0x69e
 2159 0697 09        		.uleb128 0x9
 2160 0698 0000 0049 		.long	0x49
 2161 069c 07        		.byte	0x7
 2162 069d 00        		.byte	0
 2163 069e 08        		.uleb128 0x8
 2164 069f 0000 0497 		.long	0x497
 2165 06a3 0000 06AE 		.long	0x6ae
 2166 06a7 09        		.uleb128 0x9
 2167 06a8 0000 0049 		.long	0x49
 2168 06ac 17        		.byte	0x17
 2169 06ad 00        		.byte	0
 2170 06ae 2B        		.uleb128 0x2b
 2171 06af C4        		.byte	0xc4
 2172 06b0 04        		.byte	0x4
 2173 06b1 0258      		.word	0x258
 2174 06b3 03        		.byte	0x3
 2175 06b4 0000 06C6 		.long	0x6c6
 2176 06b8 2C        		.uleb128 0x2c
 2177 06b9 0000 0000 		.long	.LASF57
 2178 06bd 04        		.byte	0x4
 2179 06be 0271      		.word	0x271
 2180 06c0 0B        		.byte	0xb
 2181 06c1 0000 0589 		.long	0x589
 2182 06c5 00        		.byte	0
 2183 06c6 08        		.uleb128 0x8
 2184 06c7 0000 0497 		.long	0x497
 2185 06cb 0000 06D6 		.long	0x6d6
 2186 06cf 09        		.uleb128 0x9
 2187 06d0 0000 0049 		.long	0x49
 2188 06d4 18        		.byte	0x18
 2189 06d5 00        		.byte	0
 2190 06d6 2D        		.uleb128 0x2d
 2191 06d7 0000 0000 		.long	.LASF146
 2192 06db 05        		.uleb128 0x5
 2193 06dc 0000 06D6 		.long	0x6d6
 2194 06e0 17        		.uleb128 0x17
 2195 06e1 0000 06EB 		.long	0x6eb
 2196 06e5 04        		.uleb128 0x4
 2197 06e6 0000 03AB 		.long	0x3ab
 2198 06ea 00        		.byte	0
 2199 06eb 05        		.uleb128 0x5
 2200 06ec 0000 06E0 		.long	0x6e0
 2201 06f0 05        		.uleb128 0x5
 2202 06f1 0000 018B 		.long	0x18b
 2203 06f5 17        		.uleb128 0x17
 2204 06f6 0000 0700 		.long	0x700
 2205 06fa 04        		.uleb128 0x4
 2206 06fb 0000 008A 		.long	0x8a
 2207 06ff 00        		.byte	0
 2208 0700 05        		.uleb128 0x5


 2209 0701 0000 0705 		.long	0x705
 2210 0705 05        		.uleb128 0x5
 2211 0706 0000 06F5 		.long	0x6f5
 2212 070a 07        		.uleb128 0x7
 2213 070b 0000 0000 		.long	.LASF98
 2214 070f 06        		.byte	0x6
 2215 0710 42        		.byte	0x42
 2216 0711 10        		.byte	0x10
 2217 0712 0000 0531 		.long	0x531
 2218 0716 07        		.uleb128 0x7
 2219 0717 0000 0000 		.long	.LASF99
 2220 071b 07        		.byte	0x7
 2221 071c 11        		.byte	0x11
 2222 071d 0D        		.byte	0xd
 2223 071e 0000 008A 		.long	0x8a
 2224 0722 11        		.uleb128 0x11
 2225 0723 0C        		.byte	0xc
 2226 0724 07        		.byte	0x7
 2227 0725 13        		.byte	0x13
 2228 0726 0000 0752 		.long	0x752
 2229 072a 02        		.uleb128 0x2
 2230 072b 0000 0000 		.long	.LASF100
 2231 072f 07        		.byte	0x7
 2232 0730 15        		.byte	0x15
 2233 0731 07        		.byte	0x7
 2234 0732 0000 008A 		.long	0x8a
 2235 0736 00        		.byte	0
 2236 0737 0A        		.uleb128 0xa
 2237 0738 6E73 7400 		.string	"nst"
 2238 073c 07        		.byte	0x7
 2239 073d 16        		.byte	0x16
 2240 073e 07        		.byte	0x7
 2241 073f 0000 008A 		.long	0x8a
 2242 0743 04        		.byte	0x4
 2243 0744 02        		.uleb128 0x2
 2244 0745 0000 0000 		.long	.LASF101
 2245 0749 07        		.byte	0x7
 2246 074a 17        		.byte	0x17
 2247 074b 10        		.byte	0x10
 2248 074c 0000 0716 		.long	0x716
 2249 0750 08        		.byte	0x8
 2250 0751 00        		.byte	0
 2251 0752 07        		.uleb128 0x7
 2252 0753 0000 0000 		.long	.LASF102
 2253 0757 07        		.byte	0x7
 2254 0758 18        		.byte	0x18
 2255 0759 03        		.byte	0x3
 2256 075a 0000 0722 		.long	0x722
 2257 075e 08        		.uleb128 0x8
 2258 075f 0000 0752 		.long	0x752
 2259 0763 0000 076E 		.long	0x76e
 2260 0767 09        		.uleb128 0x9
 2261 0768 0000 0049 		.long	0x49
 2262 076c 04        		.byte	0x4
 2263 076d 00        		.byte	0
 2264 076e 0C        		.uleb128 0xc
 2265 076f 0000 0000 		.long	.LASF103


 2266 0773 07        		.byte	0x7
 2267 0774 30        		.byte	0x30
 2268 0775 17        		.byte	0x17
 2269 0776 0000 075E 		.long	0x75e
 2270 077a 0C        		.uleb128 0xc
 2271 077b 0000 0000 		.long	.LASF104
 2272 077f 07        		.byte	0x7
 2273 0780 59        		.byte	0x59
 2274 0781 0E        		.byte	0xe
 2275 0782 0000 0786 		.long	0x786
 2276 0786 05        		.uleb128 0x5
 2277 0787 0000 070A 		.long	0x70a
 2278 078b 16        		.uleb128 0x16
 2279 078c 0000 0786 		.long	0x786
 2280 0790 0C        		.uleb128 0xc
 2281 0791 0000 0000 		.long	.LASF105
 2282 0795 07        		.byte	0x7
 2283 0796 5A        		.byte	0x5a
 2284 0797 0E        		.byte	0xe
 2285 0798 0000 0786 		.long	0x786
 2286 079c 0C        		.uleb128 0xc
 2287 079d 0000 0000 		.long	.LASF106
 2288 07a1 07        		.byte	0x7
 2289 07a2 5B        		.byte	0x5b
 2290 07a3 0E        		.byte	0xe
 2291 07a4 0000 0786 		.long	0x786
 2292 07a8 0C        		.uleb128 0xc
 2293 07a9 0000 0000 		.long	.LASF107
 2294 07ad 07        		.byte	0x7
 2295 07ae 5C        		.byte	0x5c
 2296 07af 0E        		.byte	0xe
 2297 07b0 0000 0786 		.long	0x786
 2298 07b4 11        		.uleb128 0x11
 2299 07b5 04        		.byte	0x4
 2300 07b6 08        		.byte	0x8
 2301 07b7 08        		.byte	0x8
 2302 07b8 0000 07CA 		.long	0x7ca
 2303 07bc 02        		.uleb128 0x2
 2304 07bd 0000 0000 		.long	.LASF108
 2305 07c1 08        		.byte	0x8
 2306 07c2 0A        		.byte	0xa
 2307 07c3 09        		.byte	0x9
 2308 07c4 0000 008A 		.long	0x8a
 2309 07c8 00        		.byte	0
 2310 07c9 00        		.byte	0
 2311 07ca 07        		.uleb128 0x7
 2312 07cb 0000 0000 		.long	.LASF109
 2313 07cf 08        		.byte	0x8
 2314 07d0 0B        		.byte	0xb
 2315 07d1 03        		.byte	0x3
 2316 07d2 0000 07B4 		.long	0x7b4
 2317 07d6 08        		.uleb128 0x8
 2318 07d7 0000 07CA 		.long	0x7ca
 2319 07db 0000 07E6 		.long	0x7e6
 2320 07df 09        		.uleb128 0x9
 2321 07e0 0000 0049 		.long	0x49
 2322 07e4 0C        		.byte	0xc


 2323 07e5 00        		.byte	0
 2324 07e6 0C        		.uleb128 0xc
 2325 07e7 0000 0000 		.long	.LASF110
 2326 07eb 08        		.byte	0x8
 2327 07ec 0E        		.byte	0xe
 2328 07ed 0D        		.byte	0xd
 2329 07ee 0000 07D6 		.long	0x7d6
 2330 07f2 2E        		.uleb128 0x2e
 2331 07f3 0000 07E6 		.long	0x7e6
 2332 07f7 01        		.byte	0x1
 2333 07f8 05        		.byte	0x5
 2334 07f9 06        		.byte	0x6
 2335 07fa 05        		.uleb128 0x5
 2336 07fb 03        		.byte	0x3
 2337 07fc 0000 0000 		.long	cards
 2338 0800 0B        		.uleb128 0xb
 2339 0801 0000 0000 		.long	.LASF111
 2340 0805 08        		.byte	0x8
 2341 0806 05        		.byte	0x5
 2342 0807 0000 008A 		.long	0x8a
 2343 080b 05        		.uleb128 0x5
 2344 080c 03        		.byte	0x3
 2345 080d 0000 0000 		.long	round_count
 2346 0811 0B        		.uleb128 0xb
 2347 0812 0000 0000 		.long	.LASF112
 2348 0816 09        		.byte	0x9
 2349 0817 05        		.byte	0x5
 2350 0818 0000 008A 		.long	0x8a
 2351 081c 05        		.uleb128 0x5
 2352 081d 03        		.byte	0x3
 2353 081e 0000 0000 		.long	top_index
 2354 0822 0B        		.uleb128 0xb
 2355 0823 0000 0000 		.long	.LASF113
 2356 0827 0C        		.byte	0xc
 2357 0828 05        		.byte	0x5
 2358 0829 0000 008A 		.long	0x8a
 2359 082d 05        		.uleb128 0x5
 2360 082e 03        		.byte	0x3
 2361 082f 0000 0000 		.long	score1
 2362 0833 0B        		.uleb128 0xb
 2363 0834 0000 0000 		.long	.LASF114
 2364 0838 0D        		.byte	0xd
 2365 0839 05        		.byte	0x5
 2366 083a 0000 008A 		.long	0x8a
 2367 083e 05        		.uleb128 0x5
 2368 083f 03        		.byte	0x3
 2369 0840 0000 0000 		.long	score2
 2370 0844 0B        		.uleb128 0xb
 2371 0845 0000 0000 		.long	.LASF115
 2372 0849 0F        		.byte	0xf
 2373 084a 05        		.byte	0x5
 2374 084b 0000 008A 		.long	0x8a
 2375 084f 05        		.uleb128 0x5
 2376 0850 03        		.byte	0x3
 2377 0851 0000 0000 		.long	guess1
 2378 0855 0B        		.uleb128 0xb
 2379 0856 0000 0000 		.long	.LASF116


 2380 085a 10        		.byte	0x10
 2381 085b 05        		.byte	0x5
 2382 085c 0000 008A 		.long	0x8a
 2383 0860 05        		.uleb128 0x5
 2384 0861 03        		.byte	0x3
 2385 0862 0000 0000 		.long	guess2
 2386 0866 0B        		.uleb128 0xb
 2387 0867 0000 0000 		.long	.LASF117
 2388 086b 12        		.byte	0x12
 2389 086c 05        		.byte	0x5
 2390 086d 0000 008A 		.long	0x8a
 2391 0871 05        		.uleb128 0x5
 2392 0872 03        		.byte	0x3
 2393 0873 0000 0000 		.long	is_finish
 2394 0877 0B        		.uleb128 0xb
 2395 0878 0000 0000 		.long	.LASF118
 2396 087c 13        		.byte	0x13
 2397 087d 05        		.byte	0x5
 2398 087e 0000 008A 		.long	0x8a
 2399 0882 05        		.uleb128 0x5
 2400 0883 03        		.byte	0x3
 2401 0884 0000 0000 		.long	winner
 2402 0888 0B        		.uleb128 0xb
 2403 0889 0000 0000 		.long	.LASF119
 2404 088d 14        		.byte	0x14
 2405 088e 0E        		.byte	0xe
 2406 088f 0000 0091 		.long	0x91
 2407 0893 05        		.uleb128 0x5
 2408 0894 03        		.byte	0x3
 2409 0895 0000 0000 		.long	flg0
 2410 0899 0B        		.uleb128 0xb
 2411 089a 0000 0000 		.long	.LASF120
 2412 089e 15        		.byte	0x15
 2413 089f 0E        		.byte	0xe
 2414 08a0 0000 0091 		.long	0x91
 2415 08a4 05        		.uleb128 0x5
 2416 08a5 03        		.byte	0x3
 2417 08a6 0000 0000 		.long	flg1
 2418 08aa 0B        		.uleb128 0xb
 2419 08ab 0000 0000 		.long	.LASF121
 2420 08af 18        		.byte	0x18
 2421 08b0 17        		.byte	0x17
 2422 08b1 0000 0079 		.long	0x79
 2423 08b5 05        		.uleb128 0x5
 2424 08b6 03        		.byte	0x3
 2425 08b7 0000 0000 		.long	rand_counter
 2426 08bb 18        		.uleb128 0x18
 2427 08bc 0000 0000 		.long	.LASF122
 2428 08c0 3D        		.byte	0x3d
 2429 08c1 0000 08C7 		.long	0x8c7
 2430 08c5 10        		.uleb128 0x10
 2431 08c6 00        		.byte	0
 2432 08c7 2F        		.uleb128 0x2f
 2433 08c8 0000 0000 		.long	.LASF124
 2434 08cc 07        		.byte	0x7
 2435 08cd 3B        		.byte	0x3b
 2436 08ce 0D        		.byte	0xd


 2437 08cf 0000 08D9 		.long	0x8d9
 2438 08d3 04        		.uleb128 0x4
 2439 08d4 0000 010D 		.long	0x10d
 2440 08d8 00        		.byte	0
 2441 08d9 18        		.uleb128 0x18
 2442 08da 0000 0000 		.long	.LASF123
 2443 08de 3A        		.byte	0x3a
 2444 08df 0000 08E5 		.long	0x8e5
 2445 08e3 10        		.uleb128 0x10
 2446 08e4 00        		.byte	0
 2447 08e5 30        		.uleb128 0x30
 2448 08e6 0000 0000 		.long	.LASF125
 2449 08ea 06        		.byte	0x6
 2450 08eb 0159      		.word	0x159
 2451 08ed 08        		.byte	0x8
 2452 08ee 0000 0786 		.long	0x786
 2453 08f2 0000 0901 		.long	0x901
 2454 08f6 04        		.uleb128 0x4
 2455 08f7 0000 008A 		.long	0x8a
 2456 08fb 04        		.uleb128 0x4
 2457 08fc 0000 04C6 		.long	0x4c6
 2458 0900 00        		.byte	0
 2459 0901 19        		.uleb128 0x19
 2460 0902 5600      		.string	"V"
 2461 0904 55        		.byte	0x55
 2462 0905 0000 090F 		.long	0x90f
 2463 0909 04        		.uleb128 0x4
 2464 090a 0000 008A 		.long	0x8a
 2465 090e 00        		.byte	0
 2466 090f 1A        		.uleb128 0x1a
 2467 0910 0000 0000 		.long	.LASF126
 2468 0914 CC        		.byte	0xcc
 2469 0915 0000 008A 		.long	0x8a
 2470 0919 0000 0929 		.long	0x929
 2471 091d 04        		.uleb128 0x4
 2472 091e 0000 078B 		.long	0x78b
 2473 0922 04        		.uleb128 0x4
 2474 0923 0000 04CB 		.long	0x4cb
 2475 0927 10        		.uleb128 0x10
 2476 0928 00        		.byte	0
 2477 0929 19        		.uleb128 0x19
 2478 092a 5000      		.string	"P"
 2479 092c 54        		.byte	0x54
 2480 092d 0000 0937 		.long	0x937
 2481 0931 04        		.uleb128 0x4
 2482 0932 0000 008A 		.long	0x8a
 2483 0936 00        		.byte	0
 2484 0937 1A        		.uleb128 0x1a
 2485 0938 0000 0000 		.long	.LASF127
 2486 093c CA        		.byte	0xca
 2487 093d 0000 008A 		.long	0x8a
 2488 0941 0000 0951 		.long	0x951
 2489 0945 04        		.uleb128 0x4
 2490 0946 0000 078B 		.long	0x78b
 2491 094a 04        		.uleb128 0x4
 2492 094b 0000 04CB 		.long	0x4cb
 2493 094f 10        		.uleb128 0x10


 2494 0950 00        		.byte	0
 2495 0951 31        		.uleb128 0x31
 2496 0952 0000 0000 		.long	.LASF147
 2497 0956 01        		.byte	0x1
 2498 0957 C6        		.byte	0xc6
 2499 0958 05        		.byte	0x5
 2500 0959 0000 008A 		.long	0x8a
 2501 095d 0000 0000 		.long	.LFB12
 2502 0961 0000 007C 		.long	.LFE12-.LFB12
 2503 0965 01        		.uleb128 0x1
 2504 0966 9C        		.byte	0x9c
 2505 0967 0000 09F2 		.long	0x9f2
 2506 096b 32        		.uleb128 0x32
 2507 096c 0000 0D48 		.long	0xd48
 2508 0970 0000 0000 		.long	.LBI21
 2509 0974 01        		.byte	.LVU235
 2510 0975 0000 0000 		.long	.LBB21
 2511 0979 0000 0012 		.long	.LBE21-.LBB21
 2512 097d 01        		.byte	0x1
 2513 097e CA        		.byte	0xca
 2514 097f 05        		.byte	0x5
 2515 0980 0000 09A0 		.long	0x9a0
 2516 0984 1B        		.uleb128 0x1b
 2517 0985 0000 0D55 		.long	0xd55
 2518 0989 0000 0000 		.long	.LBB22
 2519 098d 0000 0012 		.long	.LBE22-.LBB22
 2520 0991 1C        		.uleb128 0x1c
 2521 0992 0000 0D56 		.long	0xd56
 2522 0996 0000 0000 		.long	.LLST9
 2523 099a 0000 0000 		.long	.LVUS9
 2524 099e 00        		.byte	0
 2525 099f 00        		.byte	0
 2526 09a0 01        		.uleb128 0x1
 2527 09a1 0000 0000 		.long	.LVL86
 2528 09a5 0000 09F2 		.long	0x9f2
 2529 09a9 01        		.uleb128 0x1
 2530 09aa 0000 0000 		.long	.LVL87
 2531 09ae 0000 08D9 		.long	0x8d9
 2532 09b2 01        		.uleb128 0x1
 2533 09b3 0000 0000 		.long	.LVL92
 2534 09b7 0000 0CD8 		.long	0xcd8
 2535 09bb 01        		.uleb128 0x1
 2536 09bc 0000 0000 		.long	.LVL93
 2537 09c0 0000 0C7B 		.long	0xc7b
 2538 09c4 01        		.uleb128 0x1
 2539 09c5 0000 0000 		.long	.LVL94
 2540 09c9 0000 08C7 		.long	0x8c7
 2541 09cd 01        		.uleb128 0x1
 2542 09ce 0000 0000 		.long	.LVL95
 2543 09d2 0000 08C7 		.long	0x8c7
 2544 09d6 01        		.uleb128 0x1
 2545 09d7 0000 0000 		.long	.LVL96
 2546 09db 0000 08C7 		.long	0x8c7
 2547 09df 01        		.uleb128 0x1
 2548 09e0 0000 0000 		.long	.LVL97
 2549 09e4 0000 08C7 		.long	0x8c7
 2550 09e8 01        		.uleb128 0x1


 2551 09e9 0000 0000 		.long	.LVL98
 2552 09ed 0000 08BB 		.long	0x8bb
 2553 09f1 00        		.byte	0
 2554 09f2 0D        		.uleb128 0xd
 2555 09f3 0000 0000 		.long	.LASF128
 2556 09f7 BD        		.byte	0xbd
 2557 09f8 0000 0000 		.long	.LFB11
 2558 09fc 0000 0058 		.long	.LFE11-.LFB11
 2559 0a00 01        		.uleb128 0x1
 2560 0a01 9C        		.byte	0x9c
 2561 0a02 0000 0A2B 		.long	0xa2b
 2562 0a06 01        		.uleb128 0x1
 2563 0a07 0000 0000 		.long	.LVL82
 2564 0a0b 0000 08E5 		.long	0x8e5
 2565 0a0f 01        		.uleb128 0x1
 2566 0a10 0000 0000 		.long	.LVL83
 2567 0a14 0000 08E5 		.long	0x8e5
 2568 0a18 01        		.uleb128 0x1
 2569 0a19 0000 0000 		.long	.LVL84
 2570 0a1d 0000 08E5 		.long	0x8e5
 2571 0a21 01        		.uleb128 0x1
 2572 0a22 0000 0000 		.long	.LVL85
 2573 0a26 0000 08E5 		.long	0x8e5
 2574 0a2a 00        		.byte	0
 2575 0a2b 0D        		.uleb128 0xd
 2576 0a2c 0000 0000 		.long	.LASF129
 2577 0a30 7A        		.byte	0x7a
 2578 0a31 0000 0000 		.long	.LFB10
 2579 0a35 0000 03CC 		.long	.LFE10-.LFB10
 2580 0a39 01        		.uleb128 0x1
 2581 0a3a 9C        		.byte	0x9c
 2582 0a3b 0000 0B81 		.long	0xb81
 2583 0a3f 1D        		.uleb128 0x1d
 2584 0a40 0000 0000 		.long	.LLRL2
 2585 0a44 1E        		.uleb128 0x1e
 2586 0a45 0000 0000 		.long	.LASF130
 2587 0a49 82        		.byte	0x82
 2588 0a4a 0000 008A 		.long	0x8a
 2589 0a4e 0000 0000 		.long	.LLST3
 2590 0a52 0000 0000 		.long	.LVUS3
 2591 0a56 01        		.uleb128 0x1
 2592 0a57 0000 0000 		.long	.LVL20
 2593 0a5b 0000 0929 		.long	0x929
 2594 0a5f 01        		.uleb128 0x1
 2595 0a60 0000 0000 		.long	.LVL21
 2596 0a64 0000 0929 		.long	0x929
 2597 0a68 01        		.uleb128 0x1
 2598 0a69 0000 0000 		.long	.LVL22
 2599 0a6d 0000 0929 		.long	0x929
 2600 0a71 01        		.uleb128 0x1
 2601 0a72 0000 0000 		.long	.LVL23
 2602 0a76 0000 0929 		.long	0x929
 2603 0a7a 01        		.uleb128 0x1
 2604 0a7b 0000 0000 		.long	.LVL26
 2605 0a7f 0000 0DBF 		.long	0xdbf
 2606 0a83 01        		.uleb128 0x1
 2607 0a84 0000 0000 		.long	.LVL27


 2608 0a88 0000 0DC8 		.long	0xdc8
 2609 0a8c 01        		.uleb128 0x1
 2610 0a8d 0000 0000 		.long	.LVL28
 2611 0a91 0000 0DC8 		.long	0xdc8
 2612 0a95 01        		.uleb128 0x1
 2613 0a96 0000 0000 		.long	.LVL29
 2614 0a9a 0000 0DC8 		.long	0xdc8
 2615 0a9e 01        		.uleb128 0x1
 2616 0a9f 0000 0000 		.long	.LVL30
 2617 0aa3 0000 0DBF 		.long	0xdbf
 2618 0aa7 01        		.uleb128 0x1
 2619 0aa8 0000 0000 		.long	.LVL31
 2620 0aac 0000 0DC8 		.long	0xdc8
 2621 0ab0 01        		.uleb128 0x1
 2622 0ab1 0000 0000 		.long	.LVL32
 2623 0ab5 0000 0DC8 		.long	0xdc8
 2624 0ab9 01        		.uleb128 0x1
 2625 0aba 0000 0000 		.long	.LVL33
 2626 0abe 0000 0DC8 		.long	0xdc8
 2627 0ac2 01        		.uleb128 0x1
 2628 0ac3 0000 0000 		.long	.LVL34
 2629 0ac7 0000 0901 		.long	0x901
 2630 0acb 01        		.uleb128 0x1
 2631 0acc 0000 0000 		.long	.LVL35
 2632 0ad0 0000 0901 		.long	0x901
 2633 0ad4 01        		.uleb128 0x1
 2634 0ad5 0000 0000 		.long	.LVL36
 2635 0ad9 0000 0901 		.long	0x901
 2636 0add 01        		.uleb128 0x1
 2637 0ade 0000 0000 		.long	.LVL37
 2638 0ae2 0000 0901 		.long	0x901
 2639 0ae6 01        		.uleb128 0x1
 2640 0ae7 0000 0000 		.long	.LVL38
 2641 0aeb 0000 0929 		.long	0x929
 2642 0aef 01        		.uleb128 0x1
 2643 0af0 0000 0000 		.long	.LVL39
 2644 0af4 0000 0929 		.long	0x929
 2645 0af8 01        		.uleb128 0x1
 2646 0af9 0000 0000 		.long	.LVL40
 2647 0afd 0000 0929 		.long	0x929
 2648 0b01 01        		.uleb128 0x1
 2649 0b02 0000 0000 		.long	.LVL41
 2650 0b06 0000 0929 		.long	0x929
 2651 0b0a 01        		.uleb128 0x1
 2652 0b0b 0000 0000 		.long	.LVL44
 2653 0b0f 0000 0DBF 		.long	0xdbf
 2654 0b13 01        		.uleb128 0x1
 2655 0b14 0000 0000 		.long	.LVL45
 2656 0b18 0000 0DC8 		.long	0xdc8
 2657 0b1c 01        		.uleb128 0x1
 2658 0b1d 0000 0000 		.long	.LVL46
 2659 0b21 0000 0DC8 		.long	0xdc8
 2660 0b25 01        		.uleb128 0x1
 2661 0b26 0000 0000 		.long	.LVL47
 2662 0b2a 0000 0DC8 		.long	0xdc8
 2663 0b2e 01        		.uleb128 0x1
 2664 0b2f 0000 0000 		.long	.LVL48


 2665 0b33 0000 0DBF 		.long	0xdbf
 2666 0b37 01        		.uleb128 0x1
 2667 0b38 0000 0000 		.long	.LVL49
 2668 0b3c 0000 0DC8 		.long	0xdc8
 2669 0b40 01        		.uleb128 0x1
 2670 0b41 0000 0000 		.long	.LVL50
 2671 0b45 0000 0DC8 		.long	0xdc8
 2672 0b49 01        		.uleb128 0x1
 2673 0b4a 0000 0000 		.long	.LVL51
 2674 0b4e 0000 0DC8 		.long	0xdc8
 2675 0b52 01        		.uleb128 0x1
 2676 0b53 0000 0000 		.long	.LVL52
 2677 0b57 0000 0DC8 		.long	0xdc8
 2678 0b5b 01        		.uleb128 0x1
 2679 0b5c 0000 0000 		.long	.LVL53
 2680 0b60 0000 0DC8 		.long	0xdc8
 2681 0b64 01        		.uleb128 0x1
 2682 0b65 0000 0000 		.long	.LVL58
 2683 0b69 0000 0DC8 		.long	0xdc8
 2684 0b6d 01        		.uleb128 0x1
 2685 0b6e 0000 0000 		.long	.LVL59
 2686 0b72 0000 0DC8 		.long	0xdc8
 2687 0b76 01        		.uleb128 0x1
 2688 0b77 0000 0000 		.long	.LVL60
 2689 0b7b 0000 0DC8 		.long	0xdc8
 2690 0b7f 00        		.byte	0
 2691 0b80 00        		.byte	0
 2692 0b81 0D        		.uleb128 0xd
 2693 0b82 0000 0000 		.long	.LASF131
 2694 0b86 62        		.byte	0x62
 2695 0b87 0000 0000 		.long	.LFB9
 2696 0b8b 0000 00A0 		.long	.LFE9-.LFB9
 2697 0b8f 01        		.uleb128 0x1
 2698 0b90 9C        		.byte	0x9c
 2699 0b91 0000 0BFE 		.long	0xbfe
 2700 0b95 1F        		.uleb128 0x1f
 2701 0b96 0000 0000 		.long	.LLRL1
 2702 0b9a 0000 0BF4 		.long	0xbf4
 2703 0b9e 20        		.uleb128 0x20
 2704 0b9f 0000 0000 		.long	.LASF133
 2705 0ba3 68        		.byte	0x68
 2706 0ba4 0000 008A 		.long	0x8a
 2707 0ba8 02        		.uleb128 0x2
 2708 0ba9 91        		.byte	0x91
 2709 0baa 78        		.sleb128 -8
 2710 0bab 01        		.uleb128 0x1
 2711 0bac 0000 0000 		.long	.LVL12
 2712 0bb0 0000 0DC8 		.long	0xdc8
 2713 0bb4 01        		.uleb128 0x1
 2714 0bb5 0000 0000 		.long	.LVL13
 2715 0bb9 0000 0DD1 		.long	0xdd1
 2716 0bbd 01        		.uleb128 0x1
 2717 0bbe 0000 0000 		.long	.LVL14
 2718 0bc2 0000 0901 		.long	0x901
 2719 0bc6 01        		.uleb128 0x1
 2720 0bc7 0000 0000 		.long	.LVL15
 2721 0bcb 0000 0901 		.long	0x901


 2722 0bcf 01        		.uleb128 0x1
 2723 0bd0 0000 0000 		.long	.LVL16
 2724 0bd4 0000 0929 		.long	0x929
 2725 0bd8 01        		.uleb128 0x1
 2726 0bd9 0000 0000 		.long	.LVL17
 2727 0bdd 0000 0901 		.long	0x901
 2728 0be1 01        		.uleb128 0x1
 2729 0be2 0000 0000 		.long	.LVL18
 2730 0be6 0000 0901 		.long	0x901
 2731 0bea 01        		.uleb128 0x1
 2732 0beb 0000 0000 		.long	.LVL19
 2733 0bef 0000 0929 		.long	0x929
 2734 0bf3 00        		.byte	0
 2735 0bf4 01        		.uleb128 0x1
 2736 0bf5 0000 0000 		.long	.LVL11
 2737 0bf9 0000 0929 		.long	0x929
 2738 0bfd 00        		.byte	0
 2739 0bfe 0D        		.uleb128 0xd
 2740 0bff 0000 0000 		.long	.LASF132
 2741 0c03 4A        		.byte	0x4a
 2742 0c04 0000 0000 		.long	.LFB8
 2743 0c08 0000 009A 		.long	.LFE8-.LFB8
 2744 0c0c 01        		.uleb128 0x1
 2745 0c0d 9C        		.byte	0x9c
 2746 0c0e 0000 0C7B 		.long	0xc7b
 2747 0c12 1F        		.uleb128 0x1f
 2748 0c13 0000 0000 		.long	.LLRL0
 2749 0c17 0000 0C71 		.long	0xc71
 2750 0c1b 20        		.uleb128 0x20
 2751 0c1c 0000 0000 		.long	.LASF134
 2752 0c20 50        		.byte	0x50
 2753 0c21 0000 008A 		.long	0x8a
 2754 0c25 02        		.uleb128 0x2
 2755 0c26 91        		.byte	0x91
 2756 0c27 78        		.sleb128 -8
 2757 0c28 01        		.uleb128 0x1
 2758 0c29 0000 0000 		.long	.LVL3
 2759 0c2d 0000 0DC8 		.long	0xdc8
 2760 0c31 01        		.uleb128 0x1
 2761 0c32 0000 0000 		.long	.LVL4
 2762 0c36 0000 0DD1 		.long	0xdd1
 2763 0c3a 01        		.uleb128 0x1
 2764 0c3b 0000 0000 		.long	.LVL5
 2765 0c3f 0000 0901 		.long	0x901
 2766 0c43 01        		.uleb128 0x1
 2767 0c44 0000 0000 		.long	.LVL6
 2768 0c48 0000 0901 		.long	0x901
 2769 0c4c 01        		.uleb128 0x1
 2770 0c4d 0000 0000 		.long	.LVL7
 2771 0c51 0000 0929 		.long	0x929
 2772 0c55 01        		.uleb128 0x1
 2773 0c56 0000 0000 		.long	.LVL8
 2774 0c5a 0000 0901 		.long	0x901
 2775 0c5e 01        		.uleb128 0x1
 2776 0c5f 0000 0000 		.long	.LVL9
 2777 0c63 0000 0901 		.long	0x901
 2778 0c67 01        		.uleb128 0x1


 2779 0c68 0000 0000 		.long	.LVL10
 2780 0c6c 0000 0929 		.long	0x929
 2781 0c70 00        		.byte	0
 2782 0c71 01        		.uleb128 0x1
 2783 0c72 0000 0000 		.long	.LVL2
 2784 0c76 0000 0929 		.long	0x929
 2785 0c7a 00        		.byte	0
 2786 0c7b 0D        		.uleb128 0xd
 2787 0c7c 0000 0000 		.long	.LASF135
 2788 0c80 3C        		.byte	0x3c
 2789 0c81 0000 0000 		.long	.LFB7
 2790 0c85 0000 00E8 		.long	.LFE7-.LFB7
 2791 0c89 01        		.uleb128 0x1
 2792 0c8a 9C        		.byte	0x9c
 2793 0c8b 0000 0CD8 		.long	0xcd8
 2794 0c8f 01        		.uleb128 0x1
 2795 0c90 0000 0000 		.long	.LVL74
 2796 0c94 0000 0DBF 		.long	0xdbf
 2797 0c98 01        		.uleb128 0x1
 2798 0c99 0000 0000 		.long	.LVL75
 2799 0c9d 0000 0DC8 		.long	0xdc8
 2800 0ca1 01        		.uleb128 0x1
 2801 0ca2 0000 0000 		.long	.LVL76
 2802 0ca6 0000 0DC8 		.long	0xdc8
 2803 0caa 01        		.uleb128 0x1
 2804 0cab 0000 0000 		.long	.LVL77
 2805 0caf 0000 0DC8 		.long	0xdc8
 2806 0cb3 01        		.uleb128 0x1
 2807 0cb4 0000 0000 		.long	.LVL78
 2808 0cb8 0000 0DBF 		.long	0xdbf
 2809 0cbc 01        		.uleb128 0x1
 2810 0cbd 0000 0000 		.long	.LVL79
 2811 0cc1 0000 0DC8 		.long	0xdc8
 2812 0cc5 01        		.uleb128 0x1
 2813 0cc6 0000 0000 		.long	.LVL80
 2814 0cca 0000 0DC8 		.long	0xdc8
 2815 0cce 01        		.uleb128 0x1
 2816 0ccf 0000 0000 		.long	.LVL81
 2817 0cd3 0000 0DC8 		.long	0xdc8
 2818 0cd7 00        		.byte	0
 2819 0cd8 33        		.uleb128 0x33
 2820 0cd9 0000 0000 		.long	.LASF136
 2821 0cdd 01        		.byte	0x1
 2822 0cde 30        		.byte	0x30
 2823 0cdf 06        		.byte	0x6
 2824 0ce0 0000 0000 		.long	.LFB6
 2825 0ce4 0000 0044 		.long	.LFE6-.LFB6
 2826 0ce8 01        		.uleb128 0x1
 2827 0ce9 9C        		.byte	0x9c
 2828 0cea 0000 0D48 		.long	0xd48
 2829 0cee 1D        		.uleb128 0x1d
 2830 0cef 0000 0000 		.long	.LLRL5
 2831 0cf3 21        		.uleb128 0x21
 2832 0cf4 6900      		.string	"i"
 2833 0cf6 32        		.byte	0x32
 2834 0cf7 0E        		.byte	0xe
 2835 0cf8 0000 008A 		.long	0x8a


 2836 0cfc 0000 0000 		.long	.LLST6
 2837 0d00 0000 0000 		.long	.LVUS6
 2838 0d04 34        		.uleb128 0x34
 2839 0d05 0000 0000 		.long	.LBB17
 2840 0d09 0000 001A 		.long	.LBE17-.LBB17
 2841 0d0d 21        		.uleb128 0x21
 2842 0d0e 7200      		.string	"r"
 2843 0d10 34        		.byte	0x34
 2844 0d11 16        		.byte	0x16
 2845 0d12 0000 0072 		.long	0x72
 2846 0d16 0000 0000 		.long	.LLST7
 2847 0d1a 0000 0000 		.long	.LVUS7
 2848 0d1e 1E        		.uleb128 0x1e
 2849 0d1f 0000 0000 		.long	.LASF137
 2850 0d23 35        		.byte	0x35
 2851 0d24 0000 008A 		.long	0x8a
 2852 0d28 0000 0000 		.long	.LLST8
 2853 0d2c 0000 0000 		.long	.LVUS8
 2854 0d30 35        		.uleb128 0x35
 2855 0d31 0000 0D62 		.long	0xd62
 2856 0d35 0000 0000 		.long	.LBI18
 2857 0d39 01        		.byte	.LVU191
 2858 0d3a 0000 0000 		.long	.LBB18
 2859 0d3e 0000 0006 		.long	.LBE18-.LBB18
 2860 0d42 01        		.byte	0x1
 2861 0d43 34        		.byte	0x34
 2862 0d44 1A        		.byte	0x1a
 2863 0d45 00        		.byte	0
 2864 0d46 00        		.byte	0
 2865 0d47 00        		.byte	0
 2866 0d48 36        		.uleb128 0x36
 2867 0d49 0000 0000 		.long	.LASF138
 2868 0d4d 01        		.byte	0x1
 2869 0d4e 28        		.byte	0x28
 2870 0d4f 06        		.byte	0x6
 2871 0d50 01        		.byte	0x1
 2872 0d51 0000 0D62 		.long	0xd62
 2873 0d55 37        		.uleb128 0x37
 2874 0d56 38        		.uleb128 0x38
 2875 0d57 6900      		.string	"i"
 2876 0d59 01        		.byte	0x1
 2877 0d5a 2A        		.byte	0x2a
 2878 0d5b 0E        		.byte	0xe
 2879 0d5c 0000 008A 		.long	0x8a
 2880 0d60 00        		.byte	0
 2881 0d61 00        		.byte	0
 2882 0d62 39        		.uleb128 0x39
 2883 0d63 0000 0000 		.long	.LASF148
 2884 0d67 01        		.byte	0x1
 2885 0d68 22        		.byte	0x22
 2886 0d69 0E        		.byte	0xe
 2887 0d6a 0000 0072 		.long	0x72
 2888 0d6e 01        		.byte	0x1
 2889 0d6f 3A        		.uleb128 0x3a
 2890 0d70 0000 0000 		.long	.LASF149
 2891 0d74 01        		.byte	0x1
 2892 0d75 1A        		.byte	0x1a


 2893 0d76 06        		.byte	0x6
 2894 0d77 0000 0000 		.long	.LFB3
 2895 0d7b 0000 004E 		.long	.LFE3-.LFB3
 2896 0d7f 01        		.uleb128 0x1
 2897 0d80 9C        		.byte	0x9c
 2898 0d81 3B        		.uleb128 0x3b
 2899 0d82 0000 0D62 		.long	0xd62
 2900 0d86 0000 0000 		.long	.LFB4
 2901 0d8a 0000 0008 		.long	.LFE4-.LFB4
 2902 0d8e 01        		.uleb128 0x1
 2903 0d8f 9C        		.byte	0x9c
 2904 0d90 3C        		.uleb128 0x3c
 2905 0d91 0000 0D48 		.long	0xd48
 2906 0d95 0000 0000 		.long	.LFB5
 2907 0d99 0000 0014 		.long	.LFE5-.LFB5
 2908 0d9d 01        		.uleb128 0x1
 2909 0d9e 9C        		.byte	0x9c
 2910 0d9f 0000 0DBF 		.long	0xdbf
 2911 0da3 1B        		.uleb128 0x1b
 2912 0da4 0000 0D55 		.long	0xd55
 2913 0da8 0000 0000 		.long	.LBB15
 2914 0dac 0000 0012 		.long	.LBE15-.LBB15
 2915 0db0 1C        		.uleb128 0x1c
 2916 0db1 0000 0D56 		.long	0xd56
 2917 0db5 0000 0000 		.long	.LLST4
 2918 0db9 0000 0000 		.long	.LVUS4
 2919 0dbd 00        		.byte	0
 2920 0dbe 00        		.byte	0
 2921 0dbf 12        		.uleb128 0x12
 2922 0dc0 0000 0000 		.long	.LASF139
 2923 0dc4 0000 0000 		.long	.LASF140
 2924 0dc8 12        		.uleb128 0x12
 2925 0dc9 0000 0000 		.long	.LASF127
 2926 0dcd 0000 0000 		.long	.LASF141
 2927 0dd1 12        		.uleb128 0x12
 2928 0dd2 0000 0000 		.long	.LASF126
 2929 0dd6 0000 0000 		.long	.LASF142
 2930 0dda 00        		.byte	0
 2931               		.section	.debug_abbrev,"",@progbits
 2932               	.Ldebug_abbrev0:
 2933 0000 01        		.uleb128 0x1
 2934 0001 48        		.uleb128 0x48
 2935 0002 00        		.byte	0
 2936 0003 7D        		.uleb128 0x7d
 2937 0004 01        		.uleb128 0x1
 2938 0005 7F        		.uleb128 0x7f
 2939 0006 13        		.uleb128 0x13
 2940 0007 00        		.byte	0
 2941 0008 00        		.byte	0
 2942 0009 02        		.uleb128 0x2
 2943 000a 0D        		.uleb128 0xd
 2944 000b 00        		.byte	0
 2945 000c 03        		.uleb128 0x3
 2946 000d 0E        		.uleb128 0xe
 2947 000e 3A        		.uleb128 0x3a
 2948 000f 0B        		.uleb128 0xb
 2949 0010 3B        		.uleb128 0x3b


 2950 0011 0B        		.uleb128 0xb
 2951 0012 39        		.uleb128 0x39
 2952 0013 0B        		.uleb128 0xb
 2953 0014 49        		.uleb128 0x49
 2954 0015 13        		.uleb128 0x13
 2955 0016 38        		.uleb128 0x38
 2956 0017 0B        		.uleb128 0xb
 2957 0018 00        		.byte	0
 2958 0019 00        		.byte	0
 2959 001a 03        		.uleb128 0x3
 2960 001b 0D        		.uleb128 0xd
 2961 001c 00        		.byte	0
 2962 001d 03        		.uleb128 0x3
 2963 001e 0E        		.uleb128 0xe
 2964 001f 3A        		.uleb128 0x3a
 2965 0020 21        		.uleb128 0x21
 2966 0021 04        		.sleb128 4
 2967 0022 3B        		.uleb128 0x3b
 2968 0023 05        		.uleb128 0x5
 2969 0024 39        		.uleb128 0x39
 2970 0025 0B        		.uleb128 0xb
 2971 0026 49        		.uleb128 0x49
 2972 0027 13        		.uleb128 0x13
 2973 0028 38        		.uleb128 0x38
 2974 0029 0B        		.uleb128 0xb
 2975 002a 00        		.byte	0
 2976 002b 00        		.byte	0
 2977 002c 04        		.uleb128 0x4
 2978 002d 05        		.uleb128 0x5
 2979 002e 00        		.byte	0
 2980 002f 49        		.uleb128 0x49
 2981 0030 13        		.uleb128 0x13
 2982 0031 00        		.byte	0
 2983 0032 00        		.byte	0
 2984 0033 05        		.uleb128 0x5
 2985 0034 0F        		.uleb128 0xf
 2986 0035 00        		.byte	0
 2987 0036 0B        		.uleb128 0xb
 2988 0037 21        		.uleb128 0x21
 2989 0038 04        		.sleb128 4
 2990 0039 49        		.uleb128 0x49
 2991 003a 13        		.uleb128 0x13
 2992 003b 00        		.byte	0
 2993 003c 00        		.byte	0
 2994 003d 06        		.uleb128 0x6
 2995 003e 24        		.uleb128 0x24
 2996 003f 00        		.byte	0
 2997 0040 0B        		.uleb128 0xb
 2998 0041 0B        		.uleb128 0xb
 2999 0042 3E        		.uleb128 0x3e
 3000 0043 0B        		.uleb128 0xb
 3001 0044 03        		.uleb128 0x3
 3002 0045 0E        		.uleb128 0xe
 3003 0046 00        		.byte	0
 3004 0047 00        		.byte	0
 3005 0048 07        		.uleb128 0x7
 3006 0049 16        		.uleb128 0x16


 3007 004a 00        		.byte	0
 3008 004b 03        		.uleb128 0x3
 3009 004c 0E        		.uleb128 0xe
 3010 004d 3A        		.uleb128 0x3a
 3011 004e 0B        		.uleb128 0xb
 3012 004f 3B        		.uleb128 0x3b
 3013 0050 0B        		.uleb128 0xb
 3014 0051 39        		.uleb128 0x39
 3015 0052 0B        		.uleb128 0xb
 3016 0053 49        		.uleb128 0x49
 3017 0054 13        		.uleb128 0x13
 3018 0055 00        		.byte	0
 3019 0056 00        		.byte	0
 3020 0057 08        		.uleb128 0x8
 3021 0058 01        		.uleb128 0x1
 3022 0059 01        		.byte	0x1
 3023 005a 49        		.uleb128 0x49
 3024 005b 13        		.uleb128 0x13
 3025 005c 01        		.uleb128 0x1
 3026 005d 13        		.uleb128 0x13
 3027 005e 00        		.byte	0
 3028 005f 00        		.byte	0
 3029 0060 09        		.uleb128 0x9
 3030 0061 21        		.uleb128 0x21
 3031 0062 00        		.byte	0
 3032 0063 49        		.uleb128 0x49
 3033 0064 13        		.uleb128 0x13
 3034 0065 2F        		.uleb128 0x2f
 3035 0066 0B        		.uleb128 0xb
 3036 0067 00        		.byte	0
 3037 0068 00        		.byte	0
 3038 0069 0A        		.uleb128 0xa
 3039 006a 0D        		.uleb128 0xd
 3040 006b 00        		.byte	0
 3041 006c 03        		.uleb128 0x3
 3042 006d 08        		.uleb128 0x8
 3043 006e 3A        		.uleb128 0x3a
 3044 006f 0B        		.uleb128 0xb
 3045 0070 3B        		.uleb128 0x3b
 3046 0071 0B        		.uleb128 0xb
 3047 0072 39        		.uleb128 0x39
 3048 0073 0B        		.uleb128 0xb
 3049 0074 49        		.uleb128 0x49
 3050 0075 13        		.uleb128 0x13
 3051 0076 38        		.uleb128 0x38
 3052 0077 0B        		.uleb128 0xb
 3053 0078 00        		.byte	0
 3054 0079 00        		.byte	0
 3055 007a 0B        		.uleb128 0xb
 3056 007b 34        		.uleb128 0x34
 3057 007c 00        		.byte	0
 3058 007d 03        		.uleb128 0x3
 3059 007e 0E        		.uleb128 0xe
 3060 007f 3A        		.uleb128 0x3a
 3061 0080 21        		.uleb128 0x21
 3062 0081 01        		.sleb128 1
 3063 0082 3B        		.uleb128 0x3b


 3064 0083 0B        		.uleb128 0xb
 3065 0084 39        		.uleb128 0x39
 3066 0085 0B        		.uleb128 0xb
 3067 0086 49        		.uleb128 0x49
 3068 0087 13        		.uleb128 0x13
 3069 0088 3F        		.uleb128 0x3f
 3070 0089 19        		.uleb128 0x19
 3071 008a 02        		.uleb128 0x2
 3072 008b 18        		.uleb128 0x18
 3073 008c 00        		.byte	0
 3074 008d 00        		.byte	0
 3075 008e 0C        		.uleb128 0xc
 3076 008f 34        		.uleb128 0x34
 3077 0090 00        		.byte	0
 3078 0091 03        		.uleb128 0x3
 3079 0092 0E        		.uleb128 0xe
 3080 0093 3A        		.uleb128 0x3a
 3081 0094 0B        		.uleb128 0xb
 3082 0095 3B        		.uleb128 0x3b
 3083 0096 0B        		.uleb128 0xb
 3084 0097 39        		.uleb128 0x39
 3085 0098 0B        		.uleb128 0xb
 3086 0099 49        		.uleb128 0x49
 3087 009a 13        		.uleb128 0x13
 3088 009b 3F        		.uleb128 0x3f
 3089 009c 19        		.uleb128 0x19
 3090 009d 3C        		.uleb128 0x3c
 3091 009e 19        		.uleb128 0x19
 3092 009f 00        		.byte	0
 3093 00a0 00        		.byte	0
 3094 00a1 0D        		.uleb128 0xd
 3095 00a2 2E        		.uleb128 0x2e
 3096 00a3 01        		.byte	0x1
 3097 00a4 3F        		.uleb128 0x3f
 3098 00a5 19        		.uleb128 0x19
 3099 00a6 03        		.uleb128 0x3
 3100 00a7 0E        		.uleb128 0xe
 3101 00a8 3A        		.uleb128 0x3a
 3102 00a9 21        		.uleb128 0x21
 3103 00aa 01        		.sleb128 1
 3104 00ab 3B        		.uleb128 0x3b
 3105 00ac 0B        		.uleb128 0xb
 3106 00ad 39        		.uleb128 0x39
 3107 00ae 21        		.uleb128 0x21
 3108 00af 06        		.sleb128 6
 3109 00b0 11        		.uleb128 0x11
 3110 00b1 01        		.uleb128 0x1
 3111 00b2 12        		.uleb128 0x12
 3112 00b3 06        		.uleb128 0x6
 3113 00b4 40        		.uleb128 0x40
 3114 00b5 18        		.uleb128 0x18
 3115 00b6 7A        		.uleb128 0x7a
 3116 00b7 19        		.uleb128 0x19
 3117 00b8 01        		.uleb128 0x1
 3118 00b9 13        		.uleb128 0x13
 3119 00ba 00        		.byte	0
 3120 00bb 00        		.byte	0


 3121 00bc 0E        		.uleb128 0xe
 3122 00bd 13        		.uleb128 0x13
 3123 00be 01        		.byte	0x1
 3124 00bf 03        		.uleb128 0x3
 3125 00c0 0E        		.uleb128 0xe
 3126 00c1 0B        		.uleb128 0xb
 3127 00c2 0B        		.uleb128 0xb
 3128 00c3 3A        		.uleb128 0x3a
 3129 00c4 21        		.uleb128 0x21
 3130 00c5 04        		.sleb128 4
 3131 00c6 3B        		.uleb128 0x3b
 3132 00c7 0B        		.uleb128 0xb
 3133 00c8 39        		.uleb128 0x39
 3134 00c9 21        		.uleb128 0x21
 3135 00ca 08        		.sleb128 8
 3136 00cb 01        		.uleb128 0x1
 3137 00cc 13        		.uleb128 0x13
 3138 00cd 00        		.byte	0
 3139 00ce 00        		.byte	0
 3140 00cf 0F        		.uleb128 0xf
 3141 00d0 15        		.uleb128 0x15
 3142 00d1 01        		.byte	0x1
 3143 00d2 27        		.uleb128 0x27
 3144 00d3 19        		.uleb128 0x19
 3145 00d4 49        		.uleb128 0x49
 3146 00d5 13        		.uleb128 0x13
 3147 00d6 01        		.uleb128 0x1
 3148 00d7 13        		.uleb128 0x13
 3149 00d8 00        		.byte	0
 3150 00d9 00        		.byte	0
 3151 00da 10        		.uleb128 0x10
 3152 00db 18        		.uleb128 0x18
 3153 00dc 00        		.byte	0
 3154 00dd 00        		.byte	0
 3155 00de 00        		.byte	0
 3156 00df 11        		.uleb128 0x11
 3157 00e0 13        		.uleb128 0x13
 3158 00e1 01        		.byte	0x1
 3159 00e2 0B        		.uleb128 0xb
 3160 00e3 0B        		.uleb128 0xb
 3161 00e4 3A        		.uleb128 0x3a
 3162 00e5 0B        		.uleb128 0xb
 3163 00e6 3B        		.uleb128 0x3b
 3164 00e7 0B        		.uleb128 0xb
 3165 00e8 39        		.uleb128 0x39
 3166 00e9 21        		.uleb128 0x21
 3167 00ea 09        		.sleb128 9
 3168 00eb 01        		.uleb128 0x1
 3169 00ec 13        		.uleb128 0x13
 3170 00ed 00        		.byte	0
 3171 00ee 00        		.byte	0
 3172 00ef 12        		.uleb128 0x12
 3173 00f0 2E        		.uleb128 0x2e
 3174 00f1 00        		.byte	0
 3175 00f2 3F        		.uleb128 0x3f
 3176 00f3 19        		.uleb128 0x19
 3177 00f4 3C        		.uleb128 0x3c


 3178 00f5 19        		.uleb128 0x19
 3179 00f6 6E        		.uleb128 0x6e
 3180 00f7 0E        		.uleb128 0xe
 3181 00f8 03        		.uleb128 0x3
 3182 00f9 0E        		.uleb128 0xe
 3183 00fa 3A        		.uleb128 0x3a
 3184 00fb 21        		.uleb128 0x21
 3185 00fc 09        		.sleb128 9
 3186 00fd 3B        		.uleb128 0x3b
 3187 00fe 21        		.uleb128 0x21
 3188 00ff 00        		.sleb128 0
 3189 0100 00        		.byte	0
 3190 0101 00        		.byte	0
 3191 0102 13        		.uleb128 0x13
 3192 0103 16        		.uleb128 0x16
 3193 0104 00        		.byte	0
 3194 0105 03        		.uleb128 0x3
 3195 0106 0E        		.uleb128 0xe
 3196 0107 3A        		.uleb128 0x3a
 3197 0108 0B        		.uleb128 0xb
 3198 0109 3B        		.uleb128 0x3b
 3199 010a 05        		.uleb128 0x5
 3200 010b 39        		.uleb128 0x39
 3201 010c 0B        		.uleb128 0xb
 3202 010d 49        		.uleb128 0x49
 3203 010e 13        		.uleb128 0x13
 3204 010f 00        		.byte	0
 3205 0110 00        		.byte	0
 3206 0111 14        		.uleb128 0x14
 3207 0112 35        		.uleb128 0x35
 3208 0113 00        		.byte	0
 3209 0114 49        		.uleb128 0x49
 3210 0115 13        		.uleb128 0x13
 3211 0116 00        		.byte	0
 3212 0117 00        		.byte	0
 3213 0118 15        		.uleb128 0x15
 3214 0119 0D        		.uleb128 0xd
 3215 011a 00        		.byte	0
 3216 011b 03        		.uleb128 0x3
 3217 011c 0E        		.uleb128 0xe
 3218 011d 3A        		.uleb128 0x3a
 3219 011e 21        		.uleb128 0x21
 3220 011f 03        		.sleb128 3
 3221 0120 3B        		.uleb128 0x3b
 3222 0121 0B        		.uleb128 0xb
 3223 0122 39        		.uleb128 0x39
 3224 0123 0B        		.uleb128 0xb
 3225 0124 49        		.uleb128 0x49
 3226 0125 13        		.uleb128 0x13
 3227 0126 00        		.byte	0
 3228 0127 00        		.byte	0
 3229 0128 16        		.uleb128 0x16
 3230 0129 37        		.uleb128 0x37
 3231 012a 00        		.byte	0
 3232 012b 49        		.uleb128 0x49
 3233 012c 13        		.uleb128 0x13
 3234 012d 00        		.byte	0


 3235 012e 00        		.byte	0
 3236 012f 17        		.uleb128 0x17
 3237 0130 15        		.uleb128 0x15
 3238 0131 01        		.byte	0x1
 3239 0132 27        		.uleb128 0x27
 3240 0133 19        		.uleb128 0x19
 3241 0134 01        		.uleb128 0x1
 3242 0135 13        		.uleb128 0x13
 3243 0136 00        		.byte	0
 3244 0137 00        		.byte	0
 3245 0138 18        		.uleb128 0x18
 3246 0139 2E        		.uleb128 0x2e
 3247 013a 01        		.byte	0x1
 3248 013b 3F        		.uleb128 0x3f
 3249 013c 19        		.uleb128 0x19
 3250 013d 03        		.uleb128 0x3
 3251 013e 0E        		.uleb128 0xe
 3252 013f 3A        		.uleb128 0x3a
 3253 0140 21        		.uleb128 0x21
 3254 0141 07        		.sleb128 7
 3255 0142 3B        		.uleb128 0x3b
 3256 0143 0B        		.uleb128 0xb
 3257 0144 39        		.uleb128 0x39
 3258 0145 21        		.uleb128 0x21
 3259 0146 0D        		.sleb128 13
 3260 0147 3C        		.uleb128 0x3c
 3261 0148 19        		.uleb128 0x19
 3262 0149 01        		.uleb128 0x1
 3263 014a 13        		.uleb128 0x13
 3264 014b 00        		.byte	0
 3265 014c 00        		.byte	0
 3266 014d 19        		.uleb128 0x19
 3267 014e 2E        		.uleb128 0x2e
 3268 014f 01        		.byte	0x1
 3269 0150 3F        		.uleb128 0x3f
 3270 0151 19        		.uleb128 0x19
 3271 0152 03        		.uleb128 0x3
 3272 0153 08        		.uleb128 0x8
 3273 0154 3A        		.uleb128 0x3a
 3274 0155 21        		.uleb128 0x21
 3275 0156 07        		.sleb128 7
 3276 0157 3B        		.uleb128 0x3b
 3277 0158 0B        		.uleb128 0xb
 3278 0159 39        		.uleb128 0x39
 3279 015a 21        		.uleb128 0x21
 3280 015b 0D        		.sleb128 13
 3281 015c 27        		.uleb128 0x27
 3282 015d 19        		.uleb128 0x19
 3283 015e 3C        		.uleb128 0x3c
 3284 015f 19        		.uleb128 0x19
 3285 0160 01        		.uleb128 0x1
 3286 0161 13        		.uleb128 0x13
 3287 0162 00        		.byte	0
 3288 0163 00        		.byte	0
 3289 0164 1A        		.uleb128 0x1a
 3290 0165 2E        		.uleb128 0x2e
 3291 0166 01        		.byte	0x1


 3292 0167 3F        		.uleb128 0x3f
 3293 0168 19        		.uleb128 0x19
 3294 0169 03        		.uleb128 0x3
 3295 016a 0E        		.uleb128 0xe
 3296 016b 3A        		.uleb128 0x3a
 3297 016c 21        		.uleb128 0x21
 3298 016d 06        		.sleb128 6
 3299 016e 3B        		.uleb128 0x3b
 3300 016f 0B        		.uleb128 0xb
 3301 0170 39        		.uleb128 0x39
 3302 0171 21        		.uleb128 0x21
 3303 0172 05        		.sleb128 5
 3304 0173 27        		.uleb128 0x27
 3305 0174 19        		.uleb128 0x19
 3306 0175 49        		.uleb128 0x49
 3307 0176 13        		.uleb128 0x13
 3308 0177 3C        		.uleb128 0x3c
 3309 0178 19        		.uleb128 0x19
 3310 0179 01        		.uleb128 0x1
 3311 017a 13        		.uleb128 0x13
 3312 017b 00        		.byte	0
 3313 017c 00        		.byte	0
 3314 017d 1B        		.uleb128 0x1b
 3315 017e 0B        		.uleb128 0xb
 3316 017f 01        		.byte	0x1
 3317 0180 31        		.uleb128 0x31
 3318 0181 13        		.uleb128 0x13
 3319 0182 11        		.uleb128 0x11
 3320 0183 01        		.uleb128 0x1
 3321 0184 12        		.uleb128 0x12
 3322 0185 06        		.uleb128 0x6
 3323 0186 00        		.byte	0
 3324 0187 00        		.byte	0
 3325 0188 1C        		.uleb128 0x1c
 3326 0189 34        		.uleb128 0x34
 3327 018a 00        		.byte	0
 3328 018b 31        		.uleb128 0x31
 3329 018c 13        		.uleb128 0x13
 3330 018d 02        		.uleb128 0x2
 3331 018e 17        		.uleb128 0x17
 3332 018f B742      		.uleb128 0x2137
 3333 0191 17        		.uleb128 0x17
 3334 0192 00        		.byte	0
 3335 0193 00        		.byte	0
 3336 0194 1D        		.uleb128 0x1d
 3337 0195 0B        		.uleb128 0xb
 3338 0196 01        		.byte	0x1
 3339 0197 55        		.uleb128 0x55
 3340 0198 17        		.uleb128 0x17
 3341 0199 00        		.byte	0
 3342 019a 00        		.byte	0
 3343 019b 1E        		.uleb128 0x1e
 3344 019c 34        		.uleb128 0x34
 3345 019d 00        		.byte	0
 3346 019e 03        		.uleb128 0x3
 3347 019f 0E        		.uleb128 0xe
 3348 01a0 3A        		.uleb128 0x3a


 3349 01a1 21        		.uleb128 0x21
 3350 01a2 01        		.sleb128 1
 3351 01a3 3B        		.uleb128 0x3b
 3352 01a4 0B        		.uleb128 0xb
 3353 01a5 39        		.uleb128 0x39
 3354 01a6 21        		.uleb128 0x21
 3355 01a7 0D        		.sleb128 13
 3356 01a8 49        		.uleb128 0x49
 3357 01a9 13        		.uleb128 0x13
 3358 01aa 02        		.uleb128 0x2
 3359 01ab 17        		.uleb128 0x17
 3360 01ac B742      		.uleb128 0x2137
 3361 01ae 17        		.uleb128 0x17
 3362 01af 00        		.byte	0
 3363 01b0 00        		.byte	0
 3364 01b1 1F        		.uleb128 0x1f
 3365 01b2 0B        		.uleb128 0xb
 3366 01b3 01        		.byte	0x1
 3367 01b4 55        		.uleb128 0x55
 3368 01b5 17        		.uleb128 0x17
 3369 01b6 01        		.uleb128 0x1
 3370 01b7 13        		.uleb128 0x13
 3371 01b8 00        		.byte	0
 3372 01b9 00        		.byte	0
 3373 01ba 20        		.uleb128 0x20
 3374 01bb 34        		.uleb128 0x34
 3375 01bc 00        		.byte	0
 3376 01bd 03        		.uleb128 0x3
 3377 01be 0E        		.uleb128 0xe
 3378 01bf 3A        		.uleb128 0x3a
 3379 01c0 21        		.uleb128 0x21
 3380 01c1 01        		.sleb128 1
 3381 01c2 3B        		.uleb128 0x3b
 3382 01c3 0B        		.uleb128 0xb
 3383 01c4 39        		.uleb128 0x39
 3384 01c5 21        		.uleb128 0x21
 3385 01c6 0D        		.sleb128 13
 3386 01c7 49        		.uleb128 0x49
 3387 01c8 13        		.uleb128 0x13
 3388 01c9 02        		.uleb128 0x2
 3389 01ca 18        		.uleb128 0x18
 3390 01cb 00        		.byte	0
 3391 01cc 00        		.byte	0
 3392 01cd 21        		.uleb128 0x21
 3393 01ce 34        		.uleb128 0x34
 3394 01cf 00        		.byte	0
 3395 01d0 03        		.uleb128 0x3
 3396 01d1 08        		.uleb128 0x8
 3397 01d2 3A        		.uleb128 0x3a
 3398 01d3 21        		.uleb128 0x21
 3399 01d4 01        		.sleb128 1
 3400 01d5 3B        		.uleb128 0x3b
 3401 01d6 0B        		.uleb128 0xb
 3402 01d7 39        		.uleb128 0x39
 3403 01d8 0B        		.uleb128 0xb
 3404 01d9 49        		.uleb128 0x49
 3405 01da 13        		.uleb128 0x13


 3406 01db 02        		.uleb128 0x2
 3407 01dc 17        		.uleb128 0x17
 3408 01dd B742      		.uleb128 0x2137
 3409 01df 17        		.uleb128 0x17
 3410 01e0 00        		.byte	0
 3411 01e1 00        		.byte	0
 3412 01e2 22        		.uleb128 0x22
 3413 01e3 11        		.uleb128 0x11
 3414 01e4 01        		.byte	0x1
 3415 01e5 25        		.uleb128 0x25
 3416 01e6 0E        		.uleb128 0xe
 3417 01e7 13        		.uleb128 0x13
 3418 01e8 0B        		.uleb128 0xb
 3419 01e9 03        		.uleb128 0x3
 3420 01ea 0E        		.uleb128 0xe
 3421 01eb 1B        		.uleb128 0x1b
 3422 01ec 0E        		.uleb128 0xe
 3423 01ed 55        		.uleb128 0x55
 3424 01ee 17        		.uleb128 0x17
 3425 01ef 11        		.uleb128 0x11
 3426 01f0 01        		.uleb128 0x1
 3427 01f1 10        		.uleb128 0x10
 3428 01f2 17        		.uleb128 0x17
 3429 01f3 00        		.byte	0
 3430 01f4 00        		.byte	0
 3431 01f5 23        		.uleb128 0x23
 3432 01f6 24        		.uleb128 0x24
 3433 01f7 00        		.byte	0
 3434 01f8 0B        		.uleb128 0xb
 3435 01f9 0B        		.uleb128 0xb
 3436 01fa 3E        		.uleb128 0x3e
 3437 01fb 0B        		.uleb128 0xb
 3438 01fc 03        		.uleb128 0x3
 3439 01fd 08        		.uleb128 0x8
 3440 01fe 00        		.byte	0
 3441 01ff 00        		.byte	0
 3442 0200 24        		.uleb128 0x24
 3443 0201 17        		.uleb128 0x17
 3444 0202 01        		.byte	0x1
 3445 0203 0B        		.uleb128 0xb
 3446 0204 0B        		.uleb128 0xb
 3447 0205 3A        		.uleb128 0x3a
 3448 0206 0B        		.uleb128 0xb
 3449 0207 3B        		.uleb128 0x3b
 3450 0208 0B        		.uleb128 0xb
 3451 0209 39        		.uleb128 0x39
 3452 020a 0B        		.uleb128 0xb
 3453 020b 01        		.uleb128 0x1
 3454 020c 13        		.uleb128 0x13
 3455 020d 00        		.byte	0
 3456 020e 00        		.byte	0
 3457 020f 25        		.uleb128 0x25
 3458 0210 0F        		.uleb128 0xf
 3459 0211 00        		.byte	0
 3460 0212 0B        		.uleb128 0xb
 3461 0213 0B        		.uleb128 0xb
 3462 0214 00        		.byte	0


 3463 0215 00        		.byte	0
 3464 0216 26        		.uleb128 0x26
 3465 0217 13        		.uleb128 0x13
 3466 0218 01        		.byte	0x1
 3467 0219 03        		.uleb128 0x3
 3468 021a 0E        		.uleb128 0xe
 3469 021b 0B        		.uleb128 0xb
 3470 021c 05        		.uleb128 0x5
 3471 021d 3A        		.uleb128 0x3a
 3472 021e 0B        		.uleb128 0xb
 3473 021f 3B        		.uleb128 0x3b
 3474 0220 05        		.uleb128 0x5
 3475 0221 39        		.uleb128 0x39
 3476 0222 0B        		.uleb128 0xb
 3477 0223 01        		.uleb128 0x1
 3478 0224 13        		.uleb128 0x13
 3479 0225 00        		.byte	0
 3480 0226 00        		.byte	0
 3481 0227 27        		.uleb128 0x27
 3482 0228 0D        		.uleb128 0xd
 3483 0229 00        		.byte	0
 3484 022a 03        		.uleb128 0x3
 3485 022b 0E        		.uleb128 0xe
 3486 022c 3A        		.uleb128 0x3a
 3487 022d 0B        		.uleb128 0xb
 3488 022e 3B        		.uleb128 0x3b
 3489 022f 05        		.uleb128 0x5
 3490 0230 39        		.uleb128 0x39
 3491 0231 0B        		.uleb128 0xb
 3492 0232 49        		.uleb128 0x49
 3493 0233 13        		.uleb128 0x13
 3494 0234 38        		.uleb128 0x38
 3495 0235 05        		.uleb128 0x5
 3496 0236 00        		.byte	0
 3497 0237 00        		.byte	0
 3498 0238 28        		.uleb128 0x28
 3499 0239 26        		.uleb128 0x26
 3500 023a 00        		.byte	0
 3501 023b 49        		.uleb128 0x49
 3502 023c 13        		.uleb128 0x13
 3503 023d 00        		.byte	0
 3504 023e 00        		.byte	0
 3505 023f 29        		.uleb128 0x29
 3506 0240 13        		.uleb128 0x13
 3507 0241 01        		.byte	0x1
 3508 0242 03        		.uleb128 0x3
 3509 0243 0E        		.uleb128 0xe
 3510 0244 0B        		.uleb128 0xb
 3511 0245 0B        		.uleb128 0xb
 3512 0246 3A        		.uleb128 0x3a
 3513 0247 0B        		.uleb128 0xb
 3514 0248 3B        		.uleb128 0x3b
 3515 0249 05        		.uleb128 0x5
 3516 024a 39        		.uleb128 0x39
 3517 024b 0B        		.uleb128 0xb
 3518 024c 01        		.uleb128 0x1
 3519 024d 13        		.uleb128 0x13


 3520 024e 00        		.byte	0
 3521 024f 00        		.byte	0
 3522 0250 2A        		.uleb128 0x2a
 3523 0251 13        		.uleb128 0x13
 3524 0252 01        		.byte	0x1
 3525 0253 0B        		.uleb128 0xb
 3526 0254 0B        		.uleb128 0xb
 3527 0255 3A        		.uleb128 0x3a
 3528 0256 0B        		.uleb128 0xb
 3529 0257 3B        		.uleb128 0x3b
 3530 0258 05        		.uleb128 0x5
 3531 0259 39        		.uleb128 0x39
 3532 025a 0B        		.uleb128 0xb
 3533 025b 01        		.uleb128 0x1
 3534 025c 13        		.uleb128 0x13
 3535 025d 00        		.byte	0
 3536 025e 00        		.byte	0
 3537 025f 2B        		.uleb128 0x2b
 3538 0260 17        		.uleb128 0x17
 3539 0261 01        		.byte	0x1
 3540 0262 0B        		.uleb128 0xb
 3541 0263 0B        		.uleb128 0xb
 3542 0264 3A        		.uleb128 0x3a
 3543 0265 0B        		.uleb128 0xb
 3544 0266 3B        		.uleb128 0x3b
 3545 0267 05        		.uleb128 0x5
 3546 0268 39        		.uleb128 0x39
 3547 0269 0B        		.uleb128 0xb
 3548 026a 01        		.uleb128 0x1
 3549 026b 13        		.uleb128 0x13
 3550 026c 00        		.byte	0
 3551 026d 00        		.byte	0
 3552 026e 2C        		.uleb128 0x2c
 3553 026f 0D        		.uleb128 0xd
 3554 0270 00        		.byte	0
 3555 0271 03        		.uleb128 0x3
 3556 0272 0E        		.uleb128 0xe
 3557 0273 3A        		.uleb128 0x3a
 3558 0274 0B        		.uleb128 0xb
 3559 0275 3B        		.uleb128 0x3b
 3560 0276 05        		.uleb128 0x5
 3561 0277 39        		.uleb128 0x39
 3562 0278 0B        		.uleb128 0xb
 3563 0279 49        		.uleb128 0x49
 3564 027a 13        		.uleb128 0x13
 3565 027b 00        		.byte	0
 3566 027c 00        		.byte	0
 3567 027d 2D        		.uleb128 0x2d
 3568 027e 13        		.uleb128 0x13
 3569 027f 00        		.byte	0
 3570 0280 03        		.uleb128 0x3
 3571 0281 0E        		.uleb128 0xe
 3572 0282 3C        		.uleb128 0x3c
 3573 0283 19        		.uleb128 0x19
 3574 0284 00        		.byte	0
 3575 0285 00        		.byte	0
 3576 0286 2E        		.uleb128 0x2e


 3577 0287 34        		.uleb128 0x34
 3578 0288 00        		.byte	0
 3579 0289 47        		.uleb128 0x47
 3580 028a 13        		.uleb128 0x13
 3581 028b 3A        		.uleb128 0x3a
 3582 028c 0B        		.uleb128 0xb
 3583 028d 3B        		.uleb128 0x3b
 3584 028e 0B        		.uleb128 0xb
 3585 028f 39        		.uleb128 0x39
 3586 0290 0B        		.uleb128 0xb
 3587 0291 02        		.uleb128 0x2
 3588 0292 18        		.uleb128 0x18
 3589 0293 00        		.byte	0
 3590 0294 00        		.byte	0
 3591 0295 2F        		.uleb128 0x2f
 3592 0296 2E        		.uleb128 0x2e
 3593 0297 01        		.byte	0x1
 3594 0298 3F        		.uleb128 0x3f
 3595 0299 19        		.uleb128 0x19
 3596 029a 03        		.uleb128 0x3
 3597 029b 0E        		.uleb128 0xe
 3598 029c 3A        		.uleb128 0x3a
 3599 029d 0B        		.uleb128 0xb
 3600 029e 3B        		.uleb128 0x3b
 3601 029f 0B        		.uleb128 0xb
 3602 02a0 39        		.uleb128 0x39
 3603 02a1 0B        		.uleb128 0xb
 3604 02a2 27        		.uleb128 0x27
 3605 02a3 19        		.uleb128 0x19
 3606 02a4 3C        		.uleb128 0x3c
 3607 02a5 19        		.uleb128 0x19
 3608 02a6 01        		.uleb128 0x1
 3609 02a7 13        		.uleb128 0x13
 3610 02a8 00        		.byte	0
 3611 02a9 00        		.byte	0
 3612 02aa 30        		.uleb128 0x30
 3613 02ab 2E        		.uleb128 0x2e
 3614 02ac 01        		.byte	0x1
 3615 02ad 3F        		.uleb128 0x3f
 3616 02ae 19        		.uleb128 0x19
 3617 02af 03        		.uleb128 0x3
 3618 02b0 0E        		.uleb128 0xe
 3619 02b1 3A        		.uleb128 0x3a
 3620 02b2 0B        		.uleb128 0xb
 3621 02b3 3B        		.uleb128 0x3b
 3622 02b4 05        		.uleb128 0x5
 3623 02b5 39        		.uleb128 0x39
 3624 02b6 0B        		.uleb128 0xb
 3625 02b7 27        		.uleb128 0x27
 3626 02b8 19        		.uleb128 0x19
 3627 02b9 49        		.uleb128 0x49
 3628 02ba 13        		.uleb128 0x13
 3629 02bb 3C        		.uleb128 0x3c
 3630 02bc 19        		.uleb128 0x19
 3631 02bd 01        		.uleb128 0x1
 3632 02be 13        		.uleb128 0x13
 3633 02bf 00        		.byte	0


 3634 02c0 00        		.byte	0
 3635 02c1 31        		.uleb128 0x31
 3636 02c2 2E        		.uleb128 0x2e
 3637 02c3 01        		.byte	0x1
 3638 02c4 3F        		.uleb128 0x3f
 3639 02c5 19        		.uleb128 0x19
 3640 02c6 03        		.uleb128 0x3
 3641 02c7 0E        		.uleb128 0xe
 3642 02c8 3A        		.uleb128 0x3a
 3643 02c9 0B        		.uleb128 0xb
 3644 02ca 3B        		.uleb128 0x3b
 3645 02cb 0B        		.uleb128 0xb
 3646 02cc 39        		.uleb128 0x39
 3647 02cd 0B        		.uleb128 0xb
 3648 02ce 49        		.uleb128 0x49
 3649 02cf 13        		.uleb128 0x13
 3650 02d0 11        		.uleb128 0x11
 3651 02d1 01        		.uleb128 0x1
 3652 02d2 12        		.uleb128 0x12
 3653 02d3 06        		.uleb128 0x6
 3654 02d4 40        		.uleb128 0x40
 3655 02d5 18        		.uleb128 0x18
 3656 02d6 7A        		.uleb128 0x7a
 3657 02d7 19        		.uleb128 0x19
 3658 02d8 01        		.uleb128 0x1
 3659 02d9 13        		.uleb128 0x13
 3660 02da 00        		.byte	0
 3661 02db 00        		.byte	0
 3662 02dc 32        		.uleb128 0x32
 3663 02dd 1D        		.uleb128 0x1d
 3664 02de 01        		.byte	0x1
 3665 02df 31        		.uleb128 0x31
 3666 02e0 13        		.uleb128 0x13
 3667 02e1 52        		.uleb128 0x52
 3668 02e2 01        		.uleb128 0x1
 3669 02e3 B842      		.uleb128 0x2138
 3670 02e5 0B        		.uleb128 0xb
 3671 02e6 11        		.uleb128 0x11
 3672 02e7 01        		.uleb128 0x1
 3673 02e8 12        		.uleb128 0x12
 3674 02e9 06        		.uleb128 0x6
 3675 02ea 58        		.uleb128 0x58
 3676 02eb 0B        		.uleb128 0xb
 3677 02ec 59        		.uleb128 0x59
 3678 02ed 0B        		.uleb128 0xb
 3679 02ee 57        		.uleb128 0x57
 3680 02ef 0B        		.uleb128 0xb
 3681 02f0 01        		.uleb128 0x1
 3682 02f1 13        		.uleb128 0x13
 3683 02f2 00        		.byte	0
 3684 02f3 00        		.byte	0
 3685 02f4 33        		.uleb128 0x33
 3686 02f5 2E        		.uleb128 0x2e
 3687 02f6 01        		.byte	0x1
 3688 02f7 3F        		.uleb128 0x3f
 3689 02f8 19        		.uleb128 0x19
 3690 02f9 03        		.uleb128 0x3


 3691 02fa 0E        		.uleb128 0xe
 3692 02fb 3A        		.uleb128 0x3a
 3693 02fc 0B        		.uleb128 0xb
 3694 02fd 3B        		.uleb128 0x3b
 3695 02fe 0B        		.uleb128 0xb
 3696 02ff 39        		.uleb128 0x39
 3697 0300 0B        		.uleb128 0xb
 3698 0301 11        		.uleb128 0x11
 3699 0302 01        		.uleb128 0x1
 3700 0303 12        		.uleb128 0x12
 3701 0304 06        		.uleb128 0x6
 3702 0305 40        		.uleb128 0x40
 3703 0306 18        		.uleb128 0x18
 3704 0307 7C        		.uleb128 0x7c
 3705 0308 19        		.uleb128 0x19
 3706 0309 01        		.uleb128 0x1
 3707 030a 13        		.uleb128 0x13
 3708 030b 00        		.byte	0
 3709 030c 00        		.byte	0
 3710 030d 34        		.uleb128 0x34
 3711 030e 0B        		.uleb128 0xb
 3712 030f 01        		.byte	0x1
 3713 0310 11        		.uleb128 0x11
 3714 0311 01        		.uleb128 0x1
 3715 0312 12        		.uleb128 0x12
 3716 0313 06        		.uleb128 0x6
 3717 0314 00        		.byte	0
 3718 0315 00        		.byte	0
 3719 0316 35        		.uleb128 0x35
 3720 0317 1D        		.uleb128 0x1d
 3721 0318 00        		.byte	0
 3722 0319 31        		.uleb128 0x31
 3723 031a 13        		.uleb128 0x13
 3724 031b 52        		.uleb128 0x52
 3725 031c 01        		.uleb128 0x1
 3726 031d B842      		.uleb128 0x2138
 3727 031f 0B        		.uleb128 0xb
 3728 0320 11        		.uleb128 0x11
 3729 0321 01        		.uleb128 0x1
 3730 0322 12        		.uleb128 0x12
 3731 0323 06        		.uleb128 0x6
 3732 0324 58        		.uleb128 0x58
 3733 0325 0B        		.uleb128 0xb
 3734 0326 59        		.uleb128 0x59
 3735 0327 0B        		.uleb128 0xb
 3736 0328 57        		.uleb128 0x57
 3737 0329 0B        		.uleb128 0xb
 3738 032a 00        		.byte	0
 3739 032b 00        		.byte	0
 3740 032c 36        		.uleb128 0x36
 3741 032d 2E        		.uleb128 0x2e
 3742 032e 01        		.byte	0x1
 3743 032f 3F        		.uleb128 0x3f
 3744 0330 19        		.uleb128 0x19
 3745 0331 03        		.uleb128 0x3
 3746 0332 0E        		.uleb128 0xe
 3747 0333 3A        		.uleb128 0x3a


 3748 0334 0B        		.uleb128 0xb
 3749 0335 3B        		.uleb128 0x3b
 3750 0336 0B        		.uleb128 0xb
 3751 0337 39        		.uleb128 0x39
 3752 0338 0B        		.uleb128 0xb
 3753 0339 20        		.uleb128 0x20
 3754 033a 0B        		.uleb128 0xb
 3755 033b 01        		.uleb128 0x1
 3756 033c 13        		.uleb128 0x13
 3757 033d 00        		.byte	0
 3758 033e 00        		.byte	0
 3759 033f 37        		.uleb128 0x37
 3760 0340 0B        		.uleb128 0xb
 3761 0341 01        		.byte	0x1
 3762 0342 00        		.byte	0
 3763 0343 00        		.byte	0
 3764 0344 38        		.uleb128 0x38
 3765 0345 34        		.uleb128 0x34
 3766 0346 00        		.byte	0
 3767 0347 03        		.uleb128 0x3
 3768 0348 08        		.uleb128 0x8
 3769 0349 3A        		.uleb128 0x3a
 3770 034a 0B        		.uleb128 0xb
 3771 034b 3B        		.uleb128 0x3b
 3772 034c 0B        		.uleb128 0xb
 3773 034d 39        		.uleb128 0x39
 3774 034e 0B        		.uleb128 0xb
 3775 034f 49        		.uleb128 0x49
 3776 0350 13        		.uleb128 0x13
 3777 0351 00        		.byte	0
 3778 0352 00        		.byte	0
 3779 0353 39        		.uleb128 0x39
 3780 0354 2E        		.uleb128 0x2e
 3781 0355 00        		.byte	0
 3782 0356 3F        		.uleb128 0x3f
 3783 0357 19        		.uleb128 0x19
 3784 0358 03        		.uleb128 0x3
 3785 0359 0E        		.uleb128 0xe
 3786 035a 3A        		.uleb128 0x3a
 3787 035b 0B        		.uleb128 0xb
 3788 035c 3B        		.uleb128 0x3b
 3789 035d 0B        		.uleb128 0xb
 3790 035e 39        		.uleb128 0x39
 3791 035f 0B        		.uleb128 0xb
 3792 0360 49        		.uleb128 0x49
 3793 0361 13        		.uleb128 0x13
 3794 0362 20        		.uleb128 0x20
 3795 0363 0B        		.uleb128 0xb
 3796 0364 00        		.byte	0
 3797 0365 00        		.byte	0
 3798 0366 3A        		.uleb128 0x3a
 3799 0367 2E        		.uleb128 0x2e
 3800 0368 00        		.byte	0
 3801 0369 3F        		.uleb128 0x3f
 3802 036a 19        		.uleb128 0x19
 3803 036b 03        		.uleb128 0x3
 3804 036c 0E        		.uleb128 0xe


 3805 036d 3A        		.uleb128 0x3a
 3806 036e 0B        		.uleb128 0xb
 3807 036f 3B        		.uleb128 0x3b
 3808 0370 0B        		.uleb128 0xb
 3809 0371 39        		.uleb128 0x39
 3810 0372 0B        		.uleb128 0xb
 3811 0373 11        		.uleb128 0x11
 3812 0374 01        		.uleb128 0x1
 3813 0375 12        		.uleb128 0x12
 3814 0376 06        		.uleb128 0x6
 3815 0377 40        		.uleb128 0x40
 3816 0378 18        		.uleb128 0x18
 3817 0379 7C        		.uleb128 0x7c
 3818 037a 19        		.uleb128 0x19
 3819 037b 00        		.byte	0
 3820 037c 00        		.byte	0
 3821 037d 3B        		.uleb128 0x3b
 3822 037e 2E        		.uleb128 0x2e
 3823 037f 00        		.byte	0
 3824 0380 31        		.uleb128 0x31
 3825 0381 13        		.uleb128 0x13
 3826 0382 11        		.uleb128 0x11
 3827 0383 01        		.uleb128 0x1
 3828 0384 12        		.uleb128 0x12
 3829 0385 06        		.uleb128 0x6
 3830 0386 40        		.uleb128 0x40
 3831 0387 18        		.uleb128 0x18
 3832 0388 7A        		.uleb128 0x7a
 3833 0389 19        		.uleb128 0x19
 3834 038a 00        		.byte	0
 3835 038b 00        		.byte	0
 3836 038c 3C        		.uleb128 0x3c
 3837 038d 2E        		.uleb128 0x2e
 3838 038e 01        		.byte	0x1
 3839 038f 31        		.uleb128 0x31
 3840 0390 13        		.uleb128 0x13
 3841 0391 11        		.uleb128 0x11
 3842 0392 01        		.uleb128 0x1
 3843 0393 12        		.uleb128 0x12
 3844 0394 06        		.uleb128 0x6
 3845 0395 40        		.uleb128 0x40
 3846 0396 18        		.uleb128 0x18
 3847 0397 7A        		.uleb128 0x7a
 3848 0398 19        		.uleb128 0x19
 3849 0399 01        		.uleb128 0x1
 3850 039a 13        		.uleb128 0x13
 3851 039b 00        		.byte	0
 3852 039c 00        		.byte	0
 3853 039d 00        		.byte	0
 3854               		.section	.debug_loclists,"",@progbits
 3855 0000 0000 00B9 		.long	.Ldebug_loc3-.Ldebug_loc2
 3856               	.Ldebug_loc2:
 3857 0004 0005      		.word	0x5
 3858 0006 04        		.byte	0x4
 3859 0007 00        		.byte	0
 3860 0008 0000 0000 		.long	0
 3861               	.Ldebug_loc0:


 3862               	.LVUS9:
 3863 000c 04        		.uleb128 .LVU238
 3864 000d 00        		.uleb128 .LVU240
 3865 000e 00        		.uleb128 .LVU240
 3866 000f 00        		.uleb128 .LVU242
 3867 0010 00        		.uleb128 .LVU242
 3868 0011 01        		.uleb128 .LVU244
 3869 0012 01        		.uleb128 .LVU244
 3870 0013 00        		.uleb128 .LVU245
 3871               	.LLST9:
 3872 0014 06        		.byte	0x6
 3873 0015 0000 0000 		.long	.LVL87
 3874 0019 04        		.byte	0x4
 3875 001a 00        		.uleb128 .LVL87-.LVL87
 3876 001b 08        		.uleb128 .LVL88-.LVL87
 3877 001c 02        		.uleb128 0x2
 3878 001d 30        		.byte	0x30
 3879 001e 9F        		.byte	0x9f
 3880 001f 04        		.byte	0x4
 3881 0020 08        		.uleb128 .LVL88-.LVL87
 3882 0021 0A        		.uleb128 .LVL89-.LVL87
 3883 0022 01        		.uleb128 0x1
 3884 0023 50        		.byte	0x50
 3885 0024 04        		.byte	0x4
 3886 0025 0A        		.uleb128 .LVL89-.LVL87
 3887 0026 0C        		.uleb128 .LVL90-.LVL87
 3888 0027 03        		.uleb128 0x3
 3889 0028 70        		.byte	0x70
 3890 0029 7F        		.sleb128 -1
 3891 002a 9F        		.byte	0x9f
 3892 002b 04        		.byte	0x4
 3893 002c 0C        		.uleb128 .LVL90-.LVL87
 3894 002d 12        		.uleb128 .LVL91-.LVL87
 3895 002e 01        		.uleb128 0x1
 3896 002f 50        		.byte	0x50
 3897 0030 00        		.byte	0
 3898               	.LVUS3:
 3899 0031 00        		.uleb128 .LVU70
 3900 0032 00        		.uleb128 .LVU77
 3901 0033 00        		.uleb128 .LVU105
 3902 0034 00        		.uleb128 .LVU114
 3903 0035 00        		.uleb128 .LVU149
 3904 0036 00        		.uleb128 .LVU153
 3905 0037 00        		.uleb128 .LVU154
 3906 0038 00        		.uleb128 .LVU158
 3907               	.LLST3:
 3908 0039 06        		.byte	0x6
 3909 003a 0000 0000 		.long	.LVL24
 3910 003e 04        		.byte	0x4
 3911 003f 00        		.uleb128 .LVL24-.LVL24
 3912 0040 20        		.uleb128 .LVL25-.LVL24
 3913 0041 01        		.uleb128 0x1
 3914 0042 51        		.byte	0x51
 3915 0043 04        		.byte	0x4
 3916 0044 DC02      		.uleb128 .LVL42-.LVL24
 3917 0046 8203      		.uleb128 .LVL43-.LVL24
 3918 0048 01        		.uleb128 0x1


 3919 0049 51        		.byte	0x51
 3920 004a 04        		.byte	0x4
 3921 004b DC05      		.uleb128 .LVL54-.LVL24
 3922 004d E405      		.uleb128 .LVL55-.LVL24
 3923 004f 01        		.uleb128 0x1
 3924 0050 51        		.byte	0x51
 3925 0051 04        		.byte	0x4
 3926 0052 F205      		.uleb128 .LVL56-.LVL24
 3927 0054 FA05      		.uleb128 .LVL57-.LVL24
 3928 0056 01        		.uleb128 0x1
 3929 0057 51        		.byte	0x51
 3930 0058 00        		.byte	0
 3931               	.LVUS6:
 3932 0059 02        		.uleb128 .LVU188
 3933 005a 00        		.uleb128 .LVU190
 3934 005b 00        		.uleb128 .LVU190
 3935 005c 01        		.uleb128 .LVU203
 3936 005d 01        		.uleb128 .LVU203
 3937 005e 00        		.uleb128 .LVU204
 3938 005f 00        		.uleb128 .LVU204
 3939 0060 00        		.uleb128 .LVU206
 3940               	.LLST6:
 3941 0061 06        		.byte	0x6
 3942 0062 0000 0000 		.long	.LVL65
 3943 0066 04        		.byte	0x4
 3944 0067 00        		.uleb128 .LVL65-.LVL65
 3945 0068 14        		.uleb128 .LVL66-.LVL65
 3946 0069 02        		.uleb128 0x2
 3947 006a 3C        		.byte	0x3c
 3948 006b 9F        		.byte	0x9f
 3949 006c 04        		.byte	0x4
 3950 006d 14        		.uleb128 .LVL66-.LVL65
 3951 006e 2E        		.uleb128 .LVL71-.LVL65
 3952 006f 03        		.uleb128 0x3
 3953 0070 72        		.byte	0x72
 3954 0071 7F        		.sleb128 -1
 3955 0072 9F        		.byte	0x9f
 3956 0073 04        		.byte	0x4
 3957 0074 2E        		.uleb128 .LVL71-.LVL65
 3958 0075 30        		.uleb128 .LVL72-.LVL65
 3959 0076 03        		.uleb128 0x3
 3960 0077 72        		.byte	0x72
 3961 0078 7E        		.sleb128 -2
 3962 0079 9F        		.byte	0x9f
 3963 007a 04        		.byte	0x4
 3964 007b 30        		.uleb128 .LVL72-.LVL65
 3965 007c 3E        		.uleb128 .LVL73-.LVL65
 3966 007d 03        		.uleb128 0x3
 3967 007e 72        		.byte	0x72
 3968 007f 7F        		.sleb128 -1
 3969 0080 9F        		.byte	0x9f
 3970 0081 00        		.byte	0
 3971               	.LVUS7:
 3972 0082 00        		.uleb128 .LVU195
 3973 0083 00        		.uleb128 .LVU199
 3974               	.LLST7:
 3975 0084 08        		.byte	0x8


 3976 0085 0000 0000 		.long	.LVL68
 3977 0089 04        		.uleb128 .LVL70-.LVL68
 3978 008a 01        		.uleb128 0x1
 3979 008b 50        		.byte	0x50
 3980 008c 00        		.byte	0
 3981               	.LVUS8:
 3982 008d 00        		.uleb128 .LVU197
 3983 008e 00        		.uleb128 0
 3984               	.LLST8:
 3985 008f 08        		.byte	0x8
 3986 0090 0000 0000 		.long	.LVL69
 3987 0094 1C        		.uleb128 .LFE6-.LVL69
 3988 0095 01        		.uleb128 0x1
 3989 0096 51        		.byte	0x51
 3990 0097 00        		.byte	0
 3991               	.LVUS4:
 3992 0098 03        		.uleb128 .LVU177
 3993 0099 00        		.uleb128 .LVU179
 3994 009a 00        		.uleb128 .LVU179
 3995 009b 00        		.uleb128 .LVU181
 3996 009c 00        		.uleb128 .LVU181
 3997 009d 01        		.uleb128 .LVU183
 3998 009e 01        		.uleb128 .LVU183
 3999 009f 00        		.uleb128 0
 4000               	.LLST4:
 4001 00a0 06        		.byte	0x6
 4002 00a1 0000 0000 		.long	.LVL61
 4003 00a5 04        		.byte	0x4
 4004 00a6 00        		.uleb128 .LVL61-.LVL61
 4005 00a7 08        		.uleb128 .LVL62-.LVL61
 4006 00a8 02        		.uleb128 0x2
 4007 00a9 30        		.byte	0x30
 4008 00aa 9F        		.byte	0x9f
 4009 00ab 04        		.byte	0x4
 4010 00ac 08        		.uleb128 .LVL62-.LVL61
 4011 00ad 0A        		.uleb128 .LVL63-.LVL61
 4012 00ae 01        		.uleb128 0x1
 4013 00af 50        		.byte	0x50
 4014 00b0 04        		.byte	0x4
 4015 00b1 0A        		.uleb128 .LVL63-.LVL61
 4016 00b2 0C        		.uleb128 .LVL64-.LVL61
 4017 00b3 03        		.uleb128 0x3
 4018 00b4 70        		.byte	0x70
 4019 00b5 7F        		.sleb128 -1
 4020 00b6 9F        		.byte	0x9f
 4021 00b7 04        		.byte	0x4
 4022 00b8 0C        		.uleb128 .LVL64-.LVL61
 4023 00b9 14        		.uleb128 .LFE5-.LVL61
 4024 00ba 01        		.uleb128 0x1
 4025 00bb 50        		.byte	0x50
 4026 00bc 00        		.byte	0
 4027               	.Ldebug_loc3:
 4028               		.section	.debug_aranges,"",@progbits
 4029 0000 0000 0024 		.long	0x24
 4030 0004 0002      		.word	0x2
 4031 0006 0000 0000 		.long	.Ldebug_info0
 4032 000a 04        		.byte	0x4


 4033 000b 00        		.byte	0
 4034 000c 0000      		.word	0
 4035 000e 0000      		.word	0
 4036 0010 0000 0000 		.long	.Ltext0
 4037 0014 0000 06F4 		.long	.Letext0-.Ltext0
 4038 0018 0000 0000 		.long	.LFB12
 4039 001c 0000 007C 		.long	.LFE12-.LFB12
 4040 0020 0000 0000 		.long	0
 4041 0024 0000 0000 		.long	0
 4042               		.section	.debug_rnglists,"",@progbits
 4043               	.Ldebug_ranges0:
 4044 0000 0000 0049 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 4045               	.Ldebug_ranges2:
 4046 0004 0005      		.word	0x5
 4047 0006 04        		.byte	0x4
 4048 0007 00        		.byte	0
 4049 0008 0000 0000 		.long	0
 4050               	.LLRL0:
 4051 000c 05        		.byte	0x5
 4052 000d 0000 0000 		.long	.LBB9
 4053 0011 04        		.byte	0x4
 4054 0012 00        		.uleb128 .LBB9-.LBB9
 4055 0013 4E        		.uleb128 .LBE9-.LBB9
 4056 0014 04        		.byte	0x4
 4057 0015 54        		.uleb128 .LBB10-.LBB9
 4058 0016 6C        		.uleb128 .LBE10-.LBB9
 4059 0017 00        		.byte	0
 4060               	.LLRL1:
 4061 0018 05        		.byte	0x5
 4062 0019 0000 0000 		.long	.LBB11
 4063 001d 04        		.byte	0x4
 4064 001e 00        		.uleb128 .LBB11-.LBB11
 4065 001f 50        		.uleb128 .LBE11-.LBB11
 4066 0020 04        		.byte	0x4
 4067 0021 56        		.uleb128 .LBB12-.LBB11
 4068 0022 70        		.uleb128 .LBE12-.LBB11
 4069 0023 00        		.byte	0
 4070               	.LLRL2:
 4071 0024 05        		.byte	0x5
 4072 0025 0000 0000 		.long	.LBB13
 4073 0029 04        		.byte	0x4
 4074 002a 00        		.uleb128 .LBB13-.LBB13
 4075 002b D802      		.uleb128 .LBE13-.LBB13
 4076 002d 04        		.byte	0x4
 4077 002e DC02      		.uleb128 .LBB14-.LBB13
 4078 0030 AA07      		.uleb128 .LBE14-.LBB13
 4079 0032 00        		.byte	0
 4080               	.LLRL5:
 4081 0033 05        		.byte	0x5
 4082 0034 0000 0000 		.long	.LBB16
 4083 0038 04        		.byte	0x4
 4084 0039 00        		.uleb128 .LBB16-.LBB16
 4085 003a 0C        		.uleb128 .LBE16-.LBB16
 4086 003b 04        		.byte	0x4
 4087 003c 14        		.uleb128 .LBB20-.LBB16
 4088 003d 3A        		.uleb128 .LBE20-.LBB16
 4089 003e 00        		.byte	0


 4090               	.LLRL10:
 4091 003f 07        		.byte	0x7
 4092 0040 0000 0000 		.long	.Ltext0
 4093 0044 F40D      		.uleb128 .Letext0-.Ltext0
 4094 0046 07        		.byte	0x7
 4095 0047 0000 0000 		.long	.LFB12
 4096 004b 7C        		.uleb128 .LFE12-.LFB12
 4097 004c 00        		.byte	0
 4098               	.Ldebug_ranges3:
 4099               		.section	.debug_line,"",@progbits
 4100               	.Ldebug_line0:
 4101 0000 0000 04DA 		.section	.debug_str,"MS",@progbits,1
 4101      0003 0000 
 4101      00E1 0201 
 4101      FB0E 0D00 
 4101      0101 0101 
 4102               	.LASF100:
 4103 0000 636F 756E 		.string	"count"
 4103      7400 
 4104               	.LASF129:
 4105 0006 6A75 6467 		.string	"judgment"
 4105      6D65 6E74 
 4105      00
 4106               	.LASF39:
 4107 000f 5F73 697A 		.string	"_size"
 4107      6500 
 4108               	.LASF76:
 4109 0015 5F72 616E 		.string	"_rand48"
 4109      6434 3800 
 4110               	.LASF63:
 4111 001d 5F65 6D65 		.string	"_emergency"
 4111      7267 656E 
 4111      6379 00
 4112               	.LASF116:
 4113 0028 6775 6573 		.string	"guess2"
 4113      7332 00
 4114               	.LASF134:
 4115 002f 6275 6631 		.string	"buf1"
 4115      00
 4116               	.LASF110:
 4117 0034 6361 7264 		.string	"cards"
 4117      7300 
 4118               	.LASF53:
 4119 003a 5F64 6174 		.string	"_data"
 4119      6100 
 4120               	.LASF117:
 4121 0040 6973 5F66 		.string	"is_finish"
 4121      696E 6973 
 4121      6800 
 4122               	.LASF95:
 4123 004a 5F77 6372 		.string	"_wcrtomb_state"
 4123      746F 6D62 
 4123      5F73 7461 
 4123      7465 00
 4124               	.LASF124:
 4125 0059 7365 745F 		.string	"set_task"
 4125      7461 736B 


 4125      00
 4126               	.LASF96:
 4127 0062 5F77 6373 		.string	"_wcsrtombs_state"
 4127      7274 6F6D 
 4127      6273 5F73 
 4127      7461 7465 
 4127      00
 4128               	.LASF7:
 4129 0073 6C6F 6E67 		.string	"long long unsigned int"
 4129      206C 6F6E 
 4129      6720 756E 
 4129      7369 676E 
 4129      6564 2069 
 4130               	.LASF123:
 4131 008a 696E 6974 		.string	"init_kernel"
 4131      5F6B 6572 
 4131      6E65 6C00 
 4132               	.LASF43:
 4133 0096 5F6C 6266 		.string	"_lbfsize"
 4133      7369 7A65 
 4133      00
 4134               	.LASF146:
 4135 009f 5F5F 6C6F 		.string	"__locale_t"
 4135      6361 6C65 
 4135      5F74 00
 4136               	.LASF118:
 4137 00aa 7769 6E6E 		.string	"winner"
 4137      6572 00
 4138               	.LASF93:
 4139 00b1 5F6D 6272 		.string	"_mbrtowc_state"
 4139      746F 7763 
 4139      5F73 7461 
 4139      7465 00
 4140               	.LASF108:
 4141 00c0 6E75 6D62 		.string	"number"
 4141      6572 00
 4142               	.LASF88:
 4143 00c7 5F77 6374 		.string	"_wctomb_state"
 4143      6F6D 625F 
 4143      7374 6174 
 4143      6500 
 4144               	.LASF28:
 4145 00d5 5F5F 746D 		.string	"__tm_sec"
 4145      5F73 6563 
 4145      00
 4146               	.LASF6:
 4147 00de 6C6F 6E67 		.string	"long long int"
 4147      206C 6F6E 
 4147      6720 696E 
 4147      7400 
 4148               	.LASF0:
 4149 00ec 7369 676E 		.string	"signed char"
 4149      6564 2063 
 4149      6861 7200 
 4150               	.LASF140:
 4151 00f8 5F5F 6275 		.string	"__builtin_fwrite"
 4151      696C 7469 


 4151      6E5F 6677 
 4151      7269 7465 
 4151      00
 4152               	.LASF49:
 4153 0109 5F75 6275 		.string	"_ubuf"
 4153      6600 
 4154               	.LASF144:
 4155 010f 7465 7374 		.string	"test3.c"
 4155      332E 6300 
 4156               	.LASF38:
 4157 0117 5F62 6173 		.string	"_base"
 4157      6500 
 4158               	.LASF30:
 4159 011d 5F5F 746D 		.string	"__tm_hour"
 4159      5F68 6F75 
 4159      7200 
 4160               	.LASF125:
 4161 0127 6664 6F70 		.string	"fdopen"
 4161      656E 00
 4162               	.LASF135:
 4163 012e 6669 7273 		.string	"first_display_round"
 4163      745F 6469 
 4163      7370 6C61 
 4163      795F 726F 
 4163      756E 6400 
 4164               	.LASF115:
 4165 0142 6775 6573 		.string	"guess1"
 4165      7331 00
 4166               	.LASF44:
 4167 0149 5F63 6F6F 		.string	"_cookie"
 4167      6B69 6500 
 4168               	.LASF137:
 4169 0151 7465 6D70 		.string	"temp"
 4169      00
 4170               	.LASF4:
 4171 0156 6C6F 6E67 		.string	"long int"
 4171      2069 6E74 
 4171      00
 4172               	.LASF41:
 4173 015f 5F66 6C61 		.string	"_flags"
 4173      6773 00
 4174               	.LASF98:
 4175 0166 4649 4C45 		.string	"FILE"
 4175      00
 4176               	.LASF59:
 4177 016b 5F73 7464 		.string	"_stdin"
 4177      696E 00
 4178               	.LASF51:
 4179 0172 5F62 6C6B 		.string	"_blksize"
 4179      7369 7A65 
 4179      00
 4180               	.LASF105:
 4181 017b 636F 6D30 		.string	"com0out"
 4181      6F75 7400 
 4182               	.LASF71:
 4183 0183 5F63 7674 		.string	"_cvtbuf"
 4183      6275 6600 


 4184               	.LASF52:
 4185 018b 5F6F 6666 		.string	"_offset"
 4185      7365 7400 
 4186               	.LASF111:
 4187 0193 726F 756E 		.string	"round_count"
 4187      645F 636F 
 4187      756E 7400 
 4188               	.LASF94:
 4189 019f 5F6D 6273 		.string	"_mbsrtowcs_state"
 4189      7274 6F77 
 4189      6373 5F73 
 4189      7461 7465 
 4189      00
 4190               	.LASF92:
 4191 01b0 5F6D 6272 		.string	"_mbrlen_state"
 4191      6C65 6E5F 
 4191      7374 6174 
 4191      6500 
 4192               	.LASF109:
 4193 01be 4341 5244 		.string	"CARD"
 4193      00
 4194               	.LASF101:
 4195 01c3 7461 736B 		.string	"task_list"
 4195      5F6C 6973 
 4195      7400 
 4196               	.LASF145:
 4197 01cd 2F68 6F6D 		.string	"/home/students/4494672686/theme3/mtk_1.9"
 4197      652F 7374 
 4197      7564 656E 
 4197      7473 2F34 
 4197      3439 3436 
 4198               	.LASF24:
 4199 01f6 5F73 6967 		.string	"_sign"
 4199      6E00 
 4200               	.LASF138:
 4201 01fc 696E 6974 		.string	"init_card"
 4201      5F63 6172 
 4201      6400 
 4202               	.LASF21:
 4203 0206 5F66 6C6F 		.string	"_flock_t"
 4203      636B 5F74 
 4203      00
 4204               	.LASF61:
 4205 020f 5F73 7464 		.string	"_stderr"
 4205      6572 7200 
 4206               	.LASF26:
 4207 0217 5F42 6967 		.string	"_Bigint"
 4207      696E 7400 
 4208               	.LASF83:
 4209 021f 5F67 616D 		.string	"_gamma_signgam"
 4209      6D61 5F73 
 4209      6967 6E67 
 4209      616D 00
 4210               	.LASF45:
 4211 022e 5F72 6561 		.string	"_read"
 4211      6400 
 4212               	.LASF67:


 4213 0234 5F72 6573 		.string	"_result_k"
 4213      756C 745F 
 4213      6B00 
 4214               	.LASF112:
 4215 023e 746F 705F 		.string	"top_index"
 4215      696E 6465 
 4215      7800 
 4216               	.LASF27:
 4217 0248 5F5F 746D 		.string	"__tm"
 4217      00
 4218               	.LASF149:
 4219 024d 7261 6E64 		.string	"random_generator"
 4219      6F6D 5F67 
 4219      656E 6572 
 4219      6174 6F72 
 4219      00
 4220               	.LASF9:
 4221 025e 756E 7369 		.string	"unsigned int"
 4221      676E 6564 
 4221      2069 6E74 
 4221      00
 4222               	.LASF15:
 4223 026b 5F5F 7763 		.string	"__wchb"
 4223      6862 00
 4224               	.LASF60:
 4225 0272 5F73 7464 		.string	"_stdout"
 4225      6F75 7400 
 4226               	.LASF70:
 4227 027a 5F63 7674 		.string	"_cvtlen"
 4227      6C65 6E00 
 4228               	.LASF5:
 4229 0282 6C6F 6E67 		.string	"long unsigned int"
 4229      2075 6E73 
 4229      6967 6E65 
 4229      6420 696E 
 4229      7400 
 4230               	.LASF42:
 4231 0294 5F66 696C 		.string	"_file"
 4231      6500 
 4232               	.LASF102:
 4233 029a 5345 4D41 		.string	"SEMAPHORE_TYPE"
 4233      5048 4F52 
 4233      455F 5459 
 4233      5045 00
 4234               	.LASF107:
 4235 02a9 636F 6D31 		.string	"com1out"
 4235      6F75 7400 
 4236               	.LASF119:
 4237 02b1 666C 6730 		.string	"flg0"
 4237      00
 4238               	.LASF120:
 4239 02b6 666C 6731 		.string	"flg1"
 4239      00
 4240               	.LASF3:
 4241 02bb 7368 6F72 		.string	"short unsigned int"
 4241      7420 756E 
 4241      7369 676E 


 4241      6564 2069 
 4241      6E74 00
 4242               	.LASF99:
 4243 02ce 5441 534B 		.string	"TASK_ID_TYPE"
 4243      5F49 445F 
 4243      5459 5045 
 4243      00
 4244               	.LASF90:
 4245 02db 5F73 6967 		.string	"_signal_buf"
 4245      6E61 6C5F 
 4245      6275 6600 
 4246               	.LASF81:
 4247 02e7 5F61 7363 		.string	"_asctime_buf"
 4247      7469 6D65 
 4247      5F62 7566 
 4247      00
 4248               	.LASF66:
 4249 02f4 5F72 6573 		.string	"_result"
 4249      756C 7400 
 4250               	.LASF14:
 4251 02fc 5F5F 7763 		.string	"__wch"
 4251      6800 
 4252               	.LASF10:
 4253 0302 7769 6E74 		.string	"wint_t"
 4253      5F74 00
 4254               	.LASF54:
 4255 0309 5F6C 6F63 		.string	"_lock"
 4255      6B00 
 4256               	.LASF128:
 4257 030f 6D61 7070 		.string	"mapping"
 4257      696E 6700 
 4258               	.LASF56:
 4259 0317 5F66 6C61 		.string	"_flags2"
 4259      6773 3200 
 4260               	.LASF133:
 4261 031f 6275 6632 		.string	"buf2"
 4261      00
 4262               	.LASF46:
 4263 0324 5F77 7269 		.string	"_write"
 4263      7465 00
 4264               	.LASF33:
 4265 032b 5F5F 746D 		.string	"__tm_year"
 4265      5F79 6561 
 4265      7200 
 4266               	.LASF141:
 4267 0335 5F5F 6275 		.string	"__builtin_fprintf"
 4267      696C 7469 
 4267      6E5F 6670 
 4267      7269 6E74 
 4267      6600 
 4268               	.LASF20:
 4269 0347 5F4C 4F43 		.string	"_LOCK_RECURSIVE_T"
 4269      4B5F 5245 
 4269      4355 5253 
 4269      4956 455F 
 4269      5400 
 4270               	.LASF132:


 4271 0359 706C 6179 		.string	"player0"
 4271      6572 3000 
 4272               	.LASF131:
 4273 0361 706C 6179 		.string	"player1"
 4273      6572 3100 
 4274               	.LASF130:
 4275 0369 6E65 7874 		.string	"next_number"
 4275      5F6E 756D 
 4275      6265 7200 
 4276               	.LASF32:
 4277 0375 5F5F 746D 		.string	"__tm_mon"
 4277      5F6D 6F6E 
 4277      00
 4278               	.LASF136:
 4279 037e 7368 7566 		.string	"shuffle_card"
 4279      666C 655F 
 4279      6361 7264 
 4279      00
 4280               	.LASF11:
 4281 038b 5F6F 6666 		.string	"_off_t"
 4281      5F74 00
 4282               	.LASF106:
 4283 0392 636F 6D31 		.string	"com1in"
 4283      696E 00
 4284               	.LASF69:
 4285 0399 5F66 7265 		.string	"_freelist"
 4285      656C 6973 
 4285      7400 
 4286               	.LASF143:
 4287 03a3 474E 5520 		.string	"GNU C17 11.4.0 -mcpu=68000 -msoft-float -g -O2 -fomit-frame-pointer"
 4287      4331 3720 
 4287      3131 2E34 
 4287      2E30 202D 
 4287      6D63 7075 
 4288               	.LASF122:
 4289 03e7 6265 6769 		.string	"begin_sch"
 4289      6E5F 7363 
 4289      6800 
 4290               	.LASF103:
 4291 03f1 7365 6D61 		.string	"semaphore"
 4291      7068 6F72 
 4291      6500 
 4292               	.LASF1:
 4293 03fb 756E 7369 		.string	"unsigned char"
 4293      676E 6564 
 4293      2063 6861 
 4293      7200 
 4294               	.LASF72:
 4295 0409 5F6E 6577 		.string	"_new"
 4295      00
 4296               	.LASF104:
 4297 040e 636F 6D30 		.string	"com0in"
 4297      696E 00
 4298               	.LASF97:
 4299 0415 5F68 5F65 		.string	"_h_errno"
 4299      7272 6E6F 
 4299      00


 4300               	.LASF2:
 4301 041e 7368 6F72 		.string	"short int"
 4301      7420 696E 
 4301      7400 
 4302               	.LASF35:
 4303 0428 5F5F 746D 		.string	"__tm_yday"
 4303      5F79 6461 
 4303      7900 
 4304               	.LASF37:
 4305 0432 5F5F 7362 		.string	"__sbuf"
 4305      7566 00
 4306               	.LASF75:
 4307 0439 5F5F 4649 		.string	"__FILE"
 4307      4C45 00
 4308               	.LASF18:
 4309 0440 5F6D 6273 		.string	"_mbstate_t"
 4309      7461 7465 
 4309      5F74 00
 4310               	.LASF40:
 4311 044b 5F5F 7346 		.string	"__sFILE"
 4311      494C 4500 
 4312               	.LASF55:
 4313 0453 5F6D 6273 		.string	"_mbstate"
 4313      7461 7465 
 4313      00
 4314               	.LASF84:
 4315 045c 5F72 616E 		.string	"_rand_next"
 4315      645F 6E65 
 4315      7874 00
 4316               	.LASF86:
 4317 0467 5F6D 626C 		.string	"_mblen_state"
 4317      656E 5F73 
 4317      7461 7465 
 4317      00
 4318               	.LASF62:
 4319 0474 5F69 6E63 		.string	"_inc"
 4319      00
 4320               	.LASF64:
 4321 0479 5F6C 6F63 		.string	"_locale"
 4321      616C 6500 
 4322               	.LASF65:
 4323 0481 5F5F 636C 		.string	"__cleanup"
 4323      6561 6E75 
 4323      7000 
 4324               	.LASF23:
 4325 048b 5F6D 6178 		.string	"_maxwds"
 4325      7764 7300 
 4326               	.LASF57:
 4327 0493 5F72 6565 		.string	"_reent"
 4327      6E74 00
 4328               	.LASF126:
 4329 049a 6673 6361 		.string	"fscanf"
 4329      6E66 00
 4330               	.LASF77:
 4331 04a1 5F73 6565 		.string	"_seed"
 4331      6400 
 4332               	.LASF16:


 4333 04a7 5F5F 636F 		.string	"__count"
 4333      756E 7400 
 4334               	.LASF17:
 4335 04af 5F5F 7661 		.string	"__value"
 4335      6C75 6500 
 4336               	.LASF47:
 4337 04b7 5F73 6565 		.string	"_seek"
 4337      6B00 
 4338               	.LASF12:
 4339 04bd 5F66 706F 		.string	"_fpos_t"
 4339      735F 7400 
 4340               	.LASF121:
 4341 04c5 7261 6E64 		.string	"rand_counter"
 4341      5F63 6F75 
 4341      6E74 6572 
 4341      00
 4342               	.LASF8:
 4343 04d2 6C6F 6E67 		.string	"long double"
 4343      2064 6F75 
 4343      626C 6500 
 4344               	.LASF58:
 4345 04de 5F65 7272 		.string	"_errno"
 4345      6E6F 00
 4346               	.LASF74:
 4347 04e5 6368 6172 		.string	"char"
 4347      00
 4348               	.LASF29:
 4349 04ea 5F5F 746D 		.string	"__tm_min"
 4349      5F6D 696E 
 4349      00
 4350               	.LASF113:
 4351 04f3 7363 6F72 		.string	"score1"
 4351      6531 00
 4352               	.LASF114:
 4353 04fa 7363 6F72 		.string	"score2"
 4353      6532 00
 4354               	.LASF78:
 4355 0501 5F6D 756C 		.string	"_mult"
 4355      7400 
 4356               	.LASF22:
 4357 0507 5F6E 6578 		.string	"_next"
 4357      7400 
 4358               	.LASF80:
 4359 050d 5F73 7472 		.string	"_strtok_last"
 4359      746F 6B5F 
 4359      6C61 7374 
 4359      00
 4360               	.LASF79:
 4361 051a 5F61 6464 		.string	"_add"
 4361      00
 4362               	.LASF19:
 4363 051f 5F5F 554C 		.string	"__ULong"
 4363      6F6E 6700 
 4364               	.LASF91:
 4365 0527 5F67 6574 		.string	"_getdate_err"
 4365      6461 7465 
 4365      5F65 7272 


 4365      00
 4366               	.LASF25:
 4367 0534 5F77 6473 		.string	"_wds"
 4367      00
 4368               	.LASF34:
 4369 0539 5F5F 746D 		.string	"__tm_wday"
 4369      5F77 6461 
 4369      7900 
 4370               	.LASF13:
 4371 0543 5F73 7369 		.string	"_ssize_t"
 4371      7A65 5F74 
 4371      00
 4372               	.LASF89:
 4373 054c 5F6C 3634 		.string	"_l64a_buf"
 4373      615F 6275 
 4373      6600 
 4374               	.LASF73:
 4375 0556 5F73 6967 		.string	"_sig_func"
 4375      5F66 756E 
 4375      6300 
 4376               	.LASF148:
 4377 0560 6765 745F 		.string	"get_random"
 4377      7261 6E64 
 4377      6F6D 00
 4378               	.LASF50:
 4379 056b 5F6E 6275 		.string	"_nbuf"
 4379      6600 
 4380               	.LASF139:
 4381 0571 6677 7269 		.string	"fwrite"
 4381      7465 00
 4382               	.LASF36:
 4383 0578 5F5F 746D 		.string	"__tm_isdst"
 4383      5F69 7364 
 4383      7374 00
 4384               	.LASF82:
 4385 0583 5F6C 6F63 		.string	"_localtime_buf"
 4385      616C 7469 
 4385      6D65 5F62 
 4385      7566 00
 4386               	.LASF48:
 4387 0592 5F63 6C6F 		.string	"_close"
 4387      7365 00
 4388               	.LASF142:
 4389 0599 5F5F 6275 		.string	"__builtin_fscanf"
 4389      696C 7469 
 4389      6E5F 6673 
 4389      6361 6E66 
 4389      00
 4390               	.LASF85:
 4391 05aa 5F72 3438 		.string	"_r48"
 4391      00
 4392               	.LASF87:
 4393 05af 5F6D 6274 		.string	"_mbtowc_state"
 4393      6F77 635F 
 4393      7374 6174 
 4393      6500 
 4394               	.LASF68:


 4395 05bd 5F70 3573 		.string	"_p5s"
 4395      00
 4396               	.LASF147:
 4397 05c2 6D61 696E 		.string	"main"
 4397      00
 4398               	.LASF127:
 4399 05c7 6670 7269 		.string	"fprintf"
 4399      6E74 6600 
 4400               	.LASF31:
 4401 05cf 5F5F 746D 		.string	"__tm_mday"
 4401      5F6D 6461 
 4401      7900 
 4402               		.ident	"GCC: (GNU) 11.4.0"


